<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns="http://www.pharmml.org/pharmml/0.8/PharmML"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.pharmml.org/pharmml/0.8/PharmML http://www.pharmml.org/pharmml/0.8/PharmML"
    xmlns:ct="http://www.pharmml.org/pharmml/0.8/CommonTypes"
    xmlns:math="http://www.pharmml.org/pharmml/0.8/Maths"
    xmlns:po="http://www.pharmml.org/probonto/ProbOnto"
    implementedBy="MJS" writtenVersion="0.9"
    metadataFile="womenModel.rdf" id="i1">
    
<!--    #-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
    # woman.model
    # A PK model for woman, based on Luecke et al. 1994
    #
    # May 2002 - Sandrine Micallef - various modifications for
    # correction of Luecke's model,about human life gestation.
    # Jul 2002 - Frederic Bois - various corrections
    # Sep 2002 - Sandrine Micallef - checking against ICRP ref parameter values
    # Dec 2002 - Frederic Bois - introduction of renal elimination, inhalation
    # input, and rewriting of several comments. Changing the fetal weights 
    # to kg for consistency, and the list of ouputs. Correction of the
    # fetal liver weight parameters and biliary output for mother and fetus. 
    # Reintroduction of placental metabolism. Introduction of gut and lung
    # metabolism for the mother. Modification of gestational age. Modifications
    # to allow simulation before pregnancy. Introduction of several variables
    # for mass balance checking. Correction of fetal blood concentrations.
    # Nov 2003 - Frederic Bois added life time evolution of the mother and
    # multiple pregnancies.
    # Feb 2005 - El Hadji Kone - deletion of the gestation.
    # Mar 2005 - F. Bois: introduction of a null output (set at zero)
    #
    # Units:
    # Volumes:          L
    # Time:             min
    # Flows:            L/min
    # Concentrations:   mM (ie mmol/L)
    # Vmax:             mM/min
    # Km:               mM
    # Masses:           kg
    # Height:           m
    # Perfusion rates:  L/min/kg of tissue
    #
    # Copyright (c) 1993-2008 Free Software Foundation, Inc.-->
    
    <!-- MODEL NAME -->
    <ct:Name>PBPK - women model</ct:Name>
    
    <ct:Description>PBPK -  women - based on MCSim example 'pbpk_woman.model'.</ct:Description>
    
    <IndependentVariable symbId="t"/>

    <ModelDefinition  xmlns="http://www.pharmml.org/pharmml/0.8/ModelDefinition">
        
        <!-- PARAMETER MODEL -->
        <ParameterModel blkId="pm1">
            
<!--        # Nominal parameter values
            # Physiological and pharmacokinetic parameters-->
            
<!--        # Fraction of dead space in lung
            F_dead_space = 0.67;-->
            <Parameter symbId="F_dead_space">
                <ct:Assign><ct:Real>0.67</ct:Real></ct:Assign>
            </Parameter>
            
<!--        # Age in years-->
<!--        Age = 30; -->
            <Parameter symbId="Age">
                <ct:Assign><ct:Real>30</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--        # Fraction of arterial blood
            # Calculated from Filser 2000 p.43
            Fr_art_blood = 0.0178 / (0.0178 + 0.0533);-->
            <Parameter symbId="Fr_art_blood">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.0178</ct:Real>
                        <math:Binop op="plus">
                            <ct:Real>0.0178</ct:Real>
                            <ct:Real>0.0533</ct:Real>
                        </math:Binop>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--        # Tissue volumic weight are assumed to be equal to 1
            # excepted for adipose tissue (cf Brown et al. 97 p.433)
            density_adip = 0.9;
            density_bone = 2.0;-->
            <Parameter symbId="density_adip">
                <ct:Assign><ct:Real>0.9</ct:Real></ct:Assign>
            </Parameter>
            <Parameter symbId="density_bone">
                <ct:Assign><ct:Real>2.0</ct:Real></ct:Assign>
            </Parameter>
                        
<!--        # Scaling factors for the volume of the organs
            # Unit = L/meter of height
            # sc_V_ have been calculated for a standard woman : 1.63m 63kg
            # and using the organ weights given by the ICRP. 2001
            # density for the organs is supposed equal to 1 excepted for
            # adipose tissues (0.9) and bones (2)-->
            
<!--            sc_V_adrenal   = 8.0E-3;-->
            <Parameter symbId="sc_V_adrenal">
                <ct:Assign><ct:Real>8.0E-3</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_bone      = 1.564;-->
            <Parameter symbId="sc_V_bone">
                <ct:Assign><ct:Real>1.564</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_brain     = 0.798;-->
            <Parameter symbId="sc_V_brain">
                <ct:Assign><ct:Real>0.798</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_gut       = 0.589;-->
            <Parameter symbId="sc_V_gut">
                <ct:Assign><ct:Real>0.589</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_gut_lumen = 0.331;-->
            <Parameter symbId="sc_V_gut_lumen">
                <ct:Assign><ct:Real>0.331</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_heart     = 0.153;-->
            <Parameter symbId="sc_V_heart">
                <ct:Assign><ct:Real>0.153</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_kidney    = 0.169;-->
            <Parameter symbId="sc_V_kidney">
                <ct:Assign><ct:Real>0.169</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_liver     = 0.859;-->
            <Parameter symbId="sc_V_liver">
                <ct:Assign><ct:Real>0.859</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_lung      = 0.215;-->
            <Parameter symbId="sc_V_lung">
                <ct:Assign><ct:Real>0.215</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_marrow    = 1.656;  # yellow + red-->
            <Parameter symbId="sc_V_marrow">
                <ct:Assign><ct:Real>1.656</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_muscle    = 11.043;-->
            <Parameter symbId="sc_V_muscle">
                <ct:Assign><ct:Real>11.043</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_other     = 4.012;-->
            <Parameter symbId="sc_V_other">
                <ct:Assign><ct:Real>4.012</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_pancreas  = 0.052;-->
            <Parameter symbId="sc_V_pancreas">
                <ct:Assign><ct:Real>0.052</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_skin      = 1.530;-->
            <Parameter symbId="sc_V_skin">
                <ct:Assign><ct:Real>1.530</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_spleen    = 0.092;-->
            <Parameter symbId="sc_V_spleen">
                <ct:Assign><ct:Real>0.092</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_stomach   = 0.086;-->
            <Parameter symbId="sc_V_stomach">
                <ct:Assign><ct:Real>0.086</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_stom_lumen= 0.098;-->
            <Parameter symbId="sc_V_stom_lumen">
                <ct:Assign><ct:Real>0.098</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_thyroid   = 0.010;-->
            <Parameter symbId="sc_V_thyroid">
                <ct:Assign><ct:Real>0.010</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_uterus    = 0.049;-->
            <Parameter symbId="sc_V_uterus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Perfusion per unit mass of organ.
            # These have been calculated as follows:
            # sc_F_organ = %blood_flow_rate * Card_output / organ_weight
            # the values have been taken from ICRP 2001
            # Organ weight : Table R8 p2-5,
            # Cardiac output : Table R26 p2-23
            # Blood_flow : Table R15 & R17 p7-11 or William & Leggett
            #              Table R31 p2-26 for perfusion of breast and uterus assuming
            #              a factor 10 growth of uterus mass during pregnancy
            # Unit: L/min/kg of tissue-->
            
<!--            sc_F_adip    = 0.03;-->
            <Parameter symbId="sc_F_adip">
                <ct:Assign><ct:Real>0.03</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_adrenal = 1.68;-->
            <Parameter symbId="sc_F_adrenal">
                <ct:Assign><ct:Real>1.68</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_brain   = 0.49;-->
            <Parameter symbId="sc_F_brain">
                <ct:Assign><ct:Real>0.49</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_breast  = 0.27;-->
            <Parameter symbId="sc_F_breast">
                <ct:Assign><ct:Real>0.27</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_eport   = 0.25;-->
            <Parameter symbId="sc_F_eport">
                <ct:Assign><ct:Real>0.25</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_gut     = 0.95;-->
            <Parameter symbId="sc_F_gut">
                <ct:Assign><ct:Real>0.95</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_heart   = 1.08;-->
            <Parameter symbId="sc_F_heart">
                <ct:Assign><ct:Real>1.08</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_kidney  = 4.41;-->
            <Parameter symbId="sc_F_kidney">
                <ct:Assign><ct:Real>4.41</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_marrow  = 0.10;-->
            <Parameter symbId="sc_F_marrow">
                <ct:Assign><ct:Real>0.10</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_muscle  = 0.04;-->
            <Parameter symbId="sc_F_muscle">
                <ct:Assign><ct:Real>0.04</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_pancreas= 0.60;-->
            <Parameter symbId="sc_F_pancreas">
                <ct:Assign><ct:Real>0.60</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_skin    = 0.29;-->
            <Parameter symbId="sc_F_skin">
                <ct:Assign><ct:Real>0.29</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_spleen  = 1.07;-->
            <Parameter symbId="sc_F_spleen">
                <ct:Assign><ct:Real>1.07</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_stomach = 0.52;-->
            <Parameter symbId="sc_F_stomach">
                <ct:Assign><ct:Real>0.52</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_thyroid = 4.72;-->
            <Parameter symbId="sc_F_thyroid">
                <ct:Assign><ct:Real>4.72</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_uterus  = 1.095;-->
            <Parameter symbId="sc_F_uterus">
                <ct:Assign><ct:Real>1.095</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_F_other   = 0.027;-->
            <Parameter symbId="sc_F_other">
                <ct:Assign><ct:Real>0.027</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Transits; Unit: L/min-->
<!--            Fl_stom_lumen = 0.208 / 60.0;   # Intestinal transit for stomach -> gut
                                                # ICRP R8 and R23 p. 6-15-->
            <Parameter symbId="Fl_stom_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.208</ct:Real>
                        <ct:Real>60.0</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
<!--            Fl_gut_lumen  = 0.005 / 60.0;   # Intestinal transit for gut (feces)
                                                # ICRP R8 and R23 p. 6-15-->
            <Parameter symbId="Fl_gut_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.005</ct:Real>
                        <ct:Real>60.0</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
            
<!--            # Parameters indicating the fraction of fat in each organ
                # comming from Fiserova-Bergerova  1983
                # or references found in Van der Mollen 1996
                frac_fat_blood      = 0.0052;     # Papke et al 89.-->
            <Parameter symbId="frac_fat_blood">
                <ct:Assign><ct:Real>0.0052</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_adip       = 0.859;      # Beck 90, Duarte-Davidson 93, Patterson 86
                                                  # Ryan 86 Ryan 85b Schecter 85
                                                  # refs in Van der Molen 96-->
            <Parameter symbId="frac_fat_adip">
                <ct:Assign><ct:Real>0.859</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_adrenal    = 0.049;      # Default value corresponding to
                                                  # "Remaining organs de Van der Molen"-->
            <Parameter symbId="frac_fat_adrenal">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_brain      = 0.11;       # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_brain">
                <ct:Assign><ct:Real>0.11</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_breast     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_breast">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_gut        = 0.065;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_gut">
                <ct:Assign><ct:Real>0.065</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_gut_lumen  = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_gut_lumen">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_heart      = 0.083;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_heart">
                <ct:Assign><ct:Real>0.083</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_kidney     = 0.052;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_kidney">
                <ct:Assign><ct:Real>0.052</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_liver      = 0.049;      # Lenter 81, ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_liver">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_lung       = 0.017;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_lung">
                <ct:Assign><ct:Real>0.017</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_marrow     = 0.186;      # Clarys & Martin 85,ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_marrow">
                <ct:Assign><ct:Real>0.186</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_muscle     = 0.064;      # Lenter 81 & Ryan 85,
                                                  # ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_muscle">
                <ct:Assign><ct:Real>0.064</ct:Real></ct:Assign>
            </Parameter>

<!--            frac_fat_other      = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_other">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_pancreas   = 0.105;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_pancreas">
                <ct:Assign><ct:Real>0.105</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_skin       = 0.150;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_skin">
                <ct:Assign><ct:Real>0.150</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_spleen     = 0.030;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_spleen">
                <ct:Assign><ct:Real>0.030</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_stomach    = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_stomach">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_stom_lumen = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_stom_lumen">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_thymus     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_thymus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_thyroid    = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_thyroid">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_uterus     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_uterus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>


<!--            # Parameters specific of the chemical studied
            # -\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-->
            
<!--            # Transferts depending on the agent; Unit: L/min-->
<!--            Ka_stomach    = 0.1;   # Absorption rate constant for stomach-->
            <Parameter symbId="Ka_stomach">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ka_gut        = 0.1;   # Absorption rate constant for gut-->
            <Parameter symbId="Ka_gut">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ke_bile       = 0.0;   # Biliary excretion rate constant for the woman-->
            <Parameter symbId="Ke_bile">
                <ct:Assign><ct:Real>0.0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Lung/air PC-->
<!--            PC_lung_over_air = 1;-->
            <Parameter symbId="PC_lung_over_air">
                <ct:Assign><ct:Real>1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Adipose tissue over blood partition coefficent-->
<!--            PC_adip     = 1;-->
            <Parameter symbId="PC_adip">
                <ct:Assign><ct:Real>1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            #  renal elimination flow rate (L/min)-->
<!--            Ke_renal   = 1E-3;-->
            <Parameter symbId="Ke_renal">
                <ct:Assign><ct:Real>1E-3</ct:Real></ct:Assign>
            </Parameter>
            
<!--            #  hepatic metabolic rate constant scaling factor ((kg^0.25)/min)
            # Scaling to the 0.25 is supported by Hattis et al. and used by Gentry et al.-->
<!--            scKm_liver   = 0;-->
            <Parameter symbId="scKm_liver">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            #  gut metabolic rate constant scaling factor ((kg^0.25)/min)-->
<!--            scKm_gut     = 0;-->
            <Parameter symbId="scKm_gut">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            #  lung metabolic rate constant scaling factor ((kg^0.25)/min)-->
<!--            scKm_lung    = 0;-->
            <Parameter symbId="scKm_lung">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
        </ParameterModel>


        <StructuralModel blkId="sm1">
            
<!--            # Pure fat /blood partition coef.
            
            PC_fat      = PC_adip / frac_fat_adip;-->
            <ct:Variable symbId="PC_fat">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="PC_adip"/>
                        <ct:SymbRef symbIdRef="frac_fat_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>


<!--        # Tissue over blood partition coefficients-->
        
<!--        PC_adrenal  = frac_fat_adrenal  * PC_fat;-->
            <ct:Variable symbId="PC_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_adrenal"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--        PC_brain    = frac_fat_brain    * PC_fat;-->
            <ct:Variable symbId="PC_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_brain"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--        PC_breast   = frac_fat_breast   * PC_fat;-->
            <ct:Variable symbId="PC_breast">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_breast"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_gut      = frac_fat_gut      * PC_fat;-->
            <ct:Variable symbId="PC_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_gut"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_heart    = frac_fat_heart    * PC_fat;-->
            <ct:Variable symbId="PC_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_heart"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_kidney   = frac_fat_kidney   * PC_fat;-->
            <ct:Variable symbId="PC_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_kidney"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_liver    = frac_fat_liver    * PC_fat;-->
            <ct:Variable symbId="PC_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_liver"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--        PC_lung     = frac_fat_lung     * PC_fat;-->
            <ct:Variable symbId="PC_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_lung"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_marrow   = frac_fat_marrow   * PC_fat;-->
            <ct:Variable symbId="PC_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_marrow"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--        PC_muscle   = frac_fat_muscle   * PC_fat;-->
            <ct:Variable symbId="PC_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_muscle"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_other    = frac_fat_other    * PC_fat;-->
            <ct:Variable symbId="PC_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_other"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_pancreas = frac_fat_pancreas * PC_fat;-->
            <ct:Variable symbId="PC_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_pancreas"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_skin     = frac_fat_skin     * PC_fat;-->
            <ct:Variable symbId="PC_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_skin"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_spleen   = frac_fat_spleen   * PC_fat;-->
            <ct:Variable symbId="PC_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_spleen"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_stomach  = frac_fat_stomach  * PC_fat;-->
            <ct:Variable symbId="PC_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_stomach"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_thymus   = frac_fat_thymus   * PC_fat;-->
            <ct:Variable symbId="PC_thymus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_thymus"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_thyroid  = frac_fat_thyroid  * PC_fat;-->
            <ct:Variable symbId="PC_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_thyroid"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--        PC_uterus   = frac_fat_uterus   * PC_fat;-->
            <ct:Variable symbId="PC_uterus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_uterus"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--        #  tissue volumes (L) are supposed to be proportionnal to the
            # Woman height, excepted for the adipose tissue-->
            
<!--            height = (Age < 1 ? 51 + Age * (76-51) :
                         (Age < 5 ? 76 + (Age-1) * (109-76) / 4.0 :
                         (Age < 10 ? 109 + (Age-5) * (138-109) / 5.0 :
                         (Age < 15 ? 138 + (Age-10) * (161-138) / 5.0 :
                         (Age < 20 ? 161 + (Age-15) * (163-161) / 5.0 :
                                                    163))))) * 0.01;-->
            <ct:Variable symbId="height"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="Age"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="height"/>
                        <!-- 0.51 + Age * (0.76-0.51)-->
                        <math:Binop op="plus">
                            <ct:Real>0.51</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="Age"/>
                                <math:Binop op="minus">
                                    <ct:Real>0.76</ct:Real>
                                    <ct:Real>0.51</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < Age  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 76 + (Age-1) * (109-76) / 4.0 -->
                        <ct:SymbRef symbIdRef="height"/>
                        <math:Binop op="plus">
                            <ct:Real>0.76</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.09</ct:Real>
                                        <ct:Real>0.76</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < Age  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">

                        <!-- 109 + (Age-5) * (138-109) / 5.0 -->
                        <ct:SymbRef symbIdRef="height"/>
                        <math:Binop op="plus">
                            <ct:Real>1.09</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.38</ct:Real>
                                        <ct:Real>1.09</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 138 + (Age-10) * (161-138) / 5.0 -->
                        <ct:SymbRef symbIdRef="height"/>
                        <math:Binop op="plus">
                            <ct:Real>1.38</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.61</ct:Real>
                                        <ct:Real>1.38</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < Age  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 161 + (Age-15) * (163-161) / 5.0 -->
                        <ct:SymbRef symbIdRef="height"/>
                        <math:Binop op="plus">
                            <ct:Real>1.61</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.63</ct:Real>
                                        <ct:Real>1.61</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="hight"/>
                        <ct:Real>1.63</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
            
<!--            V_adrenal    = sc_V_adrenal   * height;-->
            <ct:Variable symbId="V_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_adrenal"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
<!--            V_bone       = sc_V_bone      * height;-->
            <ct:Variable symbId="V_bone">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_bone"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_brain      = sc_V_brain     * height;-->
            <ct:Variable symbId="V_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_brain"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_gut        = sc_V_gut       * height;-->
            <ct:Variable symbId="V_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_gut"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_gut_lumen  = sc_V_gut_lumen * height;-->
            <ct:Variable symbId="V_gut_lumen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_gut_lumen"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_heart      = sc_V_heart     * height;-->
            <ct:Variable symbId="V_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_heart"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
           
<!--            V_kidney     = sc_V_kidney    * height;-->
            <ct:Variable symbId="V_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_kidney"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_liver      = sc_V_liver     * height;-->
            <ct:Variable symbId="V_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_liver"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_lung       = sc_V_lung      * height;-->
            <ct:Variable symbId="V_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_lung"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_marrow     = sc_V_marrow    * height;-->
            <ct:Variable symbId="V_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_marrow"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_muscle     = sc_V_muscle    * height;-->
            <ct:Variable symbId="V_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_muscle"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_other      = sc_V_other     * height;-->
            <ct:Variable symbId="V_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_other"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_pancreas   = sc_V_pancreas  * height;-->
            <ct:Variable symbId="V_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_pancreas"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_skin       = sc_V_skin      * height;-->
            <ct:Variable symbId="V_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_skin"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_spleen     = sc_V_spleen    * height;-->
            <ct:Variable symbId="V_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_spleen"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_stomach    = sc_V_stomach   * height;-->
            <ct:Variable symbId="V_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_stomach"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_stom_lumen = sc_V_stom_lumen* height;-->
            <ct:Variable symbId="V_stom_lumen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_stom_lumen"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_thyroid    = sc_V_thyroid   * height;-->
            <ct:Variable symbId="V_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_thyroid"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Volumes of the organs changing with the time,
            # computed with the equations from Luecke 94 and from ICRP data and Van 
            # Molen model after age 14-->
            
<!--            V_adip = (Age < 1 ? 0.37 + Age * (2.3-0.37) :
            (Age < 5 ? 2.3 + (Age-1) * (3.6-2.3) / 4.0 :
            (Age < 10 ? 3.6 + (Age-5) * (6-3.6) / 5.0 :
            (Age < 15 ? 6.0 + (Age-10) * (14-6) / 5.0 :
            14 + (Age-15) * 17 / 55.0)))) / density_adip;-->
            
            <ct:Variable symbId="V_adip"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="Age"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_adip"/>
                        <!-- 0.37 + Age * (2.3-0.37) / density_adip -->
                        <math:Binop op="plus">
                            <ct:Real>0.37</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="Age"/>
                                    <math:Binop op="minus">
                                        <ct:Real>2.3</ct:Real>
                                        <ct:Real>0.37</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < Age  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 2.3 + (Age-1) * (3.6-2.3) / 4.0 / density_adip -->
                        <ct:SymbRef symbIdRef="V_adip"/>
                        <math:Binop op="plus">
                            <ct:Real>2.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="Age"/>
                                            <ct:Real>1</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>3.6</ct:Real>
                                            <ct:Real>2.3</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>4.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < Age  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.6 + (Age-5) * (6-3.6) / 5.0 / density_adip -->
                        <ct:SymbRef symbIdRef="V_adip"/>
                        <math:Binop op="plus">
                            <ct:Real>3.6</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="Age"/>
                                            <ct:Real>5</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>6</ct:Real>
                                            <ct:Real>3.6</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>5.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.0 + (Age-10) * (14-6) / 5.0 / density_adip -->
                        <ct:SymbRef symbIdRef="V_adip"/>
                        <math:Binop op="plus">
                            <ct:Real>6.0</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="Age"/>
                                            <ct:Real>10</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>14</ct:Real>
                                            <ct:Real>6</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>5.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                
                <!-- 14 + (Age-15) * 17 / 55.0 / density_adip -->
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_adip"/>
                        <math:Binop op="plus">
                            <ct:Real>14</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="Age"/>
                                            <ct:Real>15</ct:Real>
                                        </math:Binop>
                                        <ct:Real>17</ct:Real>
                                    </math:Binop>
                                    <ct:Real>55.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
<!--            V_blood = (Age < 1 ? 0.27 + Age * (0.5-0.27) :
            (Age < 5 ? 0.5 + (Age-1) * (1.4-0.5) / 4.0 :
            (Age < 10 ? 1.4 + (Age-5) * (2.4-1.4) / 5.0 :
            (Age < 15 ? 2.4 + (Age-10) * (3.3-2.4) / 5.0 :
            (Age < 20 ? 3.3 + (Age-15) * (3.9-3.3) / 5.0 :
            3.9)))));-->
            
            <ct:Variable symbId="V_blood"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="Age"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <!-- 0.27 + Age * (0.5-0.27) -->
                        <math:Binop op="plus">
                            <ct:Real>0.27</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="Age"/>
                                <math:Binop op="minus">
                                    <ct:Real>0.5</ct:Real>
                                    <ct:Real>0.27</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < Age  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 0.5 + (Age-1) * (1.4-0.5) / 4.0 -->
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <math:Binop op="plus">
                            <ct:Real>0.5</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.4</ct:Real>
                                        <ct:Real>0.5</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < Age  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 1.4 + (Age-5) * (2.4-1.4) / 5.0 -->
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <math:Binop op="plus">
                            <ct:Real>1.4</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>2.4</ct:Real>
                                        <ct:Real>1.4</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 2.4 + (Age-10) * (3.3-2.4) / 5.0 -->
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <math:Binop op="plus">
                            <ct:Real>2.4</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>3.3</ct:Real>
                                        <ct:Real>2.4</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < Age  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.3 + (Age-15) * (3.9-3.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <math:Binop op="plus">
                            <ct:Real>3.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>3.9</ct:Real>
                                        <ct:Real>3.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <ct:Real>3.9</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
<!--            V_art    = V_blood * Fr_art_blood;   -->
            <ct:Variable symbId="V_art">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <ct:SymbRef symbIdRef="Fr_art_blood"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--            V_ven    = V_blood - V_art;-->
            <ct:Variable symbId="V_ven">
                <ct:Assign>
                    <math:Binop op="minus">
                        <ct:SymbRef symbIdRef="V_blood"/>
                        <ct:SymbRef symbIdRef="V_art"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            V_breast = (Age < 10 ? 0.01 :
            (Age < 15 ? 0.01 + (Age-10) * (0.25-0.01) / 5.0 :
            (Age < 20 ? 0.25 + (Age-15) * (0.5-0.25) / 5.0 : 
            0.5)));-->
            <ct:Variable symbId="V_breast"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 10 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="Age"/>
                            <ct:Real>10</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_breast"/>
                        <ct:Real>0.01</ct:Real>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 0.01 + (Age-10) * (0.25-0.01) / 5.0 -->
                        <ct:SymbRef symbIdRef="V_breast"/>
                        <math:Binop op="plus">
                            <ct:Real>0.01</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>0.25</ct:Real>
                                        <ct:Real>0.01</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 0.25 + (Age-15) * (0.5-0.25) / 5.0 -->
                        <ct:SymbRef symbIdRef="V_breast"/>
                        <math:Binop op="plus">
                            <ct:Real>0.25</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>0.5</ct:Real>
                                        <ct:Real>0.25</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="V_breast"/>
                        <ct:Real>0.5</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
<!--            V_uterus = sc_V_uterus * height;-->
            <ct:Variable symbId="V_uterus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_V_uterus"/>
                        <ct:SymbRef symbIdRef="height"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            W_lean  = V_adrenal + V_blood  +
            V_bone * density_bone     + V_brain   + V_breast +
            V_gut     + V_gut_lumen  + V_heart   + V_kidney +
            V_liver   + V_lung       + V_marrow  + V_muscle +
            V_other   + V_pancreas   + V_skin    + V_spleen +
            V_stomach + V_stom_lumen + V_thyroid + V_uterus;-->
            <ct:Variable symbId="W_lean">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <math:Binop op="plus">
                                                                            <math:Binop op="plus">
                                                                                <math:Binop op="plus">
                                                                                    <math:Binop op="plus">
                                                                                        <math:Binop op="plus">
                                                                                            <math:Binop op="plus">
                                                                                                <math:Binop op="plus">
                                                                                                    <ct:SymbRef symbIdRef="V_adrenal"/>
                                                                                                    <ct:SymbRef symbIdRef="V_blood"/>
                                                                                                </math:Binop>
                                                                                                <math:Binop op="times">
                                                                                                    <ct:SymbRef symbIdRef="V_bone"/>
                                                                                                    <ct:SymbRef symbIdRef="density_bone"/>
                                                                                                </math:Binop>
                                                                                            </math:Binop>
                                                                                            <ct:SymbRef symbIdRef="V_brain"/>
                                                                                        </math:Binop>
                                                                                        <ct:SymbRef symbIdRef="V_breast"/>
                                                                                    </math:Binop>
                                                                                    <ct:SymbRef symbIdRef="V_gut"/>
                                                                                </math:Binop>
                                                                                <ct:SymbRef symbIdRef="V_gut_lumen"/>
                                                                            </math:Binop>
                                                                            <ct:SymbRef symbIdRef="V_heart"/>
                                                                        </math:Binop>
                                                                        <ct:SymbRef symbIdRef="V_kidney"/>
                                                                    </math:Binop>
                                                                    <ct:SymbRef symbIdRef="V_liver"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="V_lung"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="V_marrow"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="V_muscle"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="V_other"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="V_pancreas"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="V_skin"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="V_spleen"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="V_stomach"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="V_stom_lumen"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="V_thyroid"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="V_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            W_total = W_lean + V_adip * density_adip;-->
            <ct:Variable symbId="W_total">
                <ct:Assign>
                    <math:Binop op="plus">
                        <ct:SymbRef symbIdRef="W_lean"/>
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="V_adip"/>
                            <ct:SymbRef symbIdRef="density_adip"/>
                        </math:Binop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Scale metabolism to body masses-->
<!--            dtmp = pow(W_lean, 0.25);-->
            <ct:Variable symbId="dtmp">
                <ct:Assign>
                    <math:Binop op="power">
                        <ct:SymbRef symbIdRef="W_lean"/>
                        <ct:Real>0.25</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            Km_liver   = scKm_liver / dtmp;-->
            <ct:Variable symbId="Km_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="scKm_liver"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            Km_gut     = scKm_gut / dtmp;-->
            <ct:Variable symbId="Km_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="scKm_gut"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            Km_lung    = scKm_lung / dtmp;-->
            <ct:Variable symbId="Km_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="scKm_lung"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Compute actual blood flows
            # Unit: L/min-->
            
<!--            F_adip     = sc_F_adip     * V_adip;-->
            <ct:Variable symbId="F_adip">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_adip"/>
                        <ct:SymbRef symbIdRef="V_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_adrenal  = sc_F_adrenal  * V_adrenal;-->
            <ct:Variable symbId="F_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_adrenal"/>
                        <ct:SymbRef symbIdRef="V_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_brain    = sc_F_brain    * V_brain;-->
            <ct:Variable symbId="F_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_brain"/>
                        <ct:SymbRef symbIdRef="V_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_breast   = sc_F_breast   * V_breast;-->
            <ct:Variable symbId="F_breast">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_breast"/>
                        <ct:SymbRef symbIdRef="V_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_eport    = sc_F_eport    * V_liver;-->
            <ct:Variable symbId="F_eport">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_eport"/>
                        <ct:SymbRef symbIdRef="V_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_gut      = sc_F_gut      * V_gut;-->
            <ct:Variable symbId="F_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_gut"/>
                        <ct:SymbRef symbIdRef="V_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_heart    = sc_F_heart    * V_heart;-->
            <ct:Variable symbId="F_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_heart"/>
                        <ct:SymbRef symbIdRef="V_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_kidney   = sc_F_kidney   * V_kidney;-->
            <ct:Variable symbId="F_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_kidney"/>
                        <ct:SymbRef symbIdRef="V_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_marrow   = sc_F_marrow   * V_marrow;-->
            <ct:Variable symbId="F_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_marrow"/>
                        <ct:SymbRef symbIdRef="V_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_muscle   = sc_F_muscle   * V_muscle;-->
            <ct:Variable symbId="F_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_muscle"/>
                        <ct:SymbRef symbIdRef="V_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_other    = sc_F_other    * V_other ;-->
            <ct:Variable symbId="F_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_other"/>
                        <ct:SymbRef symbIdRef="V_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_pancreas = sc_F_pancreas * V_pancreas;-->
            <ct:Variable symbId="F_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_pancreas"/>
                        <ct:SymbRef symbIdRef="V_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_skin     = sc_F_skin     * V_skin;-->
            <ct:Variable symbId="F_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_skin"/>
                        <ct:SymbRef symbIdRef="V_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_spleen   = sc_F_spleen   * V_spleen;-->
            <ct:Variable symbId="F_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_spleen"/>
                        <ct:SymbRef symbIdRef="V_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_stomach  = sc_F_stomach  * V_stomach;-->
            <ct:Variable symbId="F_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_stomach"/>
                        <ct:SymbRef symbIdRef="V_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_thyroid  = sc_F_thyroid  * V_thyroid;-->
            <ct:Variable symbId="F_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_thyroid"/>
                        <ct:SymbRef symbIdRef="V_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_uterus   = sc_F_uterus   * V_uterus;-->
            <ct:Variable symbId="F_uterus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="sc_F_uterus"/>
                        <ct:SymbRef symbIdRef="V_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            F_liver    = F_eport + F_spleen + F_pancreas + F_gut + F_stomach;-->
            <ct:Variable symbId="F_liver">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <ct:SymbRef symbIdRef="F_eport"/>
                                    <ct:SymbRef symbIdRef="F_spleen"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="F_pancreas"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="F_gut"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="F_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            F_blood    = F_adip  + F_adrenal + F_brain   + F_breast +
            F_heart + F_kidney  + F_liver   + F_marrow + F_muscle +
            F_other + F_skin    + F_thyroid + F_uterus;-->
            <ct:Variable symbId="F_blood">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <ct:SymbRef symbIdRef="F_adip"/>
                                                                    <ct:SymbRef symbIdRef="F_adrenal"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="F_brain"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="F_breast"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="F_heart"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="F_kidney"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="F_liver"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="F_marrow"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="F_muscle"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="F_other"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="F_skin"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="F_thyroid"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="F_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Note: lung is irrigated by a bifurcation and does not enter in the
            # formula above.
            # Pulmonary Flow rate (L/min) (ref ICRP Pub 89, p 99).-->
            
<!--            F_pul = (Age < 1 ? 1.5 + Age * (3.7-1.5) :
            (Age < 5 ? 3.7 + (Age-1) * (5.3-3.7) / 4.0 :
            (Age < 10 ? 5.3 + (Age-5) * (6.3-5.3) / 5.0 :
            (Age < 15 ? 6.3 + (Age-10) * (6.7-6.3) / 5.0 :
            (Age < 20 ? 6.7 + (Age-15) * (6.5-6.7) / 5.0 :
            6.7)))));-->
            
            <ct:Variable symbId="F_pul"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="Age"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <!-- 1.5 + Age * (3.7-1.5)-->
                        <math:Binop op="plus">
                            <ct:Real>1.5</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="Age"/>
                                <math:Binop op="minus">
                                    <ct:Real>3.7</ct:Real>
                                    <ct:Real>1.5</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < Age  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.7 + (Age-1) * (5.3-3.7) / 4.0 -->
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>3.7</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>5.3</ct:Real>
                                        <ct:Real>3.7</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < Age  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 5.3 + (Age-5) * (6.3-5.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>5.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.3</ct:Real>
                                        <ct:Real>5.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.3 + (Age-10) * (6.7-6.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>6.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.7</ct:Real>
                                        <ct:Real>6.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < Age  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="Age"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.7 + (Age-15) * (6.5-6.7) / 5.0 -->
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>6.7</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="Age"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.5</ct:Real>
                                        <ct:Real>6.7</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <ct:Real>6.7</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
<!--            # Alveolar flow rate-->
<!--            F_alv = F_pul * F_dead_space;-->
            <ct:Variable symbId="F_alv">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_pul"/>
                        <ct:SymbRef symbIdRef="F_dead_space"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Concentrations in venous blood at the organ exit and in tissues-->
            
<!--            C_adip       = Q_adip     / V_adip;
            C_adip_v     = C_adip     / PC_adip;
            
            C_adrenal    = Q_adrenal  / V_adrenal;
            C_adrenal_v  = C_adrenal  / PC_adrenal;
            
            C_brain      = Q_brain    / V_brain;
            C_brain_v    = C_brain    / PC_brain;
            
            C_breast     = Q_breast   / V_breast;
            C_breast_v   = C_breast   / PC_breast;
            
            C_gut        = Q_gut      / V_gut;
            C_gut_v      = C_gut      / PC_gut;
            
            C_heart      = Q_heart    / V_heart;
            C_heart_v    = C_heart    / PC_heart;
            
            C_kidney     = Q_kidney   / V_kidney;
            C_kidney_v   = C_kidney   / PC_kidney;
            
            C_liver      = Q_liver    / V_liver;
            C_liver_v    = C_liver    / PC_liver;
            
            C_lung       = Q_lung     / V_lung;
            C_lung_v     = C_lung     / PC_lung;
            
            C_marrow     = Q_marrow   / V_marrow;
            C_marrow_v   = C_marrow   / PC_marrow;
            
            C_muscle     = Q_muscle   / V_muscle;
            C_muscle_v   = C_muscle   / PC_muscle;
            
            C_other      = Q_other    / V_other;
            C_other_v    = C_other    / PC_other;
            
            C_pancreas   = Q_pancreas / V_pancreas;
            C_pancreas_v = C_pancreas / PC_pancreas;
            
            C_skin       = Q_skin     / V_skin;
            C_skin_v     = C_skin     / PC_skin;
            
            C_spleen     = Q_spleen   / V_spleen;
            C_spleen_v   = C_spleen   / PC_spleen;
            
            C_stomach    = Q_stomach  / V_stomach;
            C_stomach_v  = C_stomach  / PC_stomach;
            
            C_thyroid    = Q_thyroid  / V_thyroid;
            C_thyroid_v  = C_thyroid  / PC_thyroid;
            
            C_uterus     = Q_uterus   / V_uterus;
            C_uterus_v   = C_uterus   / PC_uterus;-->
            
            <!-- C_adip_v -->
            <ct:Variable symbId="C_adip">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_adip"/>
                        <ct:SymbRef symbIdRef="V_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_adip_v -->
            <ct:Variable symbId="C_adip_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_adip"/>
                        <ct:SymbRef symbIdRef="PC_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_adrenal -->
            <ct:Variable symbId="C_adrenal">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_adrenal"/>
                        <ct:SymbRef symbIdRef="V_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_adrenal_v -->
            <ct:Variable symbId="C_adrenal_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_adrenal"/>
                        <ct:SymbRef symbIdRef="PC_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_brain -->
            <ct:Variable symbId="C_brain">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_brain"/>
                        <ct:SymbRef symbIdRef="V_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_brain_v -->
            <ct:Variable symbId="C_brain_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_brain"/>
                        <ct:SymbRef symbIdRef="PC_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_breast -->
            <ct:Variable symbId="C_breast">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_breast"/>
                        <ct:SymbRef symbIdRef="V_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_breast_v -->
            <ct:Variable symbId="C_breast_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_breast"/>
                        <ct:SymbRef symbIdRef="PC_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_gut -->
            <ct:Variable symbId="C_gut">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_gut"/>
                        <ct:SymbRef symbIdRef="V_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_gut_v -->
            <ct:Variable symbId="C_gut_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_gut"/>
                        <ct:SymbRef symbIdRef="PC_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_heart -->
            <ct:Variable symbId="C_heart">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_heart"/>
                        <ct:SymbRef symbIdRef="V_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_heart_v -->
            <ct:Variable symbId="C_heart_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_heart"/>
                        <ct:SymbRef symbIdRef="PC_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_kidney -->
            <ct:Variable symbId="C_kidney">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_kidney"/>
                        <ct:SymbRef symbIdRef="V_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_kidney_v -->
            <ct:Variable symbId="C_kidney_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_kidney"/>
                        <ct:SymbRef symbIdRef="PC_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_liver -->
            <ct:Variable symbId="C_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_liver"/>
                        <ct:SymbRef symbIdRef="V_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_liver_v -->
            <ct:Variable symbId="C_liver_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_liver"/>
                        <ct:SymbRef symbIdRef="PC_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_lung -->
            <ct:Variable symbId="C_lung">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_lung"/>
                        <ct:SymbRef symbIdRef="V_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_lung_v -->
            <ct:Variable symbId="C_lung_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_lung"/>
                        <ct:SymbRef symbIdRef="PC_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_marrow -->
            <ct:Variable symbId="C_marrow">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_marrow"/>
                        <ct:SymbRef symbIdRef="V_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_marrow_v -->
            <ct:Variable symbId="C_marrow_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_marrow"/>
                        <ct:SymbRef symbIdRef="PC_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_muscle -->
            <ct:Variable symbId="C_muscle">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_muscle"/>
                        <ct:SymbRef symbIdRef="V_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_muscle_v -->
            <ct:Variable symbId="C_muscle_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_muscle"/>
                        <ct:SymbRef symbIdRef="PC_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_other -->
            <ct:Variable symbId="C_other">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_other"/>
                        <ct:SymbRef symbIdRef="V_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_other_v -->
            <ct:Variable symbId="C_other_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_other"/>
                        <ct:SymbRef symbIdRef="PC_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_pancreas -->
            <ct:Variable symbId="C_pancreas">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_pancreas"/>
                        <ct:SymbRef symbIdRef="V_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_pancreas_v -->
            <ct:Variable symbId="C_pancreas_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_pancreas"/>
                        <ct:SymbRef symbIdRef="PC_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_skin -->
            <ct:Variable symbId="C_skin">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_skin"/>
                        <ct:SymbRef symbIdRef="V_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_skin_v -->
            <ct:Variable symbId="C_skin_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_skin"/>
                        <ct:SymbRef symbIdRef="PC_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_spleen -->
            <ct:Variable symbId="C_spleen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_spleen"/>
                        <ct:SymbRef symbIdRef="V_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_spleen_v -->
            <ct:Variable symbId="C_spleen_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_spleen"/>
                        <ct:SymbRef symbIdRef="PC_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_stomach -->
            <ct:Variable symbId="C_stomach">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_stomach"/>
                        <ct:SymbRef symbIdRef="V_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_stomach_v -->
            <ct:Variable symbId="C_stomach_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_stomach"/>
                        <ct:SymbRef symbIdRef="PC_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_thyroid -->
            <ct:Variable symbId="C_thyroid">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_thyroid"/>
                        <ct:SymbRef symbIdRef="V_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_thyroid_v -->
            <ct:Variable symbId="C_thyroid_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_thyroid"/>
                        <ct:SymbRef symbIdRef="PC_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_uterus -->
            <ct:Variable symbId="C_uterus">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_uterus"/>
                        <ct:SymbRef symbIdRef="V_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!-- C_uterus_v -->
            <ct:Variable symbId="C_uterus_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="C_uterus"/>
                        <ct:SymbRef symbIdRef="PC_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # other compartment concentrations for which PC_ is not needed
            # because equal to 1 (PC_ven and PC_art) or because
            # they are not directly irrigated by blood (diffusion)-->
            
<!--            C_gut_lumen  = Q_gut_lumen  / V_gut_lumen;-->
            <ct:Variable symbId="C_gut_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_gut_lumen"/>
                        <ct:SymbRef symbIdRef="V_gut_lumen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            C_stom_lumen = Q_stom_lumen / V_stom_lumen;-->
            <ct:Variable symbId="C_stom_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_stom_lumen"/>
                        <ct:SymbRef symbIdRef="V_stom_lumen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            C_art        = Q_art        / V_art;-->
            <ct:Variable symbId="C_art">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_art"/>
                        <ct:SymbRef symbIdRef="V_art"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            C_ven        = Q_ven        / V_ven;-->
            <ct:Variable symbId="C_ven">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="Q_ven"/>
                        <ct:SymbRef symbIdRef="V_ven"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Differentials -->
            
<!--            dt(Q_ing) = Q_ing_rate;-->
            <ct:Variable symbId="Q_ing"/>
            <math:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:Degree>
                            <ct:Assign>
                                <ct:Int>1</ct:Int>
                            </ct:Assign>
                        </math:Degree>
                        <math:DiffVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="t"/>
                            </ct:Assign>
                        </math:DiffVariable>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_ing"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <ct:SymbRef symbIdRef="Q_ing_rate"/>
                </ct:RHS>
            </math:DE>
            
<!--            dt(Q_stom_lumen) = Q_ing_rate - 
            (Fl_stom_lumen + Ka_stomach) * C_stom_lumen;-->
            <ct:Variable symbId="Q_stom_lumen"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_stom_lumen"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="minus">
                        <ct:SymbRef symbIdRef="Q_ing_rate"/>
                        <math:Binop op="times">
                            <math:Binop op="plus">
                                <ct:SymbRef symbIdRef="Fl_stom_lumen"/>
                                <ct:SymbRef symbIdRef="Ka_stomach"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="C_stom_lumen"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_stomach)   = Ka_stomach * C_stom_lumen +
            F_stomach * (C_art - C_stomach_v);-->
            <ct:Variable symbId="Q_stomach"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_stomach"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="plus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="Ka_stomach"/>
                            <ct:SymbRef symbIdRef="C_stom_lumen"/>
                        </math:Binop>
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="F_stomach"/>
                            <math:Binop op="minus">
                                <ct:SymbRef symbIdRef="C_art"/>
                                <ct:SymbRef symbIdRef="C_stomach_v"/>
                            </math:Binop>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_feces)      = Fl_gut_lumen * C_gut_lumen;-->
            <ct:Variable symbId="Q_feces"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_feces"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Fl_gut_lumen"/>
                        <ct:SymbRef symbIdRef="C_gut_lumen"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_gut_lumen)  = Fl_stom_lumen * C_stom_lumen + Ke_bile * C_liver -
            Ka_gut * C_gut_lumen - dt(Q_feces);-->
            <ct:Variable symbId="Q_gut_lumen"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_gut_lumen"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="plus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="Fl_stom_lumen"/>
                            <ct:SymbRef symbIdRef="C_stom_lumen"/>
                        </math:Binop>
                        <math:Binop op="minus">
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="Ke_bile"/>
                                <ct:SymbRef symbIdRef="C_liver"/>
                            </math:Binop>
                            <math:Binop op="plus">
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="Ka_gut"/>
                                    <ct:SymbRef symbIdRef="C_gut_lumen"/>
                                </math:Binop>
                                <math:Diff>
                                    <math:ArgumentVariable>
                                        <ct:Assign>
                                            <ct:SymbRef symbIdRef="Q_feces"/>
                                        </ct:Assign>
                                    </math:ArgumentVariable>
                                </math:Diff>
                            </math:Binop>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_met_gut)    = Km_gut * Q_gut;-->
            <ct:Variable symbId="Q_met_gut"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_met_gut"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Km_gut"/>
                        <ct:SymbRef symbIdRef="Q_gut"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_gut)        = Ka_gut * C_gut_lumen +
            F_gut * (C_art - C_gut_v) - dt(Q_met_gut);-->
            <ct:Variable symbId="Q_gut"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_gut"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="plus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="Ka_gut"/>
                            <ct:SymbRef symbIdRef="C_gut_lumen"/>
                        </math:Binop>
                        <math:Binop op="minus">
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="F_gut"/>
                                <math:Binop op="minus">
                                    <ct:SymbRef symbIdRef="C_art"/>
                                    <ct:SymbRef symbIdRef="C_gut_v"/>
                                </math:Binop>
                            </math:Binop>
                            <math:Diff>
                                <math:ArgumentVariable>
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Q_met_gut"/>
                                    </ct:Assign>
                                </math:ArgumentVariable>
                            </math:Diff>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_met_liver)  = Km_liver * Q_liver;-->
            <ct:Variable symbId="Q_met_liver"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_met_liver"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Km_liver"/>
                        <ct:SymbRef symbIdRef="Q_liver"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_liver)   = F_eport    * C_art        + F_spleen * C_spleen_v +
            F_pancreas * C_pancreas_v + F_gut    * C_gut_v +
            F_stomach  * C_stomach_v  - F_liver  * C_liver_v -
            Ke_bile    * C_liver      - dt(Q_met_liver);-->
            <ct:Variable symbId="Q_liver"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_liver"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="minus">
                        <math:Binop op="minus">
                            <math:Binop op="minus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="times">
                                                    <ct:SymbRef symbIdRef="F_eport"/>
                                                    <ct:SymbRef symbIdRef="C_art"/>
                                                </math:Binop>
                                                <math:Binop op="times">
                                                    <ct:SymbRef symbIdRef="F_spleen"/>
                                                    <ct:SymbRef symbIdRef="C_spleen_v"/>
                                                </math:Binop>
                                            </math:Binop>
                                            <math:Binop op="times">
                                                <ct:SymbRef symbIdRef="F_pancreas"/>
                                                <ct:SymbRef symbIdRef="C_pancreas_v"/>
                                            </math:Binop>
                                        </math:Binop>
                                        <math:Binop op="times">
                                            <ct:SymbRef symbIdRef="F_gut"/>
                                            <ct:SymbRef symbIdRef="C_gut_v"/>
                                        </math:Binop>
                                    </math:Binop>
                                    <math:Binop op="times">
                                        <ct:SymbRef symbIdRef="F_stomach"/>
                                        <ct:SymbRef symbIdRef="C_stomach_v"/>
                                    </math:Binop>
                                </math:Binop>
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="F_liver"/>
                                    <ct:SymbRef symbIdRef="C_liver_v"/>
                                </math:Binop>
                            </math:Binop>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="Ke_bile"/>
                                <ct:SymbRef symbIdRef="C_liver"/>
                            </math:Binop>
                        </math:Binop>
                        <math:Diff>
                            <math:ArgumentVariable>
                                <ct:Assign>
                                    <ct:SymbRef symbIdRef="Q_met_liver"/>
                                </ct:Assign>
                            </math:ArgumentVariable>
                        </math:Diff>
                    </math:Binop>                    
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_adip)     = F_adip     * (C_art - C_adip_v);-->
            <ct:Variable symbId="Q_adip"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_adip"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_adip"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_adip_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>

<!--            dt(Q_adrenal)  = F_adrenal  * (C_art - C_adrenal_v);-->
            <ct:Variable symbId="Q_adrenal"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_adrenal"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_adrenal"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_adrenal_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_brain)    = F_brain    * (C_art - C_brain_v);-->
            <ct:Variable symbId="Q_brain"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_brain"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_brain"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_brain_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_breast)   = F_breast   * (C_art - C_breast_v);-->
            <ct:Variable symbId="Q_breast"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_breast"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_breast"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_breast_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_heart)     = F_heart    * (C_art - C_heart_v);-->
            <ct:Variable symbId="Q_heart"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_heart"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_heart"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_heart_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
                        
<!--            dt(Q_inh)       = F_alv      * C_inh;-->
            <ct:Variable symbId="Q_inh"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_inh"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_alv"/>
                        <ct:SymbRef symbIdRef="C_inh"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_exhaled)   = F_alv      * (C_lung / PC_lung_over_air);-->
            <ct:Variable symbId="Q_exhaled"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_exhaled"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_alv"/>
                        <math:Binop op="divide">
                            <ct:SymbRef symbIdRef="C_lung"/>
                            <ct:SymbRef symbIdRef="PC_lung_over_air"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_met_lung)  = Km_lung    *  Q_lung;-->
            <ct:Variable symbId="Q_met_lung"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_met_lung"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Km_lung"/>
                        <ct:SymbRef symbIdRef="Q_lung"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_lung)      = F_blood    * (C_ven - C_lung_v) + dt(Q_inh) -
            dt(Q_exhaled) - dt(Q_met_lung);-->
            <ct:Variable symbId="Q_lung"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_lung"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="plus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="F_blood"/>
                            <math:Binop op="minus">
                                <ct:SymbRef symbIdRef="C_ven"/>
                                <ct:SymbRef symbIdRef="C_lung_v"/>
                            </math:Binop>
                        </math:Binop>
                        <math:Binop op="minus">
                            <math:Diff>
                                <math:ArgumentVariable>
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Q_inh"/>
                                    </ct:Assign>
                                </math:ArgumentVariable>
                            </math:Diff>
                            <math:Binop op="plus">
                                <math:Diff>
                                    <math:ArgumentVariable>
                                        <ct:Assign>
                                            <ct:SymbRef symbIdRef="Q_exhaled"/>
                                        </ct:Assign>
                                    </math:ArgumentVariable>
                                </math:Diff>
                                <math:Diff>
                                    <math:ArgumentVariable>
                                        <ct:Assign>
                                            <ct:SymbRef symbIdRef="Q_met_lung"/>
                                        </ct:Assign>
                                    </math:ArgumentVariable>
                                </math:Diff>
                            </math:Binop>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_urine)     = Ke_renal   * C_kidney;-->
            <ct:Variable symbId="Q_urine"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_urine"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Ke_renal"/>
                        <ct:SymbRef symbIdRef="C_kidney"/>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_kidney)   = F_kidney   * (C_art - C_kidney_v) - dt(Q_urine);-->
            <ct:Variable symbId="Q_kidney"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_kidney"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="minus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="F_kidney"/>
                            <math:Binop op="minus">
                                <ct:SymbRef symbIdRef="C_art"/>
                                <ct:SymbRef symbIdRef="C_kidney_v"/>
                            </math:Binop>
                        </math:Binop>
                        <math:Diff>
                            <math:ArgumentVariable>
                                <ct:Assign>
                                    <ct:SymbRef symbIdRef="Q_urine"/>
                                </ct:Assign>
                            </math:ArgumentVariable>
                        </math:Diff>
                    </math:Binop>
                </ct:RHS>
            </ct:DE> 
            
<!--            dt(Q_marrow)   = F_marrow   * (C_art - C_marrow_v);-->
            <ct:Variable symbId="Q_marrow"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_marrow"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_marrow"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_marrow_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>             
            
<!--            dt(Q_muscle)   = F_muscle   * (C_art - C_muscle_v);-->
            <ct:Variable symbId="Q_muscle"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_muscle"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_muscle"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_muscle_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>  
            
<!--            dt(Q_other)    = F_other    * (C_art - C_other_v);-->
            <ct:Variable symbId="Q_other"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_other"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_other"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_other_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>            
            
<!--            dt(Q_pancreas) = F_pancreas * (C_art - C_pancreas_v);-->
            <ct:Variable symbId="Q_pancreas"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_pancreas"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_pancreas"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_pancreas_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            

<!--            dt(Q_skin)     = F_skin     * (C_art - C_skin_v);-->
            <ct:Variable symbId="Q_skin"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_skin"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_skin"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_skin_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_spleen)   = F_spleen   * (C_art - C_spleen_v);-->
            <ct:Variable symbId="Q_spleen"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_spleen"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_spleen"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_spleen_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_thyroid)  = F_thyroid  * (C_art - C_thyroid_v);-->
            <ct:Variable symbId="Q_thyroid"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_thyroid"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_thyroid"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_thyroid_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_art)      = F_blood * (C_lung_v - C_art);-->
            <ct:Variable symbId="Q_art"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_art"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_blood"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_lung_v"/>
                            <ct:SymbRef symbIdRef="C_art"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_ven)      = C_skin_v    * F_skin    + C_heart_v   * F_heart +
            C_other_v   * F_other   + C_liver_v   * F_liver +
            C_adip_v    * F_adip    + C_adrenal_v * F_adrenal +
            C_marrow_v  * F_marrow  + C_breast_v  * F_breast +
            C_muscle_v  * F_muscle  + C_brain_v   * F_brain +
            C_thyroid_v * F_thyroid + C_uterus_v  * F_uterus +
            C_kidney_v  * F_kidney  - F_blood * C_ven; -->
            <ct:Variable symbId="dtQ_ven"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="dtQ_ven"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="minus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <math:Binop op="times">
                                                                            <ct:SymbRef symbIdRef="C_skin_v"/>
                                                                            <ct:SymbRef symbIdRef="F_skin"/>
                                                                        </math:Binop>
                                                                        <math:Binop op="times">
                                                                            <ct:SymbRef symbIdRef="C_heart_v"/>
                                                                            <ct:SymbRef symbIdRef="F_heart"/>
                                                                        </math:Binop>
                                                                    </math:Binop>
                                                                    <math:Binop op="times">
                                                                        <ct:SymbRef symbIdRef="C_other_v"/>
                                                                        <ct:SymbRef symbIdRef="F_other"/>
                                                                    </math:Binop>
                                                                </math:Binop>
                                                                <math:Binop op="times">
                                                                    <ct:SymbRef symbIdRef="C_liver_v"/>
                                                                    <ct:SymbRef symbIdRef="F_liver"/>
                                                                </math:Binop>
                                                            </math:Binop>
                                                            <math:Binop op="times">
                                                                <ct:SymbRef symbIdRef="C_adip_v"/>
                                                                <ct:SymbRef symbIdRef="F_adip"/>
                                                            </math:Binop>
                                                        </math:Binop>
                                                        <math:Binop op="times">
                                                            <ct:SymbRef symbIdRef="C_adrenal_v"/>
                                                            <ct:SymbRef symbIdRef="F_adrenal"/>
                                                        </math:Binop>
                                                    </math:Binop>
                                                    <math:Binop op="times">
                                                        <ct:SymbRef symbIdRef="C_marrow_v"/>
                                                        <ct:SymbRef symbIdRef="F_marrow"/>
                                                    </math:Binop>
                                                </math:Binop>
                                                <math:Binop op="times">
                                                    <ct:SymbRef symbIdRef="C_breast_v"/>
                                                    <ct:SymbRef symbIdRef="F_breast"/>
                                                </math:Binop>
                                            </math:Binop>
                                            <math:Binop op="times">
                                                <ct:SymbRef symbIdRef="C_muscle_v"/>
                                                <ct:SymbRef symbIdRef="F_muscle"/>
                                            </math:Binop>
                                        </math:Binop>
                                        <math:Binop op="times">
                                            <ct:SymbRef symbIdRef="C_brain_v"/>
                                            <ct:SymbRef symbIdRef="F_brain"/>
                                        </math:Binop>
                                    </math:Binop>
                                    <math:Binop op="times">
                                        <ct:SymbRef symbIdRef="C_thyroid_v"/>
                                        <ct:SymbRef symbIdRef="F_thyroid"/>
                                    </math:Binop>
                                </math:Binop>
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="C_uterus_v"/>
                                    <ct:SymbRef symbIdRef="F_uterus"/>
                                </math:Binop>
                            </math:Binop>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="C_kidney_v"/>
                                <ct:SymbRef symbIdRef="F_kidney"/>
                            </math:Binop>
                        </math:Binop>
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="F_blood"/>
                            <ct:SymbRef symbIdRef="C_ven"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            dt(Q_uterus)  = F_uterus   * (C_art - C_uterus_v);-->
            <ct:Variable symbId="Q_uterus"/>
            <ct:DE>
                <ct:LHS>
                    <math:Diff>
                        <math:ArgumentVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_uterus"/>
                            </ct:Assign>
                        </math:ArgumentVariable>
                    </math:Diff>
                </ct:LHS>
                <ct:RHS>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="F_uterus"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_art"/>
                            <ct:SymbRef symbIdRef="C_uterus_v"/>
                        </math:Binop>
                    </math:Binop>
                </ct:RHS>
            </ct:DE>
            
<!--            # Mass balance check-->
            
<!--            Q_total = Q_adip + Q_adrenal + Q_art + Q_brain + Q_breast + Q_gut + 
            Q_gut_lumen + Q_heart + Q_kidney + Q_liver + Q_lung + 
            Q_marrow + Q_muscle + Q_other + Q_pancreas + Q_skin + 
            Q_spleen + Q_stomach + Q_stom_lumen + Q_thyroid + Q_uterus + 
            Q_ven + Q_met_liver + Q_met_lung + Q_met_gut + Q_exhaled + 
            Q_feces + Q_urine;-->
            <ct:Variable symbId="Q_total">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <math:Binop op="plus">
                                                                            <math:Binop op="plus">
                                                                                <math:Binop op="plus">
                                                                                    <math:Binop op="plus">
                                                                                        <math:Binop op="plus">
                                                                                            <math:Binop op="plus">
                                                                                                <math:Binop op="plus">
                                                                                                    <math:Binop op="plus">
                                                                                                        <math:Binop op="plus">
                                                                                                            <math:Binop op="plus">
                                                                                                                <math:Binop op="plus">
                                                                                                                    <math:Binop op="plus">
                                                                                                                        <math:Binop op="plus">
                                                                                                                            <math:Binop op="plus">
                                                                                                                                <ct:SymbRef symbIdRef="Q_adip"/>
                                                                                                                                <ct:SymbRef symbIdRef="Q_adrenal"/>
                                                                                                                            </math:Binop>
                                                                                                                            <ct:SymbRef symbIdRef="Q_art"/>
                                                                                                                        </math:Binop>
                                                                                                                        <ct:SymbRef symbIdRef="Q_brain"/>
                                                                                                                    </math:Binop>
                                                                                                                    <ct:SymbRef symbIdRef="Q_breast"/>
                                                                                                                </math:Binop>
                                                                                                                <ct:SymbRef symbIdRef="Q_gut"/>
                                                                                                            </math:Binop>
                                                                                                            <ct:SymbRef symbIdRef="Q_gut_lumen"/>
                                                                                                        </math:Binop>
                                                                                                        <ct:SymbRef symbIdRef="Q_heart"/>
                                                                                                    </math:Binop>
                                                                                                    <ct:SymbRef symbIdRef="Q_kidney"/>
                                                                                                </math:Binop>
                                                                                                <ct:SymbRef symbIdRef="Q_liver"/>
                                                                                            </math:Binop>
                                                                                            <ct:SymbRef symbIdRef="Q_lung"/>
                                                                                        </math:Binop>
                                                                                        <ct:SymbRef symbIdRef="Q_marrow"/>
                                                                                    </math:Binop>
                                                                                    <ct:SymbRef symbIdRef="Q_muscle"/>
                                                                                </math:Binop>
                                                                                <ct:SymbRef symbIdRef="Q_other"/>
                                                                            </math:Binop>
                                                                            <ct:SymbRef symbIdRef="Q_pancreas"/>
                                                                        </math:Binop>
                                                                        <ct:SymbRef symbIdRef="Q_skin"/>
                                                                    </math:Binop>
                                                                    <ct:SymbRef symbIdRef="Q_spleen"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="Q_stomach"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="Q_stom_lumen"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="Q_thyroid"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="Q_uterus"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="Q_ven"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="Q_met_liver"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="Q_met_lung"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="Q_met_gut"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="Q_exhaled"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="Q_feces"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="Q_urine"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            } # End of Dynamics-->
            
        </StructuralModel>
    </ModelDefinition>
 
</PharmML>
