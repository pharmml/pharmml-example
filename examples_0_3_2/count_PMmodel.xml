<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.pharmml.org/2013/03/PharmML"
    xsi:schemaLocation="http://www.pharmml.org/2013/03/PharmML http://www.pharmml.org/2013/03/PharmML"
    xmlns:math="http://www.pharmml.org/2013/03/Maths"
    xmlns:ct="http://www.pharmml.org/2013/03/CommonTypes"
    xmlns:ds="http://www.pharmml.org/2013/08/Dataset"
    xmlns:mstep="http://www.pharmml.org/2013/03/ModellingSteps"
    xmlns:mml="http://www.pharmml.org/2013/03/PharmML"
    implementedBy="MJS" writtenVersion="0.3.2" id="i1">
    
    <ct:Name>Poisson model</ct:Name>
    
    <ct:Description>Basic Poisson model - based on code from Elodie Plan</ct:Description>
    
    <IndependentVariable symbId="t"/>
    
    <!-- MODEL -->
    <ModelDefinition xmlns="http://www.pharmml.org/2013/03/ModelDefinition">
        
        <!-- VARIABILITY -->
        <VariabilityModel blkId="randomError" type="parameterVariability">
            <Level symbId="subject"/>
        </VariabilityModel>
        
        <!-- PARAMETERS -->
        <ParameterModel blkId="pm1">
            <SimpleParameter symbId="pop_lambda"/>
            <SimpleParameter symbId="omega_lambda"/>
            <!-- lambda -->
            <RandomVariable symbId="eta_lambda">
                <ct:VariabilityReference>
                    <ct:SymbRef blkIdRef="randomError" symbIdRef="subject"/>
                </ct:VariabilityReference>
                <NormalDistribution xmlns="http://www.uncertml.org/3.0" definition="http://www.uncertml.org/3.0">
                    <mean>
                        <rVal>0</rVal>
                    </mean>
                    <variance>
                        <var varId="omega_lambda"/>
                    </variance>
                </NormalDistribution>
            </RandomVariable>
            <IndividualParameter symbId="lambda">
                <ct:Assign>
                    <math:Equation>
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="pop_lambda"/>
                            <math:Uniop op="exp">
                                <ct:SymbRef symbIdRef="eta_lambda"/>
                            </math:Uniop>
                        </math:Binop>                        
                    </math:Equation>
                </ct:Assign>
            </IndividualParameter>
        </ParameterModel>
        
        <!-- OBSERVATIONS -->
        <ObservationModel blkId="om1">
            <Discrete>
                <CountData>
                    <CountVariable symbId="Y"/>
                    
                    <!-- homogenous Poisson -->
                    <IntensityParameter symbId="Lambda">
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda"/>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <PoissonDistribution xmlns="http://www.uncertml.org/3.0" definition="http://www.uncertml.org/3.0">
                            <rate>
                                <var varId="Lambda"/>
                            </rate>
                        </PoissonDistribution>
                    </PMF>
                    
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <ct:Assign>
                            <Equation xmlns="http://www.pharmml.org/2013/03/Maths">
                                <Binop op="minus">
                                    <Binop op="plus">
                                        <Uniop op="minus">
                                            <ct:SymbRef symbIdRef="Lambda"/>
                                        </Uniop>
                                        <Binop op="times">
                                            <ct:SymbRef symbIdRef="k"/>
                                            <Uniop op="log">
                                                <ct:SymbRef symbIdRef="Lambda"/>
                                            </Uniop>
                                        </Binop>
                                    </Binop>
                                    <Uniop op="factln">
                                        <ct:SymbRef symbIdRef="k"/>
                                    </Uniop>
                                </Binop>
                            </Equation>
                        </ct:Assign>
                    </PMF>
                </CountData>
            </Discrete>
        </ObservationModel>
        
        <ObservationModel blkId="om2">
            <Discrete>
                <CountData>
                    <CountVariable symbId="Y"/>
                    
                    <!-- homogenous Poisson -->
                    <IntensityParameter symbId="Lambda">
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda"/>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <PoissonDistribution xmlns="http://www.uncertml.org/3.0" definition="http://www.uncertml.org/3.0">
                            <rate>
                                <var varId="Lambda"/>
                            </rate>
                        </PoissonDistribution>
                    </PMF>
                    
                    <!-- P(Y=k) = (Lambda^k * exp(-Lambda) / k! -->
                    <PMF linkFunction="identity">
                        <PoissonDistribution xmlns="http://www.uncertml.org/3.0" definition="http://www.uncertml.org/3.0">
                            <rate>
                                <var varId="Lambda"/>
                            </rate>
                        </PoissonDistribution>
                    </PMF>
                </CountData>
            </Discrete>
        </ObservationModel>
    </ModelDefinition>
    
    <mstep:ModellingSteps>
        
        <mstep:NONMEMdataSet oid="NMoid">
            
            <mstep:ColumnMapping>
                <ds:ColumnRef columnIdRef="TIME"/>
                <ct:SymbRef symbIdRef="t"/>
            </mstep:ColumnMapping>
            
            <mstep:ColumnMapping>
                <ds:ColumnRef columnIdRef="DV"/>
                <ct:SymbRef blkIdRef="om1" symbIdRef="k"/>
            </mstep:ColumnMapping>
            
            <ds:DataSet>
                <ds:Definition>
                    <ds:Column columnId="ID" columnType="id" valueType="id" columnNum="1"/>
                    <ds:Column columnId="TIME" columnType="time" valueType="real" columnNum="2"/>
                    <ds:Column columnId="DV" columnType="dv" valueType="real" columnNum="3"/>
                </ds:Definition>
                <ds:ImportData oid="importData">
                    <ds:path>myFile.csv</ds:path>
                    <ds:format>CSV</ds:format>
                    <ds:delimiter>COMMA</ds:delimiter>
                </ds:ImportData>
            </ds:DataSet>
        </mstep:NONMEMdataSet>
        
        <mstep:EstimationStep oid="estStep1">
            
            <mstep:TargetToolReference>
                <ct:OidRef oidRef="NMoid"/>
            </mstep:TargetToolReference>
            
            <mstep:ParametersToEstimate>
                <mstep:ParameterEstimation>
                    <ct:SymbRef symbIdRef="pop_lambda"/>
                    <mstep:InitialEstimate>
                        <ct:Real>1</ct:Real>
                    </mstep:InitialEstimate>
                </mstep:ParameterEstimation>
                
                <mstep:ParameterEstimation>
                    <ct:SymbRef symbIdRef="omega_lambda"/>
                    <mstep:InitialEstimate>
                        <ct:Real>0.6</ct:Real>
                    </mstep:InitialEstimate>
                </mstep:ParameterEstimation>
                
            </mstep:ParametersToEstimate>
            
            <mstep:Operation order="1" opType="estPop"/>
        </mstep:EstimationStep>
        
    </mstep:ModellingSteps>
    
</PharmML>


<!-- implementing RHS of LNegBinom = gammaln(k+1/tau) - factln(k) - gammaln(1/tau) - 1/tau log(1+tau * lambda) + k*log(lambda) - k*log(1/tau + lambda) -->

<!--           <SimpleParameter symbId="logP">
                <ct:Assign>
                    <math:Equation>
                        <math:Binop op="minus">
                            <math:Binop op="plus">
                                <math:Binop op="minus">
                                    <math:Binop op="minus">
                                        <math:Binop op="minus">
                                            <math:Uniop op="gammaln">                   <!-\- gammaln(k+1/tau) -\->
                                                <math:Binop op="plus">
                                                    <ct:SymbRef symbIdRef="k"/>
                                                    <math:Binop op="divide">
                                                        <ct:Real>1</ct:Real>
                                                        <ct:SymbRef symbIdRef="tau"/>
                                                    </math:Binop>
                                                </math:Binop>
                                            </math:Uniop>
                                            <math:Uniop op="factln">                    <!-\- factln(k) -\->
                                                <ct:SymbRef symbIdRef="k"/>
                                            </math:Uniop>
                                        </math:Binop>
                                        <math:Uniop op="gammaln">                       <!-\- gammaln(1/tau) -\->
                                            <math:Binop op="divide">
                                                <ct:Real>1</ct:Real>
                                                <ct:SymbRef symbIdRef="tau"/>
                                            </math:Binop>
                                        </math:Uniop>
                                    </math:Binop>
                                    <math:Binop op="times">                             <!-\- 1/tau log(1+tau * lambda) -\->
                                        <math:Binop op="divide">
                                            <ct:Real>1</ct:Real>
                                            <ct:SymbRef symbIdRef="tau"/>
                                        </math:Binop>
                                        <math:Uniop op="log">
                                            <math:Binop op="plus">
                                                <ct:Real>1</ct:Real>
                                                <math:Binop op="times">
                                                    <ct:SymbRef symbIdRef="tau"/>
                                                    <ct:SymbRef symbIdRef="lambda"/>
                                                </math:Binop>
                                            </math:Binop>
                                        </math:Uniop>
                                    </math:Binop>
                                </math:Binop>
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="k"/>                         <!-\- k*log(lambda) -\->
                                    <math:Uniop op="log">
                                        <ct:SymbRef symbIdRef="lambda"/>
                                    </math:Uniop>
                                </math:Binop>
                            </math:Binop>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="k"/>                             <!-\- k*log(1/tau + lambda) -\->
                                <math:Uniop op="log">
                                    <math:Binop op="plus">
                                        <math:Binop op="divide">
                                            <ct:Real>1</ct:Real>
                                            <ct:SymbRef symbIdRef="tau"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="lambda"/>
                                    </math:Binop>
                                </math:Uniop>
                            </math:Binop>
                        </math:Binop>
                   </math:Equation>
                </ct:Assign>
            </SimpleParameter>-->

