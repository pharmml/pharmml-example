<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.pharmml.org/pharmml/0.6/PharmML"
    xsi:schemaLocation="http://www.pharmml.org/pharmml/0.6/PharmML http://www.pharmml.org/pharmml/0.6/PharmML"
    xmlns:math="http://www.pharmml.org/pharmml/0.6/Maths"
    xmlns:ct="http://www.pharmml.org/pharmml/0.6/CommonTypes"
    xmlns:ds="http://www.pharmml.org/pharmml/0.6/Dataset"
    xmlns:mstep="http://www.pharmml.org/pharmml/0.6/ModellingSteps"
    implementedBy="MJS" writtenVersion="0.6" id="i1">
    
    <ct:Name>PMAK model</ct:Name>
    
    <ct:Description>Poisson with Markovian dependency model - based on code from Elodie Plan</ct:Description>
    
    <IndependentVariable symbId="t"/>
    
    <!-- MODEL -->
    <ModelDefinition xmlns="http://www.pharmml.org/pharmml/0.6/ModelDefinition">
        
        <ParameterModel blkId="pm1">
            <SimpleParameter symbId="lambda1"/>
            <!-- individual def with IIV omitted -->
            <SimpleParameter symbId="lambda2"/>
            <!-- individual def with IIV omitted -->
        </ParameterModel>
        
        <!-- OBSERVATIONS -->
        <ObservationModel blkId="om1">
            <Discrete>
                <CountData>
                    <SimpleParameter symbId="k"/>
                    <CountVariable symbId="y"/>
                    <PreviousCountVariable symbId="yp"/>
                    
                    <Dependance type="discreteMarkov"/>
                    
                    <!-- Version 1 -->
                    <!-- Poisson with Markov - choose one lambda dependent on yp -->
                    <IntensityParameter symbId="Lambda">
                        <ct:Assign>
                            <math:Equation>
                                <math:Piecewise>
                                    <math:Piece>
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda1"/>
                                        <math:Condition>
                                            <math:LogicBinop op="eq">
                                                <ct:SymbRef symbIdRef="yp"/>
                                                <ct:Real>0</ct:Real>
                                            </math:LogicBinop>
                                        </math:Condition>
                                    </math:Piece>
                                    <math:Piece>
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda2"/>
                                        <math:Condition>
                                            <math:Otherwise/>
                                        </math:Condition>
                                    </math:Piece>
                                </math:Piecewise>
                            </math:Equation>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    
                    <!-- log(P(y=k)) = -lambda + k*log(lambda) - factln(k) -->
                    <PMF linkFunction="log">
                        <math:LogicBinop op="eq">
                            <ct:SymbRef symbIdRef="y"/>
                            <ct:SymbRef symbIdRef="k"/>
                        </math:LogicBinop>
                        <ct:Assign>
                            <math:Equation>
                                <math:Binop op="plus">
                                    <math:Uniop op="minus">
                                        <ct:SymbRef symbIdRef="Lambda"/>
                                    </math:Uniop>
                                    <math:Binop op="plus">
                                        <math:Binop op="times">
                                            <ct:SymbRef symbIdRef="k"/>
                                            <math:Uniop op="log">
                                                <ct:SymbRef symbIdRef="Lambda"/>
                                            </math:Uniop>
                                        </math:Binop>
                                        <math:Uniop op="factln">
                                            <ct:SymbRef symbIdRef="k"/>
                                        </math:Uniop>
                                    </math:Binop>
                                </math:Binop>
                            </math:Equation>
                        </ct:Assign>
                    </PMF>
                </CountData>
            </Discrete>
       </ObservationModel>
        
        
        <!-- ALTERNATIVE formulation -->
        <ObservationModel blkId="om2">
            <Discrete>
                <CountData>
                    <SimpleParameter symbId="k"/>
                    <CountVariable symbId="y"/>
                    <PreviousCountVariable symbId="yp"/>
                    
                    <Dependance type="discreteMarkov"/>
                    
                    <!-- Version 2 -->
                    <!-- Poisson with Markov -->
                    <IntensityParameter symbId="Lambda1">
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda1"/>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    <IntensityParameter symbId="Lambda2">
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda2"/>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    
                    <!-- log(P(y=k | yp=0)) = -lambda1 + k*log(lambda1) - factln(k) -->
                    <PMF linkFunction="log">
                        <CurrentState>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="y"/>
                                <ct:SymbRef symbIdRef="k"/>
                            </math:LogicBinop>
                        </CurrentState>
                        <PreviousState>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="y"/>
                                <ct:Int>0</ct:Int>
                            </math:LogicBinop>
                        </PreviousState>
                        <PoissonDistribution xmlns="http://www.uncertml.org/3.0" definition="http://www.uncertml.org/3.0">
                            <rate>
                                <var varId="Lambda1"/>
                            </rate>
                        </PoissonDistribution>
                    </PMF>
                    
                    <!-- log(P(y=k | yp != 0)) = -lambda2 + k*log(lambda2) - factln(k) -->
                    <PMF linkFunction="log">
                        <CurrentState>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="y"/>
                                <ct:SymbRef symbIdRef="k"/>
                            </math:LogicBinop>                            
                        </CurrentState>
                        <PreviousState>
                            <math:LogicBinop op="neq">
                                <ct:SymbRef symbIdRef="y"/>
                                <ct:Int>0</ct:Int>
                            </math:LogicBinop>
                        </PreviousState>
                        <!-- omitted -->
                        <!-- equation analog as above with Lambda2 instead of Lambda1 --> 
                    </PMF>
                    
                </CountData>
            </Discrete>
        </ObservationModel>
    </ModelDefinition>

    <mstep:ModellingSteps>
        
        <mstep:ExternalDataSet toolName="NONMEM" oid="NMoid">
            
            <mstep:ColumnMapping>
                <ds:ColumnRef columnIdRef="TIME"/>
                <ct:SymbRef symbIdRef="t"/>
            </mstep:ColumnMapping>
            
            <mstep:ColumnMapping>
                <ds:ColumnRef columnIdRef="Y"/>
                <ct:SymbRef blkIdRef="om1" symbIdRef="y"/>  <!-- or 'om2' -->
            </mstep:ColumnMapping>
            
            <ds:DataSet>
                <ds:Definition>
                    <ds:Column columnId="ID" columnType="id" valueType="string" columnNum="1"/>
                    <ds:Column columnId="TIME" columnType="time" valueType="real" columnNum="2"/>
                    <ds:Column columnId="Y" columnType="dv" valueType="int" columnNum="3"/>
                </ds:Definition>
                <ds:ExternalFile oid="dataOid">
                    <ds:path>example.csv</ds:path>
                    <ds:format>CSV</ds:format>
                    <ds:delimiter>COMMA</ds:delimiter>
                </ds:ExternalFile>
            </ds:DataSet>
        </mstep:ExternalDataSet>
    </mstep:ModellingSteps>
    
</PharmML>
