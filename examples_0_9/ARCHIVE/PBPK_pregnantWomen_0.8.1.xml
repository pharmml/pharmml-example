<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns="http://www.pharmml.org/pharmml/0.8/PharmML"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.pharmml.org/pharmml/0.8/PharmML http://www.pharmml.org/pharmml/0.8/PharmML"
    xmlns:ct="http://www.pharmml.org/pharmml/0.8/CommonTypes"
    xmlns:math="http://www.pharmml.org/pharmml/0.8/Maths"
    xmlns:po="http://www.pharmml.org/probonto/ProbOnto"
    implementedBy="MJS" writtenVersion="0.8.1"
    metadataFile="womenModel.rdf" id="i1">
    
<!-- # PBPK_woman.model
# A PBPK model for woman, over lifetime, with possible gestations and 
# lactations, based on Luecke et al. 1994
#
# May 2002 - Sandrine Micallef - various modifications for
# correction of Luecke's model.
# Jul 2002 - Frederic Bois - various corrections
# Sep 2002 - Sandrine Micallef - checking against ICRP ref parameter values
# Dec 2002 - Frederic Bois - introduction of renal elimination, inhalation
# input, and rewriting of several comments. Changing the fetal weights 
# to kg for consistency, and the list of ouputs. Correction of the
# fetal liver weight parameters and biliary output for mother and fetus. 
# Reintroduction of placental metabolism. Introduction of gut and lung
# metabolism for the mother. Modification of gestational age. Modifications
# to allow simulation before pregnancy. Introduction of several variables
# for mass balance checking. Correction of fetal blood concentrations.
# Nov 2003 - Frederic Bois added life time evolution of the mother and
# multiple pregnancies.
#
# Units:
# Volumes:          L
# Time:             min
# Flows:            L/min
# Concentrations:   mM (ie mmol/L)
# Vmax:             mM/min
# Km:               mM
# Masses:           kg
# Height:           m
# Perfusion rates:  L/min/kg of tissue
#
# Copyright (c) 1993-2008 Free Software Foundation, Inc. -->
    
    <!-- MODEL NAME -->
    <ct:Name>PBPK - pregnant women model</ct:Name>
    
    <ct:Description>PBPK - pregnant women - based on MCSim example 'pbpk_pregnant.model'.</ct:Description>
    
    <IndependentVariable symbId="t"/>

    <ModelDefinition  xmlns="http://www.pharmml.org/pharmml/0.8/ModelDefinition">
        
        <!-- PARAMETER MODEL -->
        <ParameterModel blkId="pm1">
            
            <!-- SET BY USER -->
            <Parameter symbId="Gestation">
                <ct:Assign>
                    <ct:Real>1</ct:Real>
                </ct:Assign>
            </Parameter>
            
<!--            # Constants to compute fetal weight 
            # =================================-->
<!--            EWo   = 0.00137;          # Value from Luecke et al. Weight in grams at time 0-->
            <Parameter symbId="EWo">
                <ct:Assign><ct:Real>0.00137</ct:Real></ct:Assign>
            </Parameter>
<!--            alpha = 0.01306;          # Value from Luecke et al.-->
            <Parameter symbId="alpha">
                <ct:Assign><ct:Real>0.01306</ct:Real></ct:Assign>
            </Parameter>
<!--            Ao    = 0.1974;           # Value from Luecke et al.-->
            <Parameter symbId="Ao">
                <ct:Assign><ct:Real>0.1974</ct:Real></ct:Assign>
            </Parameter>
<!--            min_in_day = 1440;        # Number of min in a day (the allometric equation
                                      # given by Luecke calculates the fetal weight
                                      # as a function of gestational age in day)-->
            <Parameter symbId="min_in_day">
                <ct:Assign><ct:Real>1440</ct:Real></ct:Assign>
            </Parameter>
            
            
            
<!--        # Nominal parameter values
            # Physiological and pharmacokinetic parameters-->
            
<!--        # Fraction of dead space in lung
            F_dead_space = 0.67;-->
            <Parameter symbId="F_dead_space">
                <ct:Assign><ct:Real>0.67</ct:Real></ct:Assign>
            </Parameter>
                        
<!--        # Fraction of arterial blood
            # Calculated from Filser 2000 p.43
            Fr_art_blood = 0.0178 / (0.0178 + 0.0533);-->
            <Parameter symbId="Fr_art_blood">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.0178</ct:Real>
                        <math:Binop op="plus">
                            <ct:Real>0.0178</ct:Real>
                            <ct:Real>0.0533</ct:Real>
                        </math:Binop>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--        # Tissue volumic weight are assumed to be equal to 1
            # excepted for adipose tissue (cf Brown et al. 97 p.433)
            density_adip = 0.9;
            density_bone = 2.0;-->
            <Parameter symbId="density_adip">
                <ct:Assign><ct:Real>0.9</ct:Real></ct:Assign>
            </Parameter>
            <Parameter symbId="density_bone">
                <ct:Assign><ct:Real>2.0</ct:Real></ct:Assign>
            </Parameter>
                        
<!--        # Scaling factors for the volume of the organs
            # Unit = L/meter of height
            # sc_V_ have been calculated for a standard woman : 1.63m 63kg
            # and using the organ weights given by the ICRP. 2001
            # density for the organs is supposed equal to 1 excepted for
            # adipose tissues (0.9) and bones (2)-->
            
<!--            sc_V_adrenal   = 8.0E-3;-->
            <Parameter symbId="sc_V_adrenal">
                <ct:Assign><ct:Real>8.0E-3</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_bone      = 1.564;-->
            <Parameter symbId="sc_V_bone">
                <ct:Assign><ct:Real>1.564</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_brain     = 0.798;-->
            <Parameter symbId="sc_V_brain">
                <ct:Assign><ct:Real>0.798</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_gut       = 0.589;-->
            <Parameter symbId="sc_V_gut">
                <ct:Assign><ct:Real>0.589</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_gut_lumen = 0.331;-->
            <Parameter symbId="sc_V_gut_lumen">
                <ct:Assign><ct:Real>0.331</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_heart     = 0.153;-->
            <Parameter symbId="sc_V_heart">
                <ct:Assign><ct:Real>0.153</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_kidney    = 0.169;-->
            <Parameter symbId="sc_V_kidney">
                <ct:Assign><ct:Real>0.169</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_liver     = 0.859;-->
            <Parameter symbId="sc_V_liver">
                <ct:Assign><ct:Real>0.859</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_lung      = 0.215;-->
            <Parameter symbId="sc_V_lung">
                <ct:Assign><ct:Real>0.215</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_marrow    = 1.656;  # yellow + red-->
            <Parameter symbId="sc_V_marrow">
                <ct:Assign><ct:Real>1.656</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_muscle    = 11.043;-->
            <Parameter symbId="sc_V_muscle">
                <ct:Assign><ct:Real>11.043</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_other     = 4.012;-->
            <Parameter symbId="sc_V_other">
                <ct:Assign><ct:Real>4.012</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_pancreas  = 0.052;-->
            <Parameter symbId="sc_V_pancreas">
                <ct:Assign><ct:Real>0.052</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_skin      = 1.530;-->
            <Parameter symbId="sc_V_skin">
                <ct:Assign><ct:Real>1.530</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_spleen    = 0.092;-->
            <Parameter symbId="sc_V_spleen">
                <ct:Assign><ct:Real>0.092</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_stomach   = 0.086;-->
            <Parameter symbId="sc_V_stomach">
                <ct:Assign><ct:Real>0.086</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_stom_lumen= 0.098;-->
            <Parameter symbId="sc_V_stom_lumen">
                <ct:Assign><ct:Real>0.098</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_thyroid   = 0.010;-->
            <Parameter symbId="sc_V_thyroid">
                <ct:Assign><ct:Real>0.010</ct:Real></ct:Assign>
            </Parameter>
<!--            sc_V_uterus    = 0.049;-->
            <Parameter symbId="sc_V_uterus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Perfusion per unit mass of organ.
            # These have been calculated as follows:
            # sc_F_organ = %blood_flow_rate * Card_output / organ_weight
            # the values have been taken from ICRP 2001
            # Organ weight : Table R8 p2-5,
            # Cardiac output : Table R26 p2-23
            # Blood_flow : Table R15 & R17 p7-11 or William & Leggett
            #              Table R31 p2-26 for perfusion of breast and uterus assuming
            #              a factor 10 growth of uterus mass during pregnancy
            # Unit: L/min/kg of tissue-->
            
<!--            Msc_F_adip    = 0.03;-->
            <Parameter symbId="Msc_F_adip">
                <ct:Assign><ct:Real>0.03</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_adrenal = 1.68;-->
            <Parameter symbId="Msc_F_adrenal">
                <ct:Assign><ct:Real>1.68</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_brain   = 0.49;-->
            <Parameter symbId="Msc_F_brain">
                <ct:Assign><ct:Real>0.49</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_breast  = 0.27;-->
            <Parameter symbId="Msc_F_breast">
                <ct:Assign><ct:Real>0.27</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_eport   = 0.25;-->
            <Parameter symbId="Msc_F_eport">
                <ct:Assign><ct:Real>0.25</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_gut     = 0.95;-->
            <Parameter symbId="Msc_F_gut">
                <ct:Assign><ct:Real>0.95</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_heart   = 1.08;-->
            <Parameter symbId="Msc_F_heart">
                <ct:Assign><ct:Real>1.08</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_kidney  = 4.41;-->
            <Parameter symbId="Msc_F_kidney">
                <ct:Assign><ct:Real>4.41</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_marrow  = 0.10;-->
            <Parameter symbId="Msc_F_marrow">
                <ct:Assign><ct:Real>0.10</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_muscle  = 0.04;-->
            <Parameter symbId="Msc_F_muscle">
                <ct:Assign><ct:Real>0.04</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_pancreas= 0.60;-->
            <Parameter symbId="Msc_F_pancreas">
                <ct:Assign><ct:Real>0.60</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_skin    = 0.29;-->
            <Parameter symbId="Msc_F_skin">
                <ct:Assign><ct:Real>0.29</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_spleen  = 1.07;-->
            <Parameter symbId="Msc_F_spleen">
                <ct:Assign><ct:Real>1.07</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_stomach = 0.52;-->
            <Parameter symbId="Msc_F_stomach">
                <ct:Assign><ct:Real>0.52</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_thyroid = 4.72;-->
            <Parameter symbId="Msc_F_thyroid">
                <ct:Assign><ct:Real>4.72</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_uterus  = 1.095;-->
            <Parameter symbId="Msc_F_uterus">
                <ct:Assign><ct:Real>1.095</ct:Real></ct:Assign>
            </Parameter>
<!--            Msc_F_other   = 0.027;-->
            <Parameter symbId="Msc_F_other">
                <ct:Assign><ct:Real>0.027</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Esc_F_adip    = 0.03;  # = Msc_F_adip-->
            <Parameter symbId="Esc_F_adip">
                <ct:Assign><ct:Real>0.03</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_adrenal = 3.40;  # ICRP 2001 Table 3.4 p3-26-->
            <Parameter symbId="Esc_F_adrenal">
                <ct:Assign><ct:Real>3.40</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_brain   = 0.25;  # ICRP 2001 Table 3.4 p3-26-->
            <Parameter symbId="Esc_F_brain">
                <ct:Assign><ct:Real>0.25</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_eport   = 0.25;  # = Msc_F_eport-->
            <Parameter symbId="Esc_F_eport">
                <ct:Assign><ct:Real>0.25</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_gut     = 1.01;  # ICRP 2001 Table 3.4 p3-26-->
            <Parameter symbId="Esc_F_gut">
                <ct:Assign><ct:Real>1.01</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_heart   = 1.65;  # ICRP 2001 Table 3.4 p3-26-->
            <Parameter symbId="Esc_F_heart">
                <ct:Assign><ct:Real>1.65</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_kidney  = 1.55;  # ICRP 2001 Table 3.4 p3-26-->
            <Parameter symbId="Esc_F_kidney">
                <ct:Assign><ct:Real>1.55</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_marrow  = 0.10;  # = Msc_F_marrow-->
            <Parameter symbId="Esc_F_marrow">
                <ct:Assign><ct:Real>0.10</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_muscle  = 0.04;  # = Msc_F_muscle-->
            <Parameter symbId="Esc_F_muscle">
                <ct:Assign><ct:Real>0.04</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_pancreas= 0.60;  # = Msc_F_pancreas-->
            <Parameter symbId="Esc_F_pancreas">
                <ct:Assign><ct:Real>0.6</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_placenta= 0.11;-->
            <Parameter symbId="Esc_F_placenta">
                <ct:Assign><ct:Real>0.11</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_skin    = 0.29;  # = Msc_F_skin-->
            <Parameter symbId="Esc_F_skin">
                <ct:Assign><ct:Real>0.29</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_spleen  = 1.07;  # = Msc_F_spleen-->
            <Parameter symbId="Esc_F_spleen">
                <ct:Assign><ct:Real>1.07</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_stomach = 0.52;  # = Msc_F_stomach-->
            <Parameter symbId="Esc_F_stomach">
                <ct:Assign><ct:Real>0.52</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_thymus  = 5.48;  # based on adult value-->
            <Parameter symbId="Esc_F_thymus">
                <ct:Assign><ct:Real>5.48</ct:Real></ct:Assign>
            </Parameter><!--
            Esc_F_thyroid = 4.72;  # = Msc_F_thyroid-->
            <Parameter symbId="Esc_F_thyroid">
                <ct:Assign><ct:Real>4.72</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_lung    = 4.21;  # computed from values for female adult
            # bronchial circulation-->
            <Parameter symbId="Esc_F_lung">
                <ct:Assign><ct:Real>4.21</ct:Real></ct:Assign>
            </Parameter>
<!--            Esc_F_other   = 0.027; # = Msc_F_other-->
            <Parameter symbId="Esc_F_other">
                <ct:Assign><ct:Real>0.027</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Parameters used to calculate the mother's changing organ weights
            # (given by Luecke 94)-->
<!--            Ma_adip    = 0.0009911;-->
            <Parameter symbId="Ma_adip">
                <ct:Assign><ct:Real>0.0009911</ct:Real></ct:Assign>
            </Parameter>
<!--            Mb_adip    = 2.142;-->
            <Parameter symbId="Mb_adip">
                <ct:Assign><ct:Real>2.142</ct:Real></ct:Assign>
            </Parameter>
<!--            Mc_adip    = -0.1405;-->
            <Parameter symbId="Mc_adip">
                <ct:Assign><ct:Real>-0.1405</ct:Real></ct:Assign>
            </Parameter>
<!--            Ma_blood   = 0.000004712;-->
            <Parameter symbId="Ma_blood">
                <ct:Assign><ct:Real>0.000004712</ct:Real></ct:Assign>
            </Parameter>
<!--            Mb_blood   = 3.295;-->
            <Parameter symbId="Mb_blood">
                <ct:Assign><ct:Real>3.295</ct:Real></ct:Assign>
            </Parameter>
<!--            Mc_blood   = -0.2164;-->
            <Parameter symbId="Mc_blood">
                <ct:Assign><ct:Real>-0.2164</ct:Real></ct:Assign>
            </Parameter>
<!--            Ma_breast  = 0.01274;-->
            <Parameter symbId="Ma_breast">
                <ct:Assign><ct:Real>0.01274</ct:Real></ct:Assign>
            </Parameter>
<!--            Mb_breast  = 0.608;-->
            <Parameter symbId="Mb_breast">
                <ct:Assign><ct:Real>0.608</ct:Real></ct:Assign>
            </Parameter>
<!--            Mc_breast  = -0.02209;-->
            <Parameter symbId="Mc_breast">
                <ct:Assign><ct:Real>-0.02209</ct:Real></ct:Assign>
            </Parameter>
<!--            Ma_uterus  = 0.0002057;-->
            <Parameter symbId="Ma_uterus">
                <ct:Assign><ct:Real>0.0002057</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            a_amniot   = 1.0E-3;    # in 1st approximation, same as Ma_uterus-->
            <Parameter symbId="a_amniot">
                <ct:Assign><ct:Real>1.0E-3</ct:Real></ct:Assign>
            </Parameter>
            
<!--            a_placenta = 0.00020;   # same as Ma_uterus-->
            <Parameter symbId="a_placenta">
                <ct:Assign><ct:Real>0.00020</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Parameters used to compute the fetal organ weights (given by Luecke 94)-->
            
<!--            Ea_adip     = 0.1803 * 0.001;    # adipose-->
            <Parameter symbId="Ea_adip">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.1803</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_adrenal  = 0.007467 * 0.001;  # adrenals-->
            <Parameter symbId="Ea_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.007467</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_adrenal  = 0.01425;-->
            <Parameter symbId="Eb_adrenal">
                <ct:Assign><ct:Real>0.01425</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_blood    = 0.06796 * 0.001;   # blood-->
            <Parameter symbId="Ea_blood">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.06796</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_blood    = 0.9729;-->
            <Parameter symbId="Eb_blood">
                <ct:Assign><ct:Real>0.9729</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_bone     = 0.1834 * 0.001;    # bone computed from values collected at the-->
<!--                                             # end of gestation, ICRP table R8 & R1 p 3-6-->
            <Parameter symbId="Ea_bone">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.1834</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_brain    = 0.1871 * 0.001;    # brain-->
            <Parameter symbId="Ea_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.1871</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_brain    = 0.9585;-->
            <Parameter symbId="Eb_brain">
                <ct:Assign><ct:Real>0.9585</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_gut      = 0.0163 * 0.001;    # gut-->
            <Parameter symbId="Ea_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.0163</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_heart    = 0.01012 * 0.001;   # heart-->
            <Parameter symbId="Ea_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.01012</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_heart    = 0.9489;-->
            <Parameter symbId="Eb_heart">
                <ct:Assign><ct:Real>0.9489</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_kidney   = 0.004203 * 0.001;  # kidney-->
            <Parameter symbId="Ea_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.004203</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_kidney   = 1.255;-->
            <Parameter symbId="Eb_kidney">
                <ct:Assign><ct:Real>1.255</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ec_kidney   = -0.02127;-->
            <Parameter symbId="Ec_kidney">
                <ct:Assign><ct:Real>-0.02127</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_liver    = 0.06050 * 0.001;   # liver-->
            <Parameter symbId="Ea_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.06050</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_liver    = 0.9737;            # F. Bois increased by a factor 10-->
            <Parameter symbId="Eb_liver">
                <ct:Assign><ct:Real>0.9737</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_lung     = 0.09351 * 0.001;   # lung-->
            <Parameter symbId="Ea_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.09351</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_marrow   = 0.01425 * 0.001;   # bone maorrow-->
            <Parameter symbId="Ea_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.01425</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_marrow   = 0.9943;-->
            <Parameter symbId="Eb_marrow">
                <ct:Assign><ct:Real>0.9943</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_muscle   = 0.02668 * 0.001;   # muscle-->
            <Parameter symbId="Ea_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.02668</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_muscle   = 1.234;-->
            <Parameter symbId="Eb_muscle">
                <ct:Assign><ct:Real>1.234</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_other    = 0.1575 * 0.001;    # other-->
            <Parameter symbId="Ea_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.1575</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_pancreas = 0.1883 * 0.001;    # pancreas-->
            <Parameter symbId="Ea_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.1883</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_pancreas = 0.3854;-->
            <Parameter symbId="Eb_pancreas">
                <ct:Assign><ct:Real>0.3854</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_skin     = 0.0514 * 0.001;    # skin-->
            <Parameter symbId="Ea_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.0514</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Ea_spleen   = 0.0001302 * 0.001; # spleen-->
            <Parameter symbId="Ea_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.0001302</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_spleen   = 1.204;-->
            <Parameter symbId="Eb_spleen">
                <ct:Assign><ct:Real>1.204</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ec_spleen   = 0.02909;-->
            <Parameter symbId="Ec_spleen">
                <ct:Assign><ct:Real>0.02909</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_thymus   = 0.001218 * 0.001;  # thymus-->
            <Parameter symbId="Ea_thymus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.001218</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_thymus   = 1.093;-->
            <Parameter symbId="Eb_thymus">
                <ct:Assign><ct:Real>1.093</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Ea_thyroid  = 0.0006470 * 0.001; # thyroid-->
            <Parameter symbId="Ea_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:Real>0.0006470</ct:Real>
                        <ct:Real>0.001</ct:Real>                        
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            Eb_thyroid  = 1.023;-->
            <Parameter symbId="Eb_thyroid">
                <ct:Assign><ct:Real>1.023</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Transits; Unit: L/min
            MFl_stom_lumen = 0.208 / 60.0; # Intestinal transit for stomach -> gut-->
            <Parameter symbId="MFl_stom_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.208</ct:Real>
                        <ct:Real>60.0</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            # ICRP R8 and R23 p. 6-15
            MFl_gut_lumen  = 0.005 / 60.0; # Intestinal transit for gut (feces)-->
            <Parameter symbId="MFl_gut_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:Real>0.005</ct:Real>
                        <ct:Real>60.0</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            # ICRP R8 and R23 p. 6-15
            Fl_milk = 0.00049;             # ICRP 89, p213-->
            <Parameter symbId="Fl_milk">
                <ct:Assign><ct:Real>0.00049</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Parameters indicating the fraction of fat in each organ
            # comming from Fiserova-Bergerova  1983
            # or references found in Van der Mollen 1996
            frac_fat_blood      = 0.0052;     # Papke et al 89.-->
            <Parameter symbId="frac_fat_blood">
                <ct:Assign><ct:Real>0.0052</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_adip       = 0.859;      # Beck 90, Duarte-Davidson 93, Patterson 86
                                                  # Ryan 86 Ryan 85b Schecter 85
                                                  # refs in Van der Molen 96-->
            <Parameter symbId="frac_fat_adip">
                <ct:Assign><ct:Real>0.859</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_adrenal    = 0.049;      # Default value corresponding to
                                                  # "Remaining organs de Van der Molen"-->
            <Parameter symbId="frac_fat_adrenal">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_amniot     = 0.0052;     # Same value as blood-->
            <Parameter symbId="frac_fat_amniot">
                <ct:Assign><ct:Real>0.0052</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_brain      = 0.11;       # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_brain">
                <ct:Assign><ct:Real>0.11</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_breast     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_breast">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_gut        = 0.065;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_gut">
                <ct:Assign><ct:Real>0.065</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_gut_lumen  = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_gut_lumen">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_heart      = 0.083;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_heart">
                <ct:Assign><ct:Real>0.083</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_kidney     = 0.052;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_kidney">
                <ct:Assign><ct:Real>0.052</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_liver      = 0.049;      # Lenter 81, ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_liver">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_lung       = 0.017;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_lung">
                <ct:Assign><ct:Real>0.017</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_marrow     = 0.186;      # Clarys & Martin 85, ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_marrow">
                <ct:Assign><ct:Real>0.186</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_milk       = 0.040;      # ICRP Pub 89, p 212-->
            <Parameter symbId="frac_fat_milk">
                <ct:Assign><ct:Real>0.040</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_muscle     = 0.064;      # Lenter 81 & Ryan 85,
                                                  # ref in Van der Molen 96-->
            <Parameter symbId="frac_fat_muscle">
                <ct:Assign><ct:Real>0.064</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_other      = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_other">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_pancreas   = 0.105;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_pancreas">
                <ct:Assign><ct:Real>0.105</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_placenta   = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_placenta">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_skin       = 0.150;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_skin">
                <ct:Assign><ct:Real>0.150</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_spleen     = 0.030;      # Fiserova-Bergerova  1983-->
            <Parameter symbId="frac_fat_spleen">
                <ct:Assign><ct:Real>0.030</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_stomach    = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_stomach">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_stom_lumen = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_stom_lumen">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_thymus     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_thymus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_thyroid    = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_thyroid">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
<!--            frac_fat_uterus     = 0.049;      # Default value-->
            <Parameter symbId="frac_fat_uterus">
                <ct:Assign><ct:Real>0.049</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Parameters specific of the chemical studied
                # -\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
                # Transferts depending on the agent; Unit: L/min
                MKa_stomach    = 0.1;   # Absorption rate constant for stomach-->
            <Parameter symbId="MKa_stomach">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            MKa_gut        = 0.1;   # Absorption rate constant for gut-->
            <Parameter symbId="MKa_gut">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            MKe_bile       = 0.0;   # Biliary excretion rate constant for the mother-->
            <Parameter symbId="MKe_bile">
                <ct:Assign><ct:Real>0.0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Kd_pla_amniot  = 0.1;   # Transfer rate constant (diffusion)
                                    # between placenta and amniotic fluid-->
            <Parameter symbId="Kd_pla_amniot">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            Kd_uter_pla    = 0.1;   # Diffusion rate constant from uterus to placenta-->
            <Parameter symbId="Kd_uter_pla">
                <ct:Assign><ct:Real>0.1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            EKe_bile       = 0.0;   # Biliary excretion rate constant for the fetus-->
            <Parameter symbId="EKe_bile">
                <ct:Assign><ct:Real>0.0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            EKe_gut        = 0.0;   # Excretion rate constant from fetal gut to amniotic-->
            <Parameter symbId="EKe_gut">
                <ct:Assign><ct:Real>0.0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            EKa_amniot     = 0.0;   # Absorption rate constant from amniotic to fetal gut-->
            <Parameter symbId="EKa_amniot">
                <ct:Assign><ct:Real>0.0</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            # Blood/air PC
            PC_lung_over_air = 1;-->
            <Parameter symbId="PC_lung_over_air">
                <ct:Assign><ct:Real>1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Adipose tissue over blood partition coefficent
            PC_adip     = 1;-->
            <Parameter symbId="PC_adip">
                <ct:Assign><ct:Real>1</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Maternal renal elimination flow rate (L/min)
            MKe_renal   = 1E-3;-->
            <Parameter symbId="MKe_renal">
                <ct:Assign><ct:Real>1E-3</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Maternal hepatic metabolic rate constant scaling factor ((kg^0.25)/min)
            # Scaling to the 0.25 is supported by Hattis et al. and used by Gentry et al.
            MscKm_liver   = 0;-->
            <Parameter symbId="MscKm_liver">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Maternal gut metabolic rate constant scaling factor ((kg^0.25)/min)
            MscKm_gut     = 0;-->
            <Parameter symbId="MscKm_gut">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Maternal lung metabolic rate constant scaling factor ((kg^0.25)/min)
            MscKm_lung    = 0;-->
            <Parameter symbId="MscKm_lung">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Placental metabolic rate constant scaling factor ((kg^0.25)/min) 
            scKm_placenta = 0;-->
            <Parameter symbId="scKm_placenta">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
<!--            # Fetal hepatic metabolic rate constant scaling factor ((kg^0.25)/min)
            EscKm_liver   = 0;-->
            <Parameter symbId="EscKm_liver">
                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
            </Parameter>
            
            
<!--            Initialize {
            
            # Pure fat / blood partition coef
            PC_fat      = PC_adip / frac_fat_adip;-->
            <Parameter symbId="PC_fat">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="PC_adip"/>
                        <ct:SymbRef symbIdRef="frac_fat_adip"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
            
<!--            # Tissue over blood partition coefficents-->
            
<!--            PC_adrenal  = (PC_adrenal  ? PC_adrenal  : frac_fat_adrenal  * PC_fat);-->
            <Parameter symbId="PC_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_adrenal"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_amniot   = (PC_amniot   ? PC_amniot   : frac_fat_amniot   * PC_fat);-->
            <Parameter symbId="PC_amniot">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_amniot"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_brain    = (PC_brain    ? PC_brain    : frac_fat_brain    * PC_fat);-->
            <Parameter symbId="PC_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_brain"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_breast   = (PC_breast   ? PC_breast   : frac_fat_breast   * PC_fat);-->
            <Parameter symbId="PC_breast">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_breast"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_gut      = (PC_gut      ? PC_gut      : frac_fat_gut      * PC_fat);-->
            <Parameter symbId="PC_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_gut"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_heart    = (PC_heart    ? PC_heart    : frac_fat_heart    * PC_fat);-->
            <Parameter symbId="PC_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_heart"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_kidney   = (PC_kidney   ? PC_kidney   : frac_fat_kidney   * PC_fat);-->
            <Parameter symbId="PC_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_kidney"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_liver    = (PC_liver    ? PC_liver    : frac_fat_liver    * PC_fat);-->
            <Parameter symbId="PC_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_liver"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_lung     = (PC_lung     ? PC_lung     : frac_fat_lung     * PC_fat);-->
            <Parameter symbId="PC_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_lung"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_marrow   = (PC_marrow   ? PC_marrow   : frac_fat_marrow   * PC_fat);-->
            <Parameter symbId="PC_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_marrow"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_milk     = (PC_milk     ? PC_milk     : frac_fat_milk     * PC_fat);-->
            <Parameter symbId="PC_milk">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_milk"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_muscle   = (PC_muscle   ? PC_muscle   : frac_fat_muscle   * PC_fat);-->
            <Parameter symbId="PC_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_muscle"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_other    = (PC_other    ? PC_other    : frac_fat_other    * PC_fat);-->
            <Parameter symbId="PC_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_other"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_pancreas = (PC_pancreas ? PC_pancreas : frac_fat_pancreas * PC_fat);-->
            <Parameter symbId="PC_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_pancreas"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_placenta = (PC_placenta ? PC_placenta : frac_fat_placenta * PC_fat);-->
            <Parameter symbId="PC_placenta">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_placenta"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_skin     = (PC_skin     ? PC_skin     : frac_fat_skin     * PC_fat);-->
            <Parameter symbId="PC_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_skin"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_spleen   = (PC_spleen   ? PC_spleen   : frac_fat_spleen   * PC_fat);-->
            <Parameter symbId="PC_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_spleen"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_stomach  = (PC_stomach  ? PC_stomach  : frac_fat_stomach  * PC_fat);-->
            <Parameter symbId="PC_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_stomach"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_thymus   = (PC_thymus   ? PC_thymus   : frac_fat_thymus   * PC_fat);-->
            <Parameter symbId="PC_thymus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_thymus"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_thyroid  = (PC_thyroid  ? PC_thyroid  : frac_fat_thyroid  * PC_fat);-->
            <Parameter symbId="PC_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_thyroid"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            PC_uterus   = (PC_uterus   ? PC_uterus   : frac_fat_uterus   * PC_fat);-->
            <Parameter symbId="PC_uterus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="frac_fat_uterus"/>
                        <ct:SymbRef symbIdRef="PC_fat"/>
                    </math:Binop>
                </ct:Assign>
            </Parameter>
            
<!--            } # End of initialize-->
            
        
        </ParameterModel>
        
        <StructuralModel blkId="sm1">

            <!--            Dynamics {-->
            <!--            # Calculation of the "gestational age"
            Gest_Tzero = (Gestation ? (Gest_Tzero == 0 ? t : Gest_Tzero) : 0);-->
            <ct:Variable symbId="Gest_Tzero"/>                            <!-- TEST TEST TEST TEST TEST  -->
            <ct:Variable symbIdRef="Gest_Tzero">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Piecewise>
                                <math:Piece>
                                    <ct:SymbRef symbIdRef="t"/>
                                    <math:Condition>
                                        <math:LogicBinop op="eq">
                                            <ct:SymbRef symbIdRef="Gest_Tzero"/>
                                            <ct:Real>0</ct:Real>
                                        </math:LogicBinop>
                                    </math:Condition>
                                </math:Piece>
                                <math:Piece>
                                    <ct:SymbRef symbIdRef="Gest_Tzero"/>
                                    <math:Condition>
                                        <math:Otherwise/>
                                    </math:Condition>
                                </math:Piece>
                            </math:Piecewise>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
            <!-- Gest_Age = (Gest_Tzero == 0 ? 0 : t - Gest_Tzero);-->
            <ct:Variable symbId="Gest_Age">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef symbIdRef="Gest_Tzero"/>
                                    <ct:Real>0</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <math:Binop op="minus">
                                <ct:SymbRef symbIdRef="t"/>
                                <ct:SymbRef symbIdRef="Gest_Tzero"/>
                            </math:Binop>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
            
            <!--            # Maternal tissue volumes (L) are supposed to be proportionnal to the
            # Mother height, excepted for the adipose tissue-->
            
            <!--            t1 = t / 525600.0; # time in years-->
            <ct:Variable symbId="t1">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="t"/>
                        <ct:Real>525600.0</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!-- Mheight = (t1 < 1 ? 51 + t1 * (76-51) :
            (t1 < 5 ? 76 + (t1-1) * (109-76) / 4.0 :
            (t1 < 10 ? 109 + (t1-5) * (138-109) / 5.0 :
            (t1 < 15 ? 138 + (t1-10) * (161-138) / 5.0 :
            (t1 < 20 ? 161 + (t1-15) * (163-161) / 5.0 :
                                     163))))) * 0.01;-->
            <!-- same as in 'women' -->
            <ct:Variable symbId="Mheight"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- t1 =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <!-- 0.51 + t1 * (0.76-0.51)-->
                        <math:Binop op="plus">
                            <ct:Real>0.51</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="t1"/>
                                <math:Binop op="minus">
                                    <ct:Real>0.76</ct:Real>
                                    <ct:Real>0.51</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < t1  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 76 + (t1-1) * (109-76) / 4.0 -->
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <math:Binop op="plus">
                            <ct:Real>0.76</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.09</ct:Real>
                                        <ct:Real>0.76</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < t1  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 109 + (t1-5) * (138-109) / 5.0 -->
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <math:Binop op="plus">
                            <ct:Real>1.09</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.38</ct:Real>
                                        <ct:Real>1.09</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < t1  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 138 + (t1-10) * (161-138) / 5.0 -->
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <math:Binop op="plus">
                            <ct:Real>1.38</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.61</ct:Real>
                                        <ct:Real>1.38</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < t1  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 161 + (t1-15) * (163-161) / 5.0 -->
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <math:Binop op="plus">
                            <ct:Real>1.61</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.63</ct:Real>
                                        <ct:Real>1.61</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="Mheight"/>
                        <ct:Real>1.63</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
            <!--            MV_adrenal    = sc_V_adrenal   * Mheight;-->
            <ct:Variable symbId="MV_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_adrenal"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_bone       = sc_V_bone      * Mheight;-->
            <ct:Variable symbId="MV_bone">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_bone"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_brain      = sc_V_brain     * Mheight;-->
            <ct:Variable symbId="MV_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_brain"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_gut        = sc_V_gut       * Mheight;-->
            <ct:Variable symbId="MV_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_gut"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_gut_lumen  = sc_V_gut_lumen * Mheight;-->
            <ct:Variable symbId="MV_gut_lumen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_gut_lumen"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_heart      = sc_V_heart     * Mheight;-->
            <ct:Variable symbId="MV_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_heart"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_kidney     = sc_V_kidney    * Mheight;-->
            <ct:Variable symbId="MV_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_kidney"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_liver      = sc_V_liver     * Mheight;-->
            <ct:Variable symbId="MV_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_liver"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_lung       = sc_V_lung      * Mheight;-->
            <ct:Variable symbId="MV_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_lung"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_marrow     = sc_V_marrow    * Mheight;-->
            <ct:Variable symbId="MV_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_marrow"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_muscle     = sc_V_muscle    * Mheight;-->
            <ct:Variable symbId="MV_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_muscle"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_other      = sc_V_other     * Mheight;-->
            <ct:Variable symbId="MV_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_other"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_pancreas   = sc_V_pancreas  * Mheight;-->
            <ct:Variable symbId="MV_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_pancreas"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_skin       = sc_V_skin      * Mheight;-->
            <ct:Variable symbId="MV_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_skin"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_spleen     = sc_V_spleen    * Mheight;-->
            <ct:Variable symbId="MV_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_spleen"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_stomach    = sc_V_stomach   * Mheight;-->
            <ct:Variable symbId="MV_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_stomach"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_stom_lumen = sc_V_stom_lumen* Mheight;-->
            <ct:Variable symbId="MV_stom_lumen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_stom_lumen"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_thyroid    = sc_V_thyroid   * Mheight;-->
            <ct:Variable symbId="MV_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_thyroid"/>
                        <ct:SymbRef symbIdRef="Mheight"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # EW_indicator is some sort of measure of the fetal weight (in g) but is not
            # completely consistent because fetal weight has to be recomputed later.
            # This could be improved.
            EW_indicator = EWo * (Gestation ?
            exp(Ao / alpha * (1 - exp(-alpha * Gest_Age/min_in_day))) : # if gestation
            1);  # otherwise-->
            
            <!-- dummyVar = exp(Ao / alpha * (1 - exp(-alpha * Gest_Age/min_in_day))) -->
            <ct:Variable symbId="dummyVar">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Uniop op="exp">
                                <math:Binop op="divide">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Ao"/>
                                    <math:Binop op="times">
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="alpha"/>
                                        <math:Binop op="minus">
                                            <ct:Real>1</ct:Real>
                                            <math:Uniop op="exp">
                                                <math:Binop op="times">
                                                    <math:Uniop op="minus">
                                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="alpha"/>
                                                    </math:Uniop>
                                                    <math:Binop op="divide">
                                                        <ct:SymbRef symbIdRef="Gest_Age"/>
                                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="min_in_day"/>
                                                    </math:Binop>
                                                </math:Binop>
                                            </math:Uniop>
                                        </math:Binop>
                                    </math:Binop>
                                </math:Binop>
                            </math:Uniop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>1</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            <ct:Variable symbId="EW_indicator">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="EWo"/>
                        <ct:SymbRef symbIdRef="dummyVar"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            ln_EW_i = log(EW_indicator);-->
            <ct:Variable symbId="ln_EW_i">
                <ct:Assign>
                    <math:Uniop op="log">
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Uniop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Volumes of fetal organs computed using parameters given by Luecke 94
            # and assuming a density of 1, excepted for the adipose tissue for which
            # the density is equal to 0.9 (Brown et al.97 p.433) and for which Luecke's
            # equation has been simplified and corrected.
            # Unit: kg and L-->
            
<!--            EW_adip     = Ea_adip * EW_indicator; # Luecke's eq. did not work-->
            <ct:Variable symbId="EW_adip">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_adip"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_adip     = EW_adip / density_adip;-->
            <ct:Variable symbId="EV_adip">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EW_adip"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_blood    = Ea_blood    * exp(Eb_blood * ln_EW_i);-->
            <ct:Variable symbId="EV_blood">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_blood"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_blood"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_art      = EV_blood    * Fr_art_blood;   -->
            <ct:Variable symbId="EV_art">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="EV_blood"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Fr_art_blood"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_ven      = EV_blood - EV_art;-->
            <ct:Variable symbId="EV_ven">
                <ct:Assign>
                    <math:Binop op="minus">
                        <ct:SymbRef symbIdRef="EV_blood"/>
                        <ct:SymbRef symbIdRef="EV_art"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_adrenal  = Ea_adrenal  * exp(Eb_adrenal * ln_EW_i);-->
            <ct:Variable symbId="EV_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_adrenal"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_adrenal"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_bone     = Ea_bone     * EW_indicator;-->
            <ct:Variable symbId="EV_bone">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_bone"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EW_bone     = EV_bone * density_bone;-->
            <ct:Variable symbId="EW_bone">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="EV_bone"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="density_bone"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_brain    = Ea_brain    * exp(Eb_brain * ln_EW_i);-->
            <ct:Variable symbId="EV_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_brain"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_brain"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_gut      = Ea_gut      * EW_indicator;-->
            <ct:Variable symbId="EV_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_gut"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_heart    = Ea_heart    * exp(Eb_heart * ln_EW_i);-->
            <ct:Variable symbId="EV_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_heart"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_heart"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_kidney   = Ea_kidney   * exp((Eb_kidney + Ec_kidney * ln_EW_i) * ln_EW_i);-->
            <ct:Variable symbId="EV_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_kidney"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <math:Binop op="plus">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_kidney"/>
                                    <math:Binop op="times">
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ec_kidney"/>
                                        <ct:SymbRef symbIdRef="ln_EW_i"/>
                                    </math:Binop>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_liver    = Ea_liver    * exp(Eb_liver * ln_EW_i);-->
            <ct:Variable symbId="EV_liver">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_liver"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_liver"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_lung     = Ea_lung     * EW_indicator;-->
            <ct:Variable symbId="EV_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_lung"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_marrow   = Ea_marrow   * exp(Eb_marrow * ln_EW_i);-->
            <ct:Variable symbId="EV_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_marrow"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_marrow"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_muscle   = Ea_muscle   * exp(Eb_muscle * ln_EW_i);-->
            <ct:Variable symbId="EV_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_muscle"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_muscle"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_other    = Ea_other    * EW_indicator;-->
            <ct:Variable symbId="EV_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_other"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_pancreas = Ea_pancreas * exp(Eb_pancreas * ln_EW_i);-->
            <ct:Variable symbId="EV_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_pancreas"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_pancreas"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_skin     = Ea_skin     * EW_indicator;-->
            <ct:Variable symbId="EV_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_skin"/>
                        <ct:SymbRef symbIdRef="EW_indicator"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_spleen   = Ea_spleen   * exp((Eb_spleen + Ec_spleen * ln_EW_i) * ln_EW_i);-->
            <ct:Variable symbId="EV_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_spleen"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <math:Binop op="plus">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_spleen"/>
                                    <math:Binop op="times">
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ec_spleen"/>
                                        <ct:SymbRef symbIdRef="ln_EW_i"/>
                                    </math:Binop>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_thymus   = Ea_thymus   * exp(Eb_thymus * ln_EW_i);-->
            <ct:Variable symbId="EV_thymus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_thymus"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_thymus"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EV_thyroid  = Ea_thyroid  * exp(Eb_thyroid * ln_EW_i);-->
            <ct:Variable symbId="EV_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Ea_thyroid"/>
                        <math:Uniop op="exp">
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Eb_thyroid"/>
                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                            </math:Binop>
                        </math:Uniop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EW_total    = EV_blood + EW_adip + EV_adrenal  + EV_brain +
                EW_bone +
                EV_gut    + EV_heart  + EV_kidney + EV_liver    + EV_lung +
                EV_marrow + EV_muscle + EV_other  + EV_pancreas + EV_skin +
                EV_spleen + EV_thymus + EV_thyroid;-->
            <ct:Variable symbId="EW_total">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <math:Binop op="plus">
                                                                            <math:Binop op="plus">
                                                                                <math:Binop op="plus">
                                                                                    <math:Binop op="plus">
                                                                                        <ct:SymbRef symbIdRef="EV_blood"/>
                                                                                        <ct:SymbRef symbIdRef="EW_adip"/>
                                                                                    </math:Binop>
                                                                                    <ct:SymbRef symbIdRef="EV_adrenal"/>
                                                                                </math:Binop>
                                                                                <ct:SymbRef symbIdRef="EV_brain"/>
                                                                            </math:Binop>
                                                                            <ct:SymbRef symbIdRef="EW_bone"/>
                                                                        </math:Binop>
                                                                        <ct:SymbRef symbIdRef="EV_gut"/>
                                                                    </math:Binop>
                                                                    <ct:SymbRef symbIdRef="EV_heart"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="EV_kidney"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="EV_liver"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="EV_lung"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="EV_marrow"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="EV_muscle"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="EV_other"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="EV_pancreas"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="EV_skin"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="EV_spleen"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="EV_thymus"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="EV_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
            
<!--            # Volumes of the maternal organs changing during pregnancy,
            # computed with the equations from Luecke 94 and from ICRP data and Van 
            # Molen model after age 14-->
            
            <!--            MV_adip = (t1 < 1 ? 0.37 + t1 * (2.3-0.37) :
            (t1 < 5 ? 2.3 + (t1-1) * (3.6-2.3) / 4.0 :
            (t1 < 10 ? 3.6 + (t1-5) * (6-3.6) / 5.0 :
            (t1 < 15 ? 6.0 + (t1-10) * (14-6) / 5.0 :
            14 + (t1-15) * 17 / 55.0)))) / density_adip +
            (Gestation ? 
            Ma_adip * exp((Mb_adip + Mc_adip * ln_EW_i) * ln_EW_i) 
            / density_adip : 0);-->
<!--            MV_adip1 = (t1 < 1 ? 0.37 + t1 * (2.3-0.37) :
            (t1 < 5 ? 2.3 + (t1-1) * (3.6-2.3) / 4.0 :
            (t1 < 10 ? 3.6 + (t1-5) * (6-3.6) / 5.0 :
            (t1 < 15 ? 6.0 + (t1-10) * (14-6) / 5.0 :
            14 + (t1-15) * 17 / 55.0)))) / density_adip
            
            MV_adip2 = (Gestation ? 
            Ma_adip * exp((Mb_adip + Mc_adip * ln_EW_i) * ln_EW_i) 
            / density_adip : 0)
            MV_adip = MV_adip1 + MV_adip2;
            -->
            
            <ct:Variable symbId="MV_adip1"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- t1 =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <!-- 0.37 + t1 * (2.3-0.37) / density_adip -->
                        <math:Binop op="plus">
                            <ct:Real>0.37</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="t1"/>
                                    <math:Binop op="minus">
                                        <ct:Real>2.3</ct:Real>
                                        <ct:Real>0.37</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < t1  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 2.3 + (t1-1) * (3.6-2.3) / 4.0 / density_adip -->
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <math:Binop op="plus">
                            <ct:Real>2.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="t1"/>
                                            <ct:Real>1</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>3.6</ct:Real>
                                            <ct:Real>2.3</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>4.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < t1  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.6 + (t1-5) * (6-3.6) / 5.0 / density_adip -->
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <math:Binop op="plus">
                            <ct:Real>3.6</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="t1"/>
                                            <ct:Real>5</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>6</ct:Real>
                                            <ct:Real>3.6</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>5.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < t1  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.0 + (t1-10) * (14-6) / 5.0 / density_adip -->
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <math:Binop op="plus">
                            <ct:Real>6.0</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="t1"/>
                                            <ct:Real>10</ct:Real>
                                        </math:Binop>
                                        <math:Binop op="minus">
                                            <ct:Real>14</ct:Real>
                                            <ct:Real>6</ct:Real>
                                        </math:Binop>
                                    </math:Binop>
                                    <ct:Real>5.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <!-- 14 + (t1-15) * 17 / 55.0 / density_adip -->
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <math:Binop op="plus">
                            <ct:Real>14</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="divide">
                                    <math:Binop op="times">
                                        <math:Binop op="minus">
                                            <ct:SymbRef symbIdRef="t1"/>
                                            <ct:Real>15</ct:Real>
                                        </math:Binop>
                                        <ct:Real>17</ct:Real>
                                    </math:Binop>
                                    <ct:Real>55.0</ct:Real>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
            <ct:Variable symbId="MV_adip2">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Ma_adip"/>
                                    <math:Uniop op="exp">
                                        <math:Binop op="times">
                                            <math:Binop op="plus">
                                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Mb_adip"/>
                                                <math:Binop op="times">
                                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Mc_adip"/>
                                                    <ct:SymbRef symbIdRef="ln_EW_i"/>
                                                </math:Binop>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="ln_EW_i"/>
                                        </math:Binop>
                                    </math:Uniop>
                                </math:Binop>
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
            <ct:Variable symbId="MV_adip">
                <ct:Assign>
                    <math:Binop op="plus">
                        <ct:SymbRef symbIdRef="MV_adip1"/>
                        <ct:SymbRef symbIdRef="MV_adip2"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            MV_blood1 = (t1 < 1 ? 0.27 + t1 * (0.5-0.27) :
            (t1 < 5 ? 0.5 + (t1-1) * (1.4-0.5) / 4.0 :
            (t1 < 10 ? 1.4 + (t1-5) * (2.4-1.4) / 5.0 :
            (t1 < 15 ? 2.4 + (t1-10) * (3.3-2.4) / 5.0 :
            (t1 < 20 ? 3.3 + (t1-15) * (3.9-3.3) / 5.0 :
            3.9)))))
            MV_blood2 = (Gestation ? 
            Ma_blood * exp((Mb_blood + Mc_blood * ln_EW_i) * ln_EW_i) : 
            0);-->
            
            
            <ct:Variable symbId="MV_blood1"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- t1 =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <!-- 0.27 + t1 * (0.5-0.27) -->
                        <math:Binop op="plus">
                            <ct:Real>0.27</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="t1"/>
                                <math:Binop op="minus">
                                    <ct:Real>0.5</ct:Real>
                                    <ct:Real>0.27</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < t1  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 0.5 + (t1-1) * (1.4-0.5) / 4.0 -->
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <math:Binop op="plus">
                            <ct:Real>0.5</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>1.4</ct:Real>
                                        <ct:Real>0.5</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < t1  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 1.4 + (t1-5) * (2.4-1.4) / 5.0 -->
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <math:Binop op="plus">
                            <ct:Real>1.4</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>2.4</ct:Real>
                                        <ct:Real>1.4</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < t1  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 2.4 + (t1-10) * (3.3-2.4) / 5.0 -->
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <math:Binop op="plus">
                            <ct:Real>2.4</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>3.3</ct:Real>
                                        <ct:Real>2.4</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < t1  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.3 + (t1-15) * (3.9-3.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <math:Binop op="plus">
                            <ct:Real>3.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>3.9</ct:Real>
                                        <ct:Real>3.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <ct:Real>3.9</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
            <ct:Variable symbId="MV_blood2">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Ma_blood"/>
                                <math:Uniop op="exp">
                                    <math:Binop op="times">
                                        <math:Binop op="plus">
                                            <ct:SymbRef blkIdRef="pm1" symbIdRef="Mb_blood"/>
                                            <math:Binop op="times">
                                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Mc_blood"/>
                                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                                            </math:Binop>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="ln_EW_i"/>
                                    </math:Binop>
                                </math:Uniop>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
            <ct:Variable symbId="MV_blood">
                <ct:Assign>
                    <math:Binop op="plus">
                        <ct:SymbRef symbIdRef="MV_blood1"/>
                        <ct:SymbRef symbIdRef="MV_blood2"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MV_art    = MV_blood * Fr_art_blood;   -->
            <ct:Variable symbId="MV_art">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="MV_blood"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Fr_art_blood"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MV_ven    = MV_blood - MV_art;-->
            <ct:Variable symbId="MV_ven">
                <ct:Assign>
                    <math:Binop op="minus">
                        <ct:SymbRef symbIdRef="MV_blood"/>
                        <ct:SymbRef symbIdRef="MV_art"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MV_breast1 = (t1 < 10 ? 0.01 :
            (t1 < 15 ? 0.01 + (t1-10) * (0.25-0.01) / 5.0 :
            (t1 < 20 ? 0.25 + (t1-15) * (0.5-0.25) / 5.0 : 0.5))) +
            MV_breast2 = (Gestation ? 
            Ma_breast * exp((Mb_breast + Mc_breast * ln_EW_i) * ln_EW_i) :
            0);
            MV_breast1 = MV_breast1 + MV_breast2; -->   <!-- extension -->
            <ct:Variable symbId="MV_breast1"/>
            <ConditionalStatement>
                <math:If>
                    <!-- t1 < 10 ? 0.01 -->
                    <math:Condition>
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>10</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_breast1"/>
                        <ct:Real>0.01</ct:Real>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <!-- t1 < 15 ? 0.01 + (t1-10) * (0.25-0.01) / 5.0 -->
                    <math:Condition>
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>15</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_breast1"/>
                        <math:Binop op="plus">
                            <ct:Real>0.01</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>0.25</ct:Real>
                                        <ct:Real>0.01</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <!-- t1 < 20 ? 0.25 + (t1-15) * (0.5-0.25) / 5.0 -->
                    <math:Condition>
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>20</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_breast1"/>
                        <math:Binop op="plus">
                            <ct:Real>0.25</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>0.5</ct:Real>
                                        <ct:Real>0.25</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MV_breast1"/>
                        <ct:Real>0.5</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
            <ct:Variable symbId="MV_breast2">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Ma_breast"/>
                                <math:Uniop op="exp">
                                    <math:Binop op="times">
                                        <math:Binop op="plus">
                                            <ct:SymbRef blkIdRef="pm1" symbIdRef="Mb_breast"/>
                                            <math:Binop op="times">
                                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Mc_breast"/>
                                                <ct:SymbRef symbIdRef="ln_EW_i"/>
                                            </math:Binop>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="ln_EW_i"/>
                                    </math:Binop>
                                </math:Uniop>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>

            <ct:Variable symbId="MV_breast">
                <ct:Assign>
                    <math:Binop op="plus">
                        <ct:SymbRef symbIdRef="MV_breast1"/>
                        <ct:SymbRef symbIdRef="MV_breast2"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            <!--            MV_uterus = sc_V_uterus * Mheight +
            (Gestation ? Ma_uterus * EW_indicator : 0);-->
            <ct:Variable symbId="dummy1">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="Ma_uterus"/>
                                <ct:SymbRef symbIdRef="EW_indicator"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            <ct:Variable symbId="MV_uterus">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="times">
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="sc_V_uterus"/>
                            <ct:SymbRef symbIdRef="Mheight"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="dummy1"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Placenta mass is assumed to be proportional to fetal weight
            V_placenta = (Gestation ? a_placenta * EW_indicator : 0);-->
            <ct:Variable symbId="V_placenta">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="a_placenta"/>
                                <ct:SymbRef symbIdRef="EW_indicator"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Amniotic fluid mass is assumed to be proportional to fetal weight
            V_amniot   = (Gestation ? a_amniot * EW_indicator : 0);-->
            <ct:Variable symbId="V_amniot">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="times">
                                <ct:SymbRef blkIdRef="pm1" symbIdRef="a_amniot"/>
                                <ct:SymbRef symbIdRef="EW_indicator"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
<!--            MW_lean  = MV_adrenal + MV_blood  +
            MV_bone * density_bone     + MV_brain   + MV_breast +
            MV_gut     + MV_gut_lumen  + MV_heart   + MV_kidney +
            MV_liver   + MV_lung       + MV_marrow  + MV_muscle +
            MV_other   + MV_pancreas   + MV_skin    + MV_spleen +
            MV_stomach + MV_stom_lumen + MV_thyroid + MV_uterus;-->
            <ct:Variable symbId="MW_lean">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <math:Binop op="plus">
                                                                            <math:Binop op="plus">
                                                                                <math:Binop op="plus">
                                                                                    <math:Binop op="plus">
                                                                                        <math:Binop op="plus">
                                                                                            <math:Binop op="plus">
                                                                                                <math:Binop op="plus">
                                                                                                    <ct:SymbRef symbIdRef="MV_adrenal"/>
                                                                                                    <ct:SymbRef symbIdRef="MV_blood"/>
                                                                                                </math:Binop>
                                                                                                <math:Binop op="times">
                                                                                                    <ct:SymbRef symbIdRef="MV_bone"/>
                                                                                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="density_bone"/>
                                                                                                </math:Binop>
                                                                                            </math:Binop>
                                                                                            <ct:SymbRef symbIdRef="MV_brain"/>
                                                                                        </math:Binop>
                                                                                        <ct:SymbRef symbIdRef="MV_breast"/>
                                                                                    </math:Binop>
                                                                                    <ct:SymbRef symbIdRef="MV_gut"/>
                                                                                </math:Binop>
                                                                                <ct:SymbRef symbIdRef="MV_gut_lumen"/>
                                                                            </math:Binop>
                                                                            <ct:SymbRef symbIdRef="MV_heart"/>
                                                                        </math:Binop>
                                                                        <ct:SymbRef symbIdRef="MV_kidney"/>
                                                                    </math:Binop>
                                                                    <ct:SymbRef symbIdRef="MV_liver"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="MV_lung"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="MV_marrow"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="MV_muscle"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="MV_other"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="MV_pancreas"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="MV_skin"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="MV_spleen"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="MV_stomach"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="MV_stom_lumen"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="MV_thyroid"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="MV_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MW_total = MW_lean + MV_adip * density_adip +
            V_placenta + V_amniot + EW_total;-->
            <ct:Variable symbId="MW_total">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <ct:SymbRef symbIdRef="MW_lean"/>
                                    <math:Binop op="times">
                                        <ct:SymbRef symbIdRef="MV_adip"/>
                                        <ct:SymbRef blkIdRef="pm1" symbIdRef="density_adip"/>
                                    </math:Binop>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="V_placenta"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="V_amniot"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="EW_total"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Scale metabolism to body masses-->
            
<!--            dtmp = pow(MW_lean, 0.25);-->
            <ct:Variable symbId="dtmp">
                <ct:Assign>
                    <math:Binop op="power">
                        <ct:SymbRef symbIdRef="MW_lean"/>
                        <ct:Real>0.25</ct:Real>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MKm_liver   = MscKm_liver / dtmp;-->
            <ct:Variable symbId="MKm_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="MscKm_liver"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MKm_lung    = MscKm_lung / dtmp;-->
            <ct:Variable symbId="MKm_lung">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="MscKm_lung"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            Km_placenta = scKm_placenta / dtmp;-->
            <ct:Variable symbId="Km_placenta">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="scKm_placenta"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>

<!--            MKm_gut     = MscKm_gut / dtmp;-->
            <ct:Variable symbId="MKm_gut">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="MscKm_gut"/>
                        <ct:SymbRef symbIdRef="dtmp"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EKm_liver   = EscKm_liver / pow(EW_total, 0.25);-->
            <ct:Variable symbId="EKm_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="EscKm_liver"/>
                        <math:Binop op="power">
                            <ct:SymbRef symbIdRef="MW_lean"/>
                            <ct:Real>0.25</ct:Real>
                        </math:Binop>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Compute actual blood flows
            # Unit: L/min-->
            
<!--            MF_adip     = Msc_F_adip     * MV_adip;-->
            <ct:Variable symbId="MF_adip">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_adip"/>
                        <ct:SymbRef symbIdRef="MV_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_adrenal  = Msc_F_adrenal  * MV_adrenal;-->
            <ct:Variable symbId="MF_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_adrenal"/>
                        <ct:SymbRef symbIdRef="MV_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_brain    = Msc_F_brain    * MV_brain;-->
            <ct:Variable symbId="MF_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_brain"/>
                        <ct:SymbRef symbIdRef="MV_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_breast   = Msc_F_breast   * MV_breast;-->
            <ct:Variable symbId="MF_breast">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_breast"/>
                        <ct:SymbRef symbIdRef="MV_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_eport    = Msc_F_eport    * MV_liver;-->
            <ct:Variable symbId="MF_eport">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_eport"/>
                        <ct:SymbRef symbIdRef="MV_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_gut      = Msc_F_gut      * MV_gut;-->
            <ct:Variable symbId="MF_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_gut"/>
                        <ct:SymbRef symbIdRef="MV_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_heart    = Msc_F_heart    * MV_heart;-->
            <ct:Variable symbId="MF_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_heart"/>
                        <ct:SymbRef symbIdRef="MV_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_kidney   = Msc_F_kidney   * MV_kidney;-->
            <ct:Variable symbId="MF_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_kidney"/>
                        <ct:SymbRef symbIdRef="MV_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_marrow   = Msc_F_marrow   * MV_marrow;-->
            <ct:Variable symbId="MF_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_marrow"/>
                        <ct:SymbRef symbIdRef="MV_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_muscle   = Msc_F_muscle   * MV_muscle;-->
            <ct:Variable symbId="MF_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_muscle"/>
                        <ct:SymbRef symbIdRef="MV_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_other    = Msc_F_other    * MV_other ;-->
            <ct:Variable symbId="MF_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_other"/>
                        <ct:SymbRef symbIdRef="MV_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_pancreas = Msc_F_pancreas * MV_pancreas;-->
            <ct:Variable symbId="MF_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_pancreas"/>
                        <ct:SymbRef symbIdRef="MV_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_skin     = Msc_F_skin     * MV_skin;-->
            <ct:Variable symbId="MF_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_skin"/>
                        <ct:SymbRef symbIdRef="MV_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_spleen   = Msc_F_spleen   * MV_spleen;-->
            <ct:Variable symbId="MF_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_spleen"/>
                        <ct:SymbRef symbIdRef="MV_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_stomach  = Msc_F_stomach  * MV_stomach;-->
            <ct:Variable symbId="MF_stomach">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_stomach"/>
                        <ct:SymbRef symbIdRef="MV_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_thyroid  = Msc_F_thyroid  * MV_thyroid;-->
            <ct:Variable symbId="MF_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_thyroid"/>
                        <ct:SymbRef symbIdRef="MV_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_uterus   = Msc_F_uterus   * MV_uterus;-->
            <ct:Variable symbId="MF_uterus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="Msc_F_uterus"/>
                        <ct:SymbRef symbIdRef="MV_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_liver    = MF_eport + MF_spleen + MF_pancreas + MF_gut + MF_stomach;-->
            <ct:Variable symbId="MF_liver">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <ct:SymbRef symbIdRef="MF_eport"/>
                                    <ct:SymbRef symbIdRef="MF_spleen"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="MF_pancreas"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="MF_gut"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="MF_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MF_blood    = MF_adip  + MF_adrenal + MF_brain   + MF_breast +
            MF_heart + MF_kidney  + MF_liver   + MF_marrow + MF_muscle +
            MF_other + MF_skin    + MF_thyroid + MF_uterus;-->
            <ct:Variable symbId="MF_blood">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <ct:SymbRef symbIdRef="MF_adip"/>
                                                                    <ct:SymbRef symbIdRef="MF_adrenal"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="MF_brain"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="MF_breast"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="MF_heart"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="MF_kidney"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="MF_liver"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="MF_marrow"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="MF_muscle"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="MF_other"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="MF_skin"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="MF_thyroid"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="MF_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_adip     = Esc_F_adip     * EV_adip; -->
            <ct:Variable symbId="EF_adip">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_adip"/>
                        <ct:SymbRef symbIdRef="EV_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_adrenal  = Esc_F_adrenal  * EV_adrenal;-->
            <ct:Variable symbId="EF_adrenal">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_adrenal"/>
                        <ct:SymbRef symbIdRef="EV_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_brain    = Esc_F_brain    * EV_brain;-->
            <ct:Variable symbId="EF_brain">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_brain"/>
                        <ct:SymbRef symbIdRef="EV_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_eport    = Esc_F_eport    * EV_liver;-->
            <ct:Variable symbId="EF_eport">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_eport"/>
                        <ct:SymbRef symbIdRef="EV_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_gut      = Esc_F_gut      * EV_gut;-->
            <ct:Variable symbId="EF_gut">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_gut"/>
                        <ct:SymbRef symbIdRef="EV_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_heart    = Esc_F_heart    * EV_heart;-->
            <ct:Variable symbId="EF_heart">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_heart"/>
                        <ct:SymbRef symbIdRef="EV_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_kidney   = Esc_F_kidney   * EV_kidney;-->
            <ct:Variable symbId="EF_kidney">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_kidney"/>
                        <ct:SymbRef symbIdRef="EV_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_lung     = Esc_F_lung     * EV_lung;-->
            <ct:Variable symbId="EF_lung">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_lung"/>
                        <ct:SymbRef symbIdRef="EV_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_marrow   = Esc_F_marrow   * EV_marrow;-->
            <ct:Variable symbId="EF_marrow">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_marrow"/>
                        <ct:SymbRef symbIdRef="EV_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_muscle   = Esc_F_muscle   * EV_muscle;-->
            <ct:Variable symbId="EF_muscle">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_muscle"/>
                        <ct:SymbRef symbIdRef="EV_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_pancreas = Esc_F_pancreas * EV_pancreas;-->
            <ct:Variable symbId="EF_pancreas">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_pancreas"/>
                        <ct:SymbRef symbIdRef="EV_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_placenta = Esc_F_placenta * V_placenta;-->
            <ct:Variable symbId="EF_placenta">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_placenta"/>
                        <ct:SymbRef symbIdRef="V_placenta"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_skin     = Esc_F_skin     * EV_skin;-->
            <ct:Variable symbId="EF_skin">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_skin"/>
                        <ct:SymbRef symbIdRef="EV_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_spleen   = Esc_F_spleen   * EV_spleen;-->
            <ct:Variable symbId="EF_spleen">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_spleen"/>
                        <ct:SymbRef symbIdRef="EV_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_thymus   = Esc_F_thymus   * EV_thymus;-->
            <ct:Variable symbId="EF_thymus">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_thymus"/>
                        <ct:SymbRef symbIdRef="EV_thymus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_thyroid  = Esc_F_thyroid  * EV_thyroid;-->
            <ct:Variable symbId="EF_thyroid">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_thyroid"/>
                        <ct:SymbRef symbIdRef="EV_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_other    = Esc_F_other    * EV_other;       -->
            <ct:Variable symbId="EF_other">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef blkIdRef="pm1"  symbIdRef="Esc_F_other"/>
                        <ct:SymbRef symbIdRef="EV_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EF_liver    = EF_eport + EF_spleen + EF_pancreas;-->
            <ct:Variable symbId="EF_liver">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <ct:SymbRef symbIdRef="EF_eport"/>
                            <ct:SymbRef symbIdRef="EF_spleen"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="EF_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Note: according to Luecke blood flow to the GI tract does not feed in 
            # the liver...-->
            
<!--            EF_blood    = EF_adip  + EF_adrenal  + EF_brain + EF_gut +
            EF_heart + EF_kidney   + EF_liver + EF_marrow + EF_muscle +
            EF_other + EF_placenta + EF_skin  + EF_thymus + EF_thyroid;
            # Note: lung is irrigated by a bifurcation and does not enter in the
            # formula above-->
            <ct:Variable symbId="EF_blood">
                <ct:Assign>
                    <math:Binop op="plus">
                        <math:Binop op="plus">
                            <math:Binop op="plus">
                                <math:Binop op="plus">
                                    <math:Binop op="plus">
                                        <math:Binop op="plus">
                                            <math:Binop op="plus">
                                                <math:Binop op="plus">
                                                    <math:Binop op="plus">
                                                        <math:Binop op="plus">
                                                            <math:Binop op="plus">
                                                                <math:Binop op="plus">
                                                                    <math:Binop op="plus">
                                                                        <ct:SymbRef symbIdRef="EF_adip"/>
                                                                        <ct:SymbRef symbIdRef="EF_adrenal"/>
                                                                    </math:Binop>
                                                                    <ct:SymbRef symbIdRef="EF_brain"/>
                                                                </math:Binop>
                                                                <ct:SymbRef symbIdRef="EF_gut"/>
                                                            </math:Binop>
                                                            <ct:SymbRef symbIdRef="EF_heart"/>
                                                        </math:Binop>
                                                        <ct:SymbRef symbIdRef="EF_kidney"/>
                                                    </math:Binop>
                                                    <ct:SymbRef symbIdRef="EF_liver"/>
                                                </math:Binop>
                                                <ct:SymbRef symbIdRef="EF_marrow"/>
                                            </math:Binop>
                                            <ct:SymbRef symbIdRef="EF_muscle"/>
                                        </math:Binop>
                                        <ct:SymbRef symbIdRef="EF_other"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="EF_placenta"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="EF_skin"/>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="EF_thymus"/>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="EF_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Pulmonary Flow rate (L/min) (ref ICRP Pub 89, p 99)
            MF_pul = (t1 < 1 ? 1.5 + t1 * (3.7-1.5) :
            (t1 < 5 ? 3.7 + (t1-1) * (5.3-3.7) / 4.0 :
            (t1 < 10 ? 5.3 + (t1-5) * (6.3-5.3) / 5.0 :
            (t1 < 15 ? 6.3 + (t1-10) * (6.7-6.3) / 5.0 :
            (t1 < 20 ? 6.7 + (t1-15) * (6.5-6.7) / 5.0 :
            6.7)))));-->
            <ct:Variable symbId="MF_pul"/>
            <ConditionalStatement>
                <math:If>
                    <math:Condition>                <!-- Age =< 1 -->
                        <math:LogicBinop op="lt">
                            <ct:SymbRef symbIdRef="t1"/>
                            <ct:Real>1</ct:Real>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <!-- 1.5 + Age * (3.7-1.5)-->
                        <math:Binop op="plus">
                            <ct:Real>1.5</ct:Real>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="t1"/>
                                <math:Binop op="minus">
                                    <ct:Real>3.7</ct:Real>
                                    <ct:Real>1.5</ct:Real>
                                </math:Binop>
                            </math:Binop>
                        </math:Binop>
                    </ct:AssignStatement>
                </math:If>
                <math:ElseIf>
                    <math:Condition>                <!-- 1 < Age  =< 5 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 3.7 + (Age-1) * (5.3-3.7) / 4.0 -->
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>3.7</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>1</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>5.3</ct:Real>
                                        <ct:Real>3.7</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>4.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 5 < Age  =< 10 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>5</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 5.3 + (Age-5) * (6.3-5.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>5.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>5</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.3</ct:Real>
                                        <ct:Real>5.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 10 < Age  =< 15 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>10</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.3 + (Age-10) * (6.7-6.3) / 5.0 -->
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>6.3</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>10</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.7</ct:Real>
                                        <ct:Real>6.3</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:ElseIf>
                    <math:Condition>                <!-- 15 < Age  =< 20 -->
                        <math:LogicBinop op="and">
                            <math:LogicBinop op="geq">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>15</ct:Real>
                            </math:LogicBinop>
                            <math:LogicBinop op="lt">
                                <ct:SymbRef symbIdRef="t1"/>
                                <ct:Real>20</ct:Real>
                            </math:LogicBinop>
                        </math:LogicBinop>
                    </math:Condition>
                    <ct:AssignStatement op="eq">
                        
                        <!-- 6.7 + (Age-15) * (6.5-6.7) / 5.0 -->
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <math:Binop op="plus">
                            <ct:Real>6.7</ct:Real>
                            <math:Binop op="divide">
                                <math:Binop op="times">
                                    <math:Binop op="minus">
                                        <ct:SymbRef symbIdRef="t1"/>
                                        <ct:Real>15</ct:Real>
                                    </math:Binop>
                                    <math:Binop op="minus">
                                        <ct:Real>6.5</ct:Real>
                                        <ct:Real>6.7</ct:Real>
                                    </math:Binop>
                                </math:Binop>
                                <ct:Real>5.0</ct:Real>
                            </math:Binop>
                        </math:Binop>
                        
                    </ct:AssignStatement>
                </math:ElseIf>
                <math:Else>
                    <ct:AssignStatement op="eq">
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <ct:Real>6.7</ct:Real>
                    </ct:AssignStatement>
                </math:Else>
            </ConditionalStatement>
            
<!--            # Alveolar flow rate
            MF_alv = MF_pul * F_dead_space;-->
            <ct:Variable symbId="MF_alv">
                <ct:Assign>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="MF_pul"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="F_dead_space"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
            
<!--            # Concentrations in venous blood at the organ exit and in tissues-->
            
<!--            MC_adip       = MQ_adip     / MV_adip;-->
            <ct:Variable symbId="MC_adip">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_adip"/>
                        <ct:SymbRef symbIdRef="MV_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_adip_v     = MC_adip     / PC_adip;-->
            <ct:Variable symbId="MC_adip_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_adip"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_adrenal    = MQ_adrenal  / MV_adrenal;-->
            <ct:Variable symbId="MC_adrenal">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_adrenal"/>
                        <ct:SymbRef symbIdRef="MV_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_adrenal_v  = MC_adrenal  / PC_adrenal;-->
            <ct:Variable symbId="MC_adrenal_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_adrenal"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_brain      = MQ_brain    / MV_brain;-->
            <ct:Variable symbId="MC_brain">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_brain"/>
                        <ct:SymbRef symbIdRef="MV_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_brain_v    = MC_brain    / PC_brain;-->
            <ct:Variable symbId="MC_brain_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_brain"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_breast     = MQ_breast   / MV_breast;-->
            <ct:Variable symbId="MC_breast">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_breast"/>
                        <ct:SymbRef symbIdRef="MV_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_breast_v   = MC_breast   / PC_breast;-->
            <ct:Variable symbId="MC_breast_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_breast"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_breast"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_gut        = MQ_gut      / MV_gut;-->
            <ct:Variable symbId="MC_gut">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_gut"/>
                        <ct:SymbRef symbIdRef="MV_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_gut_v      = MC_gut      / PC_gut;-->
            <ct:Variable symbId="MC_gut_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_gut"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_heart      = MQ_heart    / MV_heart;-->
            <ct:Variable symbId="MC_heart">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_heart"/>
                        <ct:SymbRef symbIdRef="MV_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_heart_v    = MC_heart    / PC_heart;-->
            <ct:Variable symbId="MC_heart_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_heart"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_kidney     = MQ_kidney   / MV_kidney;-->
            <ct:Variable symbId="MC_kidney">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_kidney"/>
                        <ct:SymbRef symbIdRef="MV_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_kidney_v   = MC_kidney   / PC_kidney;-->
            <ct:Variable symbId="MC_kidney_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_kidney"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_liver      = MQ_liver    / MV_liver;-->
            <ct:Variable symbId="MC_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_liver"/>
                        <ct:SymbRef symbIdRef="MV_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_liver_v    = MC_liver    / PC_liver;-->
            <ct:Variable symbId="MC_liver_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_liver"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_lung       = MQ_lung     / MV_lung;-->
            <ct:Variable symbId="MC_lung">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_lung"/>
                        <ct:SymbRef symbIdRef="MV_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_lung_v     = MC_lung     / PC_lung;-->
            <ct:Variable symbId="MC_lung_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_lung"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_marrow     = MQ_marrow   / MV_marrow;-->
            <ct:Variable symbId="MC_marrow">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_marrow"/>
                        <ct:SymbRef symbIdRef="MV_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_marrow_v   = MC_marrow   / PC_marrow;-->
            <ct:Variable symbId="MC_marrow_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_marrow"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_muscle     = MQ_muscle   / MV_muscle;-->
            <ct:Variable symbId="MC_muscle">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_muscle"/>
                        <ct:SymbRef symbIdRef="MV_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_muscle_v   = MC_muscle   / PC_muscle;-->
            <ct:Variable symbId="MC_muscle_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_muscle"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_other      = MQ_other    / MV_other;-->
            <ct:Variable symbId="MC_other">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_other"/>
                        <ct:SymbRef symbIdRef="MV_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_other_v    = MC_other    / PC_other;-->
            <ct:Variable symbId="MC_other_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_other"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_pancreas   = MQ_pancreas / MV_pancreas;-->
            <ct:Variable symbId="MC_pancreas">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_pancreas"/>
                        <ct:SymbRef symbIdRef="MV_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_pancreas_v = MC_pancreas / PC_pancreas;-->
            <ct:Variable symbId="MC_pancreas_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_pancreas"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_skin       = MQ_skin     / MV_skin;-->
            <ct:Variable symbId="MC_skin">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_skin"/>
                        <ct:SymbRef symbIdRef="MV_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_skin_v     = MC_skin     / PC_skin;-->
            <ct:Variable symbId="MC_skin_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_skin"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_spleen     = MQ_spleen   / MV_spleen;-->
            <ct:Variable symbId="MC_spleen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_spleen"/>
                        <ct:SymbRef symbIdRef="MV_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_spleen_v   = MC_spleen   / PC_spleen;-->
            <ct:Variable symbId="MC_spleen_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_spleen"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_stomach    = MQ_stomach  / MV_stomach;-->
            <ct:Variable symbId="MC_stomach">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_stomach"/>
                        <ct:SymbRef symbIdRef="MV_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_stomach_v  = MC_stomach  / PC_stomach;-->
            <ct:Variable symbId="MC_stomach_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_stomach"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_stomach"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_thyroid    = MQ_thyroid  / MV_thyroid;-->
            <ct:Variable symbId="MC_thyroid">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_thyroid"/>
                        <ct:SymbRef symbIdRef="MV_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_thyroid_v  = MC_thyroid  / PC_thyroid;-->
            <ct:Variable symbId="MC_thyroid_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_thyroid"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_uterus     = MQ_uterus   / MV_uterus;-->
            <ct:Variable symbId="MC_uterus">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_uterus"/>
                        <ct:SymbRef symbIdRef="MV_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_uterus_v   = MC_uterus   / PC_uterus;-->
            <ct:Variable symbId="MC_uterus_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MC_uterus"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_uterus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_adip       = EQ_adip     / EV_adip;-->
            <ct:Variable symbId="EC_adip">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_adip"/>
                        <ct:SymbRef symbIdRef="EV_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_adip_v     = EC_adip     / PC_adip;-->
            <ct:Variable symbId="EC_adip_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_adip"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_adip"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_adrenal    = EQ_adrenal  / EV_adrenal;-->
            <ct:Variable symbId="EC_adrenal">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_adrenal"/>
                        <ct:SymbRef symbIdRef="EV_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_adrenal_v  = EC_adrenal  / PC_adrenal;-->
            <ct:Variable symbId="EC_adrenal_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_adrenal"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_adrenal"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_brain      = EQ_brain    / EV_brain;-->
            <ct:Variable symbId="EC_brain">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_brain"/>
                        <ct:SymbRef symbIdRef="EV_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_brain_v    = EC_brain    / PC_brain;-->
            <ct:Variable symbId="EC_brain_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_brain"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_brain"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_gut        = EQ_gut      / EV_gut;-->
            <ct:Variable symbId="EC_gut">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_gut"/>
                        <ct:SymbRef symbIdRef="EV_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_gut_v      = EC_gut      / PC_gut;-->
            <ct:Variable symbId="EC_gut_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_gut"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_gut"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_heart      = EQ_heart    / EV_heart;-->
            <ct:Variable symbId="EC_heart">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_heart"/>
                        <ct:SymbRef symbIdRef="EV_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_heart_v    = EC_heart    / PC_heart;-->
            <ct:Variable symbId="EC_heart_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_heart"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_heart"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_kidney     = EQ_kidney   / EV_kidney;-->
            <ct:Variable symbId="EC_kidney">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_kidney"/>
                        <ct:SymbRef symbIdRef="EV_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_kidney_v   = EC_kidney   / PC_kidney;-->
            <ct:Variable symbId="EC_kidney_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_kidney"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_kidney"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_liver      = EQ_liver    / EV_liver;-->
            <ct:Variable symbId="EC_liver">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_liver"/>
                        <ct:SymbRef symbIdRef="EV_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_liver_v    = EC_liver    / PC_liver;-->
            <ct:Variable symbId="EC_liver_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_liver"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_liver"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_lung       = EQ_lung     / EV_lung;-->
            <ct:Variable symbId="EC_lung">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_lung"/>
                        <ct:SymbRef symbIdRef="EV_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_lung_v     = EC_lung     / PC_lung;-->
            <ct:Variable symbId="EC_lung_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_lung"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_lung"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_marrow     = EQ_marrow   / EV_marrow;-->
            <ct:Variable symbId="EC_marrow">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_marrow"/>
                        <ct:SymbRef symbIdRef="EV_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_marrow_v   = EC_marrow   / PC_marrow;-->
            <ct:Variable symbId="EC_marrow_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_marrow"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_marrow"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_muscle     = EQ_muscle   / EV_muscle;-->
            <ct:Variable symbId="EC_muscle">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_muscle"/>
                        <ct:SymbRef symbIdRef="EV_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_muscle_v   = EC_muscle   / PC_muscle;-->
            <ct:Variable symbId="EC_muscle_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_muscle"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_muscle"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_other      = EQ_other    / EV_other;-->
            <ct:Variable symbId="EC_other">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_other"/>
                        <ct:SymbRef symbIdRef="EV_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_other_v    = EC_other    / PC_other;-->
            <ct:Variable symbId="EC_other_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_other"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_other"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_pancreas   = EQ_pancreas / EV_pancreas;-->
            <ct:Variable symbId="EC_pancreas">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_pancreas"/>
                        <ct:SymbRef symbIdRef="EV_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_pancreas_v = EC_pancreas / PC_pancreas;-->
            <ct:Variable symbId="EC_pancreas_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_pancreas"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_pancreas"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_skin       = EQ_skin     / EV_skin;-->
            <ct:Variable symbId="EC_skin">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_skin"/>
                        <ct:SymbRef symbIdRef="EV_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_skin_v     = EC_skin     / PC_skin;-->
            <ct:Variable symbId="EC_skin_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_skin"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_skin"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_spleen     = EQ_spleen   / EV_spleen;-->
            <ct:Variable symbId="EC_spleen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_spleen"/>
                        <ct:SymbRef symbIdRef="EV_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_spleen_v   = EC_spleen   / PC_spleen;-->
            <ct:Variable symbId="EC_spleen_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_spleen"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_spleen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_thymus     = EQ_thymus   / EV_thymus;-->
            <ct:Variable symbId="EC_thymus">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_thymus"/>
                        <ct:SymbRef symbIdRef="EV_thymus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_thymus_v   = EC_thymus   / PC_thymus;-->
            <ct:Variable symbId="EC_thymus_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_thymus"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_thymus"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_thyroid    = EQ_thyroid  / EV_thyroid;-->
            <ct:Variable symbId="EC_thyroid">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_thyroid"/>
                        <ct:SymbRef symbIdRef="EV_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_thyroid_v  = EC_thyroid  / PC_thyroid;-->
            <ct:Variable symbId="EC_thyroid_v">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EC_thyroid"/>
                        <ct:SymbRef blkIdRef="pm1" symbIdRef="PC_thyroid"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # other compartment concentrations for which PC_ is not needed
            # because equal to 1 (PC_ven and PC_art) or because
            # they are not directly irrigated by blood (diffusion)-->
            
<!--            MC_gut_lumen  = MQ_gut_lumen  / MV_gut_lumen;-->
            <ct:Variable symbId="MC_gut_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_gut_lumen"/>
                        <ct:SymbRef symbIdRef="MV_gut_lumen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_stom_lumen = MQ_stom_lumen / MV_stom_lumen;-->
            <ct:Variable symbId="MC_stom_lumen">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_stom_lumen"/>
                        <ct:SymbRef symbIdRef="MV_stom_lumen"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_art        = MQ_art        / MV_art;-->
            <ct:Variable symbId="MC_art">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_art"/>
                        <ct:SymbRef symbIdRef="MV_art"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            MC_ven        = MQ_ven        / MV_ven;-->
            <ct:Variable symbId="MC_ven">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="MQ_ven"/>
                        <ct:SymbRef symbIdRef="MV_ven"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            C_amniot      = (Gestation ? Q_amniot   / V_amniot : 0);-->
            <ct:Variable symbId="C_amniot">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="divide">
                                <ct:SymbRef symbIdRef="Q_amniot"/>
                                <ct:SymbRef symbIdRef="V_amniot"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
<!--            C_placenta    = (Gestation ? Q_placenta / V_placenta : 0);-->
            <ct:Variable symbId="C_placenta">
                <ct:Assign>
                    <math:Piecewise>
                        <math:Piece>
                            <math:Binop op="divide">
                                <ct:SymbRef symbIdRef="Q_placenta"/>
                                <ct:SymbRef symbIdRef="V_placenta"/>
                            </math:Binop>
                            <math:Condition>
                                <math:LogicBinop op="eq">
                                    <ct:SymbRef blkIdRef="pm1" symbIdRef="Gestation"/>
                                    <ct:Real>1</ct:Real>
                                </math:LogicBinop>
                            </math:Condition>
                        </math:Piece>
                        <math:Piece>
                            <ct:Real>0</ct:Real>
                            <math:Condition>
                                <math:Otherwise/>
                            </math:Condition>
                        </math:Piece>
                    </math:Piecewise>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_ven        = EQ_ven / EV_ven;-->
            <ct:Variable symbId="EC_ven">
                <ct:Assign>
                    <math:Binop op="divide">
                        <ct:SymbRef symbIdRef="EQ_ven"/>
                        <ct:SymbRef symbIdRef="EV_ven"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            EC_art        = ((EF_blood - EF_lung) * EC_ven + EF_lung * EC_lung_v) /
            EF_blood;-->
            <ct:Variable symbId="EC_art">
                <ct:Assign>
                    <math:Binop op="divide">
                        <math:Binop op="plus">
                            <math:Binop op="times">
                                <math:Binop op="minus">
                                    <ct:SymbRef symbIdRef="EF_blood"/>
                                    <ct:SymbRef symbIdRef="EF_lung"/>
                                </math:Binop>
                                <ct:SymbRef symbIdRef="EC_ven"/>
                            </math:Binop>
                            <math:Binop op="times">
                                <ct:SymbRef symbIdRef="EF_lung"/>
                                <ct:SymbRef symbIdRef="EC_lung_v"/>
                            </math:Binop>
                        </math:Binop>
                        <ct:SymbRef symbIdRef="EF_blood"/>
                    </math:Binop>
                </ct:Assign>
            </ct:Variable>
            
<!--            # Differentials for the mother-->
            
<!--            dt(MQ_ing) = MQ_ing_rate;-->
            
<!--            dt(MQ_stom_lumen) = MQ_ing_rate - 
            (MFl_stom_lumen + MKa_stomach) * MC_stom_lumen;-->
            
<!--            dt(MQ_stomach )   = MKa_stomach * MC_stom_lumen +
            MF_stomach * (MC_art - MC_stomach_v);-->
            
<!--            dt(MQ_feces)      = MFl_gut_lumen * MC_gut_lumen;-->
            
<!--            dt(MQ_gut_lumen)  = MFl_stom_lumen * MC_stom_lumen + MKe_bile * MC_liver -
            MKa_gut * MC_gut_lumen - dt(MQ_feces);-->
            
<!--            dt(MQ_met_gut)    = MKm_gut * MQ_gut;-->
            
<!--            dt(MQ_gut)        = MKa_gut * MC_gut_lumen +
            MF_gut * (MC_art - MC_gut_v) - dt(MQ_met_gut);-->
            
<!--            dt(MQ_met_liver)  = MKm_liver * MQ_liver;-->
            
<!--            dt(MQ_liver)   = MF_eport    * MC_art        + MF_spleen * MC_spleen_v +
            MF_pancreas * MC_pancreas_v + MF_gut    * MC_gut_v +
            MF_stomach  * MC_stomach_v  - MF_liver  * MC_liver_v -
            MKe_bile    * MC_liver      - dt(MQ_met_liver);-->
            
<!--            dt(MQ_adip)     = MF_adip     * (MC_art - MC_adip_v);-->
<!--            dt(MQ_adrenal)  = MF_adrenal  * (MC_art - MC_adrenal_v);-->
<!--            dt(MQ_brain)    = MF_brain    * (MC_art - MC_brain_v);--><!--
            dt(MQ_breast)   = MF_breast   * (MC_art - MC_breast_v) - 
            (Lactation ? Fl_milk * MC_breast_v * PC_milk : 0);-->
            
<!--            dt(MQ_heart)    = MF_heart    * (MC_art - MC_heart_v);-->
            
<!--            dt(MQ_inh)      = MF_alv * MC_inh;-->
            
<!--            dt(MQ_exhaled)  = MF_alv * (MC_lung / PC_lung_over_air);-->
            
<!--            dt(MQ_met_lung) = MKm_lung * MQ_lung;-->
            
<!--            dt(MQ_lung)     = MF_blood * (MC_ven - MC_lung_v) + dt(MQ_inh) - 
            dt(MQ_exhaled) - dt(MQ_met_lung);-->
            
<!--            dt(MQ_urine)    = MKe_renal * MC_kidney;-->
            
<!--            dt(MQ_kidney)   = MF_kidney * (MC_art - MC_kidney_v) - dt(MQ_urine);-->
            
<!--            dt(MQ_marrow)   = MF_marrow   * (MC_art - MC_marrow_v);-->
<!--            dt(MQ_muscle)   = MF_muscle   * (MC_art - MC_muscle_v);-->
<!--            dt(MQ_other)    = MF_other    * (MC_art - MC_other_v);-->
<!--            dt(MQ_pancreas) = MF_pancreas * (MC_art - MC_pancreas_v);-->
<!--            dt(MQ_skin)     = MF_skin     * (MC_art - MC_skin_v);-->
<!--            dt(MQ_spleen)   = MF_spleen   * (MC_art - MC_spleen_v);-->
<!--            dt(MQ_thyroid)  = MF_thyroid  * (MC_art - MC_thyroid_v);-->
            
<!--            dt(MQ_art)      = MF_blood * (MC_lung_v - MC_art);-->
            
<!--            dt(MQ_ven)      = MC_skin_v    * MF_skin    + MC_heart_v   * MF_heart +
            MC_other_v   * MF_other   + MC_liver_v   * MF_liver +
            MC_adip_v    * MF_adip    + MC_adrenal_v * MF_adrenal +
            MC_marrow_v  * MF_marrow  + MC_breast_v  * MF_breast +
            MC_muscle_v  * MF_muscle  + MC_brain_v   * MF_brain +
            MC_thyroid_v * MF_thyroid + MC_uterus_v  * MF_uterus +
            MC_kidney_v  * MF_kidney  - MF_blood * MC_ven;-->
            
<!--            # Assumption of equal diffusion rate constant between uterus and placenta
            # and vice-versa. Mother-fetus exchanges at zero after birth 
            dt(MQ_uterus)  = MF_uterus   * (MC_art - MC_uterus_v) +
            (Gestation ? Kd_uter_pla * (C_placenta - MC_uterus) : 0);-->
            
<!--            # Transfer rate from amniotic fluid to placenta
            dtmp = Kd_pla_amniot * (C_placenta - C_amniot * PC_placenta / PC_amniot);-->
            
<!--            dt(Q_met_placenta) = (Gestation ? 
            Km_placenta * Q_placenta :
            -2E-5 * Q_met_placenta); # purging at birth-->
            
<!--            dt(Q_placenta) = (Gestation ?
            Kd_uter_pla * (MC_uterus - C_placenta) +
            EF_placenta * (EC_art    - C_placenta / PC_placenta) -
            dtmp - dt(Q_met_placenta) :
            -2E-5 * Q_placenta); # purging at birth-->
            
<!--            dt(Q_amniot)   = (Gestation ?
            dtmp - EKa_amniot * C_amniot + EKe_gut * EC_gut +
            EKe_bile * EC_liver :
            -2E-5 * Q_amniot); # purging at birth-->
            
            
        </StructuralModel>
            

    </ModelDefinition>
 
</PharmML>
