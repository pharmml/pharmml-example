<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns="http://www.pharmml.org/pharmml/0.9/PharmML"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.pharmml.org/pharmml/0.9/PharmML http://www.pharmml.org/pharmml/0.9/PharmML"
    xmlns:ct="http://www.pharmml.org/pharmml/0.9/CommonTypes"
    xmlns:ds="http://www.pharmml.org/pharmml/0.9/Dataset"
    xmlns:design="http://www.pharmml.org/pharmml/0.9/TrialDesign"
    xmlns:math="http://www.pharmml.org/pharmml/0.9/Maths"
    xmlns:po="http://www.pharmml.org/probonto/ProbOnto"
    xmlns:mdef="http://www.pharmml.org/pharmml/0.9/ModelDefinition"
    implementedBy="MJS" writtenVersion="0.8.1"
    metadataFile="collected_0.9_examples.rdf" id="i1">
    
    <!-- MODEL NAME -->
    <ct:Name>version0.9_allSpecExamples</ct:Name>
    
    <ct:Description>All code spippets</ct:Description>
    
    <!-- INDEPENDENT VARIABLE -->
    <IndependentVariable symbId="t"/>
    <IndependentVariable symbId="x"/>
    
    
    <!-- SYMBOL DEFINITION - RESUIDUAL ERROR MODEL -->
    <ct:FunctionDefinition symbId="constantErrorModel">
        <ct:FunctionArgument symbId="a"/>
        <ct:Definition>
            <ct:Assign>
                <ct:SymbRef symbIdRef="a"/>
            </ct:Assign>
        </ct:Definition>
    </ct:FunctionDefinition>
    
    <!-- testing user-defined trafos sin = sin(a+b*x) -->
    <ct:FunctionDefinition symbId="sinTrafo">
        <ct:FunctionArgument symbId="a"/>
        <ct:FunctionArgument symbId="b"/>
        <ct:FunctionArgument symbId="x"/>
        <ct:Definition>
            <ct:Assign>
                <math:Uniop op="sin">
                    <math:Binop op="plus">
                        <ct:SymbRef symbIdRef="a"/>
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="b"/>
                            <ct:SymbRef symbIdRef="x"/>
                        </math:Binop>
                    </math:Binop>
                </math:Uniop>
            </ct:Assign>
        </ct:Definition>
    </ct:FunctionDefinition>
    
    <!-- testing user-defined trafos BoxCox2Func -->
    <ct:FunctionDefinition symbId="BoxCox2Func">
        <ct:FunctionArgument symbId="lambda1"/>
        <ct:FunctionArgument symbId="lambda2"/>
        <ct:FunctionArgument symbId="y"/>
        <ct:Definition>
            <ct:Assign>
                <math:Piecewise>
                    <math:Piece>
                        <math:Binop op="divide">
                            <math:Binop op="minus">
                                <math:Binop op="power">
                                    <math:Binop op="plus">
                                        <ct:SymbRef symbIdRef="y"/>
                                        <ct:SymbRef symbIdRef="lambda2"/>
                                    </math:Binop>
                                    <ct:SymbRef symbIdRef="lambda1"/>
                                </math:Binop>
                                <ct:Real>1</ct:Real>
                            </math:Binop>
                            <ct:SymbRef symbIdRef="lambda1"/>
                        </math:Binop>
                        <math:Condition>
                            <math:LogicBinop op="neq">
                                <ct:SymbRef symbIdRef="lambda1"/>
                                <ct:Real>0</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                    </math:Piece>
                    <math:Piece>
                        <math:Uniop op="log">
                            <math:Binop op="plus">
                                <ct:SymbRef symbIdRef="y"/>
                                <ct:SymbRef symbIdRef="lambda2"/>
                            </math:Binop>
                        </math:Uniop>
                        <math:Condition>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="lambda1"/>
                                <ct:Real>0</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                    </math:Piece>
                </math:Piecewise>
            </ct:Assign>
        </ct:Definition>
    </ct:FunctionDefinition>
    

    <!-- BLOCK I: MODEL DEFINITION -->
    <ModelDefinition xmlns="http://www.pharmml.org/pharmml/0.9/ModelDefinition">
        
        <VariabilityModel blkId="vm1" type="parameterVariability">
            <Level symbId="subject"/>
        </VariabilityModel>
        
        <CovariateModel blkId="cm1">
            
<!--            POPULATION{
            pop1 : { type is template, covariate=[{ cov = W, rv ~ Normal1 (mean=70, stdev=13) }, { catCov=SEX, catRv~ Bernoulli1(probability=0.49) }] } 
            pop2 : { type is template, covariate=[{ cov = W, rv ~ Normal1 (mean=65, stdev=10) }, { catCov=SEX, catRv~ Bernoulli1(probability=0.55) }] } 
            }-->
            <Covariate symbId="Sex">
                <Categorical>
                    <Category catId="F"/>
                    <Category catId="M"/>
                </Categorical>
            </Covariate>
            
            <Covariate symbId="BW">
                <Continuous/>
            </Covariate>
            
            
            <Covariate symbId="GENOTYPE">        
                <Categorical>
                    <Category catId="GENOTYPE_cat_1"/>
                    <Category catId="GENOTYPE_cat_2"/>
                    <Category catId="GENOTYPE_cat_3"/>
                    <Category catId="GENOTYPE_cat_4"/>
                </Categorical>
            </Covariate>
            
            <Covariate symbId="t_GENOTYPE">        
                <Categorical>
                    <Category catId="G1" referenceCategory="true">
                        <!-- blkIdRef="cm1" could be used additionally if the reference covariate was  -->
                        <!-- declared in a different covariate model, e.g. "cm2" -->
                        <ct:CatRef symbIdRef="GENOTYPE" catIdRef="GENOTYPE_cat_1"/>
                    </Category>
                    <Category catId="G2">
                        <ct:CatRef symbIdRef="GENOTYPE" catIdRef="GENOTYPE_cat_2"/>
                        <ct:CatRef symbIdRef="GENOTYPE" catIdRef="GENOTYPE_cat_3"/>
                        <ct:CatRef symbIdRef="GENOTYPE" catIdRef="GENOTYPE_cat_4"/>
                    </Category>
                </Categorical>
            </Covariate>
            
            
        </CovariateModel>
        
        <ParameterModel blkId="pm1">
            
            <!-- Bayesian example - assign in RandomEffects -->
            <IndividualParameter symbId="CL">
                <StructuredModel>
                    <Transformation type="log"/>
                    <LinearCovariate>
                        <PopulationValue>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="POP_CL"/>
                            </ct:Assign>
                        </PopulationValue>
                        <Covariate>
                            <ct:SymbRef blkIdRef="cm1" symbIdRef="logtWT"/>
                            <FixedEffect>
                                <ct:Assign>
                                    <math:Binop op="plus">
                                        <ct:SymbRef symbIdRef="BETA_WT"/>
                                        <ct:SymbRef symbIdRef="BETA_CL"/>
                                    </math:Binop>
                                </ct:Assign>
                            </FixedEffect>
                        </Covariate>
                    </LinearCovariate>
                    <RandomEffects>
                        <ct:Assign>
                            <ct:VectorSelector>
                                <ct:SymbRef symbIdRef="ETA_CL_V_KA"/>
                                <ct:Cell>
                                    <ct:Assign>
                                        <ct:Int>1</ct:Int>
                                    </ct:Assign>
                                </ct:Cell>
                            </ct:VectorSelector>
                        </ct:Assign>
                    </RandomEffects>
                </StructuredModel>
            </IndividualParameter>
            
            
            <IndividualParameter symbId="V">
                <StructuredModel>
                    <Transformation type="log"/>
                    <LinearCovariate>
                        <PopulationValue>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="pop_V"/>
                            </ct:Assign>
                        </PopulationValue>
                        <Covariate>
                            <ct:SymbRef blkIdRef="cm1" symbIdRef="Sex"/>
                            <FixedEffect>
                                <ct:SymbRef symbIdRef="beta_V"/>
                                <Category catId="F"/>
                            </FixedEffect>
                        </Covariate>
                        
                        <!-- CORRECT VERSION if refering to cm1 and there declared categories for Sex -->
                        <Covariate>
                            <ct:SymbRef blkIdRef="cm1" symbIdRef="Sex"/>
                            <FixedEffect>
                                <ct:SymbRef symbIdRef="beta_V"/>
                                <ct:CatRef catIdRef="F"/>
                            </FixedEffect>
                        </Covariate>
                    </LinearCovariate>
                    <RandomEffects>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="eta_V"/>
                        </ct:Assign>
                    </RandomEffects>
                </StructuredModel>
            </IndividualParameter>
            
            
            <PopulationParameter symbId="a"/>
            <PopulationParameter symbId="b"/>
            <PopulationParameter symbId="c"/>
            <PopulationParameter symbId="r_ab"/>
            <PopulationParameter symbId="r_bc"/>
            <PopulationParameter symbId="r_ac"/>
            
            <Correlation>
                <ct:VariabilityReference>
                    <ct:SymbRef blkIdRef="vm1" symbIdRef="indiv"/>
                </ct:VariabilityReference>
                <Pairwise>
                    <RandomVariable1>
                        <ct:Assign>
                            <math:Uniop op="log">
                                <ct:SymbRef symbIdRef="a"/>
                            </math:Uniop>                            
                        </ct:Assign>
                    </RandomVariable1>
                    <RandomVariable2>
                        <ct:Assign>
                            <math:Uniop op="log">
                                <ct:SymbRef symbIdRef="c"/>
                            </math:Uniop>                            
                        </ct:Assign>
                    </RandomVariable2>
                    <CorrelationCoefficient>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="r_ac"/>
                        </ct:Assign>
                    </CorrelationCoefficient>
                </Pairwise>
            </Correlation>
            
            <Correlation deviationMatrixType="CorrMatrix">
                <ct:VariabilityReference>
                    <ct:SymbRef blkIdRef="vm1" symbIdRef="indiv"/>
                </ct:VariabilityReference>
                <ct:Assign>
                    <ct:Vector>
                        <ct:VectorElements>
                            <ct:Assign>
                                <math:Uniop op="log">
                                    <ct:SymbRef symbIdRef="a"/>
                                </math:Uniop>
                            </ct:Assign>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="b"/>
                            </ct:Assign>
                            <ct:Assign>
                                <math:Uniop op="logit">
                                    <ct:SymbRef symbIdRef="c"/>
                                </math:Uniop>
                            </ct:Assign>
                        </ct:VectorElements>
                    </ct:Vector>
                </ct:Assign>
                <Matrix matrixType="LowerTriangular">
                    <ct:MatrixRow>
                        <ct:Real>1</ct:Real>
                    </ct:MatrixRow>
                    <ct:MatrixRow>
                        <ct:SymbRef symbIdRef="r_ab"/>
                        <ct:Real>1</ct:Real>
                    </ct:MatrixRow>
                    <ct:MatrixRow>
                        <ct:SymbRef symbIdRef="r_ac"/>
                        <ct:SymbRef symbIdRef="r_bc"/>
                        <ct:Real>1</ct:Real>
                    </ct:MatrixRow>
                </Matrix>
            </Correlation>
            
        </ParameterModel>
        
        <StructuralModel blkId="sm1">
            <ct:Variable symbolType="real" symbId="A"/>
            
            <!-- INTEGRAL example -->
            <ct:Variable symbId="y">
                <ct:Assign>
                    <math:Integral>
                        <math:LowLimit>
                            <ct:SymbRef symbIdRef="x1"/>
                        </math:LowLimit>
                        <math:UpLimit>
                            <ct:SymbRef symbIdRef="x2"/>
                        </math:UpLimit>
                        <math:IntegrationVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="x"/>
                            </ct:Assign>
                        </math:IntegrationVariable>
                        <math:IntegralArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="A"/>
                            </ct:Assign>
                        </math:IntegralArgument>
                    </math:Integral>
                </ct:Assign>
            </ct:Variable>
            
            <!-- ODE TEMPLATE -->
            <!-- dY/dt = 1 (dummy RHS)  with IC Y(t=0) = 0-->
            <ct:Variable symbId="Y"/>
            <ct:DE type="ode">
                <ct:AssignStatement op="eq">
                    <math:Diff>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="t"/>
                        </math:DiffVariable>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Y"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:Diff>
                    <!-- dummy RHS expression -->
                    <ct:Real>1</ct:Real>
                </ct:AssignStatement>
                <ct:InitialCondition>
                    <ct:InitialValue>
                        <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
                    </ct:InitialValue>
                    <ct:InitialTime>
                        <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
                    </ct:InitialTime>
                </ct:InitialCondition>
            </ct:DE>
            
            <!-- PDE TEMPLATE -->
            <!-- e.g. delta^3 Y / delta t delta x^2 = RHS -->
            <!-- ID: Y(t=t0)=Y0, BC: x=x_min: LHS = RHS; x=x_max: LHS = RHS -->
            <ct:Variable symbId="Y"/>
            <ct:DE type="pde">
                <ct:AssignStatement op="eq">
                    <!-- LHS example -->
                    <math:PartialDiff>
                        <math:Degree>
                            <ct:Assign>
                                <ct:Real>3</ct:Real>
                            </ct:Assign>
                        </math:Degree>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="t"/>
                            <math:Degree>
                                <ct:Assign>
                                    <ct:Real>1</ct:Real>
                                </ct:Assign>
                            </math:Degree>
                        </math:DiffVariable>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="x"/>
                            <math:Degree>
                                <ct:Assign>
                                    <ct:Real>2</ct:Real>
                                </ct:Assign>
                            </math:Degree>
                        </math:DiffVariable>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Y"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:PartialDiff>
                    <!-- dummy RHS -->
                    <ct:Real>0</ct:Real>
                </ct:AssignStatement>
                <ct:InitialCondition>
                    <ct:ConditionVariable>
                        <ct:SymbRef symbIdRef="t"/>
                    </ct:ConditionVariable>
                    <ct:InitialValue>
                        <!-- DUMMY -->
                        <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
                    </ct:InitialValue>
                    <ct:InitialTime>
                        <!-- DUMMY -->
                        <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
                    </ct:InitialTime>
                </ct:InitialCondition>
                <ct:BoundaryCondition type="Neumann">   <!-- x=x_min -->
                    <ct:ConditionVariable>
                        <ct:SymbRef symbIdRef="x"/>
                    </ct:ConditionVariable>
                    <ct:BoundaryValue>
                        <ct:Assign>
                            <!-- x_min -->
                            <!-- DUMMY -->
                            <ct:Real>0</ct:Real>
                        </ct:Assign>
                    </ct:BoundaryValue>
                    <ct:AssignStatement op="eq">
                        <!-- ... -->
                        <!-- DUMMY -->
                        <ct:Real>0</ct:Real>
                        <ct:Real>0</ct:Real>
                    </ct:AssignStatement>
                </ct:BoundaryCondition>
                <!-- BC for x=x_max skipped -->
            </ct:DE>
            
            <!-- Divergence example -->
            <ct:Variable symbId="y">
                <ct:Assign>
                    <math:VectorCalcOp op="divergence">
                        <math:DiffVariables>
                            <ct:Assign>
                                <ct:Vector>
                                    <ct:VectorElements>
                                        <ct:SymbRef symbIdRef="x"/>
                                        <ct:SymbRef symbIdRef="y"/>
                                        <ct:SymbRef symbIdRef="z"/>
                                    </ct:VectorElements>
                                </ct:Vector>
                            </ct:Assign>
                        </math:DiffVariables>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="n"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:VectorCalcOp>
                </ct:Assign>
            </ct:Variable>            
            
            <!-- ODE with IC -->
            <!-- MCSim example -->
            <!-- dt(Q_ing) = Q_ing_rate     with    Q_ing(t=0) = Q_0-->
            <ct:Variable symbId="Q_ing"/>
            <ct:DE>
                <ct:AssignStatement op="eq">
                    <math:Diff>
                        <math:Degree>
                            <ct:Assign>
                                <ct:Int>1</ct:Int>
                            </ct:Assign>
                        </math:Degree>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="t"/>
                        </math:DiffVariable>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_ing"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:Diff>
                    <ct:SymbRef symbIdRef="Q_ing_rate"/>
                </ct:AssignStatement>
                <ct:InitialCondition>
                    <ct:InitialValue>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="Q_0"/>
                        </ct:Assign>
                    </ct:InitialValue>
                    <ct:InitialTime>
                        <ct:Assign>
                            <ct:Real>0</ct:Real>
                        </ct:Assign>
                    </ct:InitialTime>
                </ct:InitialCondition>
            </ct:DE>
            
<!--        \frac{d(V_T C_T)}{dt} &= Q_T \Big(C_A - \frac{C_T}{K_{P:T}}\Big) 
            V_T \frac{dC_T}{dt} &= Q_T \Big(C_A - \frac{C_T}{K_{P:T}}\Big)  -->
            <!-- ODE with expression on LHS -->
            <ct:Variable symbId="C_T"/>
            <ct:DE type="ode">
                <ct:AssignStatement op="eq">
                    <math:Diff>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="t"/>
                        </math:DiffVariable>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <math:Binop op="times">
                                    <ct:SymbRef symbIdRef="V_T"/>
                                    <ct:SymbRef symbIdRef="C_T"/>
                                </math:Binop>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:Diff>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Q_T"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_A"/>
                            <math:Binop op="divide">
                                <ct:SymbRef symbIdRef="C_T"/>
                                <ct:SymbRef symbIdRef="K_PT"/>
                            </math:Binop>
                        </math:Binop>
                    </math:Binop>
                </ct:AssignStatement>
            </ct:DE>
            <!-- 2nd equation -->
            <ct:DE type="ode">
                <ct:AssignStatement op="eq">
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="V_T"/>
                        <math:Diff>
                            <math:DiffVariable>
                                <ct:SymbRef symbIdRef="t"/>
                            </math:DiffVariable>
                            <math:DiffOpArgument>
                                <ct:Assign>
                                    <ct:SymbRef symbIdRef="C_T"/>
                                </ct:Assign>
                            </math:DiffOpArgument>
                        </math:Diff>
                    </math:Binop>
                    <math:Binop op="times">
                        <ct:SymbRef symbIdRef="Q_T"/>
                        <math:Binop op="minus">
                            <ct:SymbRef symbIdRef="C_A"/>
                            <math:Binop op="divide">
                                <ct:SymbRef symbIdRef="C_T"/>
                                <ct:SymbRef symbIdRef="K_PT"/>
                            </math:Binop>
                        </math:Binop>
                    </math:Binop>
                </ct:AssignStatement>
            </ct:DE>
            
            
            <!-- dt(Q_kidney)   = F_kidney   * (C_art - C_kidney_v) - dt(Q_urine) -->
            <ct:Variable symbId="Q_kidney"/>
            <ct:DE>
                <ct:AssignStatement op="and">
                    <math:Diff>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Q_kidney"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:Diff>
                    <math:Binop op="minus">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="F_kidney"/>
                            <math:Binop op="minus">
                                <ct:SymbRef symbIdRef="C_art"/>
                                <ct:SymbRef symbIdRef="C_kidney_v"/>
                            </math:Binop>
                        </math:Binop>
                        <math:Diff>
                            <!-- Degree and DiffVariable default to '1' and 't', respectively -->
                            <math:DiffOpArgument>
                                <ct:Assign>
                                    <ct:SymbRef symbIdRef="Q_urine"/>
                                </ct:Assign>
                            </math:DiffOpArgument>
                        </math:Diff>
                    </math:Binop>                    
                </ct:AssignStatement>
            </ct:DE> 
            
            
            <!-- basic PDE: delta^2 C / delta t delta x = 0 -->
            <ct:Variable symbId="C"/>
            <ct:DE type="pde">
                <ct:AssignStatement op="eq">
                    <math:PartialDiff>
                        <math:Degree>
                            <ct:Assign>
                                <ct:Real>2</ct:Real>
                            </ct:Assign>
                        </math:Degree>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="t"/>
                            <math:Degree>
                                <ct:Assign>
                                    <ct:Real>1</ct:Real>
                                </ct:Assign>
                            </math:Degree>
                        </math:DiffVariable>
                        <math:DiffVariable>
                            <ct:SymbRef symbIdRef="x"/>
                            <math:Degree>
                                <ct:Assign>
                                    <ct:Real>1</ct:Real>
                                </ct:Assign>
                            </math:Degree>
                        </math:DiffVariable>
                        <math:DiffOpArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="C"/>
                            </ct:Assign>
                        </math:DiffOpArgument>
                    </math:PartialDiff>
                    <ct:Real>0</ct:Real>
                </ct:AssignStatement>
            </ct:DE>
                
                <!-- messing about -->
                
                
                <!-- initial motivating example -->
            <ct:DerivativeVariable symbolType="real" symbId="A">
                <ct:Assign>
                    <math:Binop op="times">
                        <math:Uniop op="minus">
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="k"/>
                        </math:Uniop>
                        <ct:SymbRef symbIdRef="A"/>
                    </math:Binop>
                </ct:Assign>
                <ct:IndependentVariable>
                    <ct:SymbRef symbIdRef="t"/>
                </ct:IndependentVariable>
                <ct:InitialCondition>
                    <ct:InitialValue>
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="A0"/>
                        </ct:Assign>
                    </ct:InitialValue>
                    <ct:InitialTime>
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="t0"/>
                        </ct:Assign>
                    </ct:InitialTime>
                </ct:InitialCondition>
            </ct:DerivativeVariable>
                
        </StructuralModel>
        
        
        
        <!-- Multiple models allowed per block -->
        <ObservationModel blkId="om1">
            <ContinuousData>
                <PopulationParameter symbId="a1"/>
                <PopulationParameter symbId="a2"/>
                <PopulationParameter symbId="b"/>
                
                <RandomVariable symbId="epsilon_Cc">
                    <!-- omitted details -->
                </RandomVariable>
                <RandomVariable symbId="epsilon_E">
                    <!-- omitted details -->
                </RandomVariable>
                
                <General symbId="E_obs">
                    <ct:Assign>
                        <math:Binop op="plus">
                            <ct:SymbRef blkIdRef="sm1" symbIdRef="E"/>
                            <math:Binop op="times">
                                <math:FunctionCall>
                                    <ct:SymbRef symbIdRef="constantErrorModel"/>
                                    <!-- omitted arguments -->
                                </math:FunctionCall>
                                <ct:SymbRef symbIdRef="epsilon_E"/>
                            </math:Binop>
                        </math:Binop>
                    </ct:Assign>
                </General>
                
                <Standard symbId="Cc_obs">
                    <Output>
                        <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                    </Output>
                    <ErrorModel>
                        <ct:Assign>
                            <math:FunctionCall>
                                <ct:SymbRef symbIdRef="combinedErrorModel"/>
                                <!-- omitted arguments -->
                            </math:FunctionCall>
                        </ct:Assign>
                    </ErrorModel>
                    <ResidualError>
                        <ct:SymbRef symbIdRef="epsilon_Cc"/>
                    </ResidualError>
                </Standard>
                
            </ContinuousData>
        </ObservationModel>
        
        <!-- Models are allowed in conditionals - example 1 -->
        <ObservationModel blkId="om2">
            <ContinuousData>
                <PopulationParameter symbId="a1"/>
                <PopulationParameter symbId="a2"/>
                <PopulationParameter symbId="b"/>
                
                <RandomVariable symbId="epsilon_Cc">
                    <!-- omitted -->
                </RandomVariable>
                <RandomVariable symbId="epsilon_E">
                    <!-- omitted -->
                </RandomVariable>
                
                <!-- NEW -->
                <ct:Variable symbId="Cc_obs"/>
                <!-- /NEW -->
                
                <math:ConditionalStatement>
                    <math:If>
                        <math:Condition>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="FLAG"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                        <General symbIdRef="Cc_obs">
                            <ct:Assign>
                                <math:Binop op="plus">
                                    <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                                    <math:Binop op="times">
                                        <math:FunctionCall>
                                            <ct:SymbRef symbIdRef="constantErrorModel"/>
                                            <!-- omitted arguments -->
                                        </math:FunctionCall>
                                        <ct:SymbRef symbIdRef="epsilon_Cc"/>
                                    </math:Binop>
                                </math:Binop>
                            </ct:Assign>
                        </General>
                    </math:If>
                    <math:ElseIf>
                        <math:Condition>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="FLAG"/>
                                <ct:Real>2</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                        <Standard symbIdRef="Cc_obs">
                            <Output>
                                <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                            </Output>
                            <ErrorModel>
                                <ct:Assign>
                                    <math:FunctionCall>
                                        <ct:SymbRef symbIdRef="combinedErrorModel"/>
                                        <!-- omitted arguments -->
                                    </math:FunctionCall>
                                </ct:Assign>
                            </ErrorModel>
                            <ResidualError>
                                <ct:SymbRef symbIdRef="epsilon_Cc"/>
                            </ResidualError>
                        </Standard>
                    </math:ElseIf>
                </math:ConditionalStatement>
            </ContinuousData>
        </ObservationModel>
        
        <!-- Models are allowed in conditionals - example 2 -->
        <ObservationModel blkId="om3">
            <ContinuousData>
                <PopulationParameter symbId="a1"/>
                <PopulationParameter symbId="a2"/>
                <PopulationParameter symbId="b"/>
                
                <RandomVariable symbId="epsilon_Cc">
                    <!-- omitted -->
                </RandomVariable>
                
                <ct:Variable symbId="Cc_obs"/>
                
                <math:ConditionalStatement>
                    <math:If>
                        <math:Condition>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="FLAG"/>
                                <ct:Real>1</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                        <General symbIdRef="Cc_obs">
                            <ct:Assign>
                                <math:Binop op="plus">
                                    <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                                    <math:Binop op="times">
                                        <math:FunctionCall>
                                            <ct:SymbRef symbIdRef="constantErrorModel"/>
                                            <!-- omitted arguments -->
                                        </math:FunctionCall>
                                        <ct:SymbRef symbIdRef="epsilon_Cc"/>
                                    </math:Binop>
                                </math:Binop>
                            </ct:Assign>
                        </General>
                    </math:If>
                    <math:ElseIf>
                        <math:Condition>
                            <math:LogicBinop op="eq">
                                <ct:SymbRef symbIdRef="FLAG"/>
                                <ct:Real>2</ct:Real>
                            </math:LogicBinop>
                        </math:Condition>
                        <General symbIdRef="Cc_obs">
                            <Distribution>
                                <po:ProbOnto name="Normal1">
                                    <po:Parameter name="mean">
                                        <ct:Assign>
                                            <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                                        </ct:Assign>
                                    </po:Parameter>
                                    <po:Parameter name="stdev">
                                        <ct:Assign>
                                            <math:Binop op="plus">
                                                <ct:SymbRef symbIdRef="a2"/>
                                                <math:Binop op="times">
                                                    <ct:SymbRef symbIdRef="b"/>
                                                    <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                                                </math:Binop>
                                            </math:Binop>
                                        </ct:Assign>
                                    </po:Parameter>
                                </po:ProbOnto>
                            </Distribution>
                        </General>
                    </math:ElseIf>
                </math:ConditionalStatement>
                
            </ContinuousData>
        </ObservationModel>
        
        <!-- INTEGRAL example -->
        <ObservationModel blkId="om4">
            <ContinuousData>
                
                <ct:AssignStatement op="eq">
                    <math:Integral>
                        <math:LowLimit>
                            <ct:Assign>
                                <ct:Real>0</ct:Real>
                            </ct:Assign>
                        </math:LowLimit>
                        <math:UpLimit>
                            <ct:Assign>
                                <ct:Real>420</ct:Real>
                            </ct:Assign>
                        </math:UpLimit>
                        <math:IntegrationVariable>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="t"/>
                            </ct:Assign>
                        </math:IntegrationVariable>
                        <math:IntegralArgument>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="Ra"/>
                            </ct:Assign>
                        </math:IntegralArgument>
                    </math:Integral>
                    <math:Binop op="divide">
                        <math:Binop op="times">
                            <ct:SymbRef symbIdRef="D"/>
                            <ct:SymbRef symbIdRef="f"/>
                        </math:Binop>
                        <ct:SymbRef blkIdRef="cm1" symbIdRef="BW"/>
                    </math:Binop>
                </ct:AssignStatement>
                
                <!-- OM skipped -->
                
            </ContinuousData>
        </ObservationModel>
        
        <!-- BoxCox2 -->
        <ObservationModel blkId="BoxCox2">
            <ContinuousData>
                
                <PopulationParameter symbId="lambda1"/>
                <PopulationParameter symbId="lambda2"/>
                <PopulationParameter symbId="s"/>
                
                <RandomVariable symbId="eps">
                    <Distribution>
                        <po:ProbOnto name="StandardNormal1"/>
                    </Distribution>
                </RandomVariable>
                
                <Standard symbId="Y">
                    <Transformation type="BoxCox2">
                        <Parameter>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="lambda1"/>
                            </ct:Assign>
                        </Parameter>
                        <Parameter>
                            <ct:Assign>
                                <ct:SymbRef symbIdRef="lambda2"/>
                            </ct:Assign>
                        </Parameter>
                    </Transformation>
                    <Output>
                        <ct:SymbRef blkIdRef="sm1" symbIdRef="f"/>
                    </Output>
                    <ErrorModel>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="a"/>
                        </ct:Assign>
                    </ErrorModel>
                    <ResidualError>
                        <ct:SymbRef symbIdRef="eps"/>
                    </ResidualError>
                </Standard>
                
            </ContinuousData>
        </ObservationModel>

        <ObservationModel blkId="userDefinedTrafo">
            <ContinuousData>
                <PopulationParameter symbId="LAMBDA1"/>
                <PopulationParameter symbId="LAMBDA2"/>

                <RandomVariable symbId="eps">
                    <Distribution>
                        <po:ProbOnto name="StandardNormal1"/>
                    </Distribution>
                </RandomVariable>
                
                <!-- AUTOCORRELATION AUTOCORRELATION AUTOCORRELATION AUTOCORRELATION  -->
                <Autocorrelation type="independent"/>   <!-- indep -->
                
                <Autocorrelation type="exchangeable">   <!-- 5 steps -->
                    <TimeStepNumber>
                        <ct:Assign>
                            <ct:Int>5</ct:Int>
                        </ct:Assign>
                    </TimeStepNumber>
                    <CorrParameters>
                        <ct:Assign>
                            <ct:Vector>
                                <ct:VectorElements>     <!-- (n^2-n)/2 = 10 -->
                                    <ct:SymbRef symbIdRef="alpha_12"/>
                                    <ct:SymbRef symbIdRef="alpha_13"/>
                                    <ct:SymbRef symbIdRef="alpha_14"/>
                                    <ct:SymbRef symbIdRef="alpha_15"/>
                                    <ct:SymbRef symbIdRef="alpha_23"/>
                                    <ct:SymbRef symbIdRef="alpha_24"/>
                                    <ct:SymbRef symbIdRef="alpha_25"/>
                                    <ct:SymbRef symbIdRef="alpha_34"/>
                                    <ct:SymbRef symbIdRef="alpha_35"/>
                                    <ct:SymbRef symbIdRef="alpha_45"/>
                                </ct:VectorElements>
                            </ct:Vector>
                        </ct:Assign>
                    </CorrParameters>
                </Autocorrelation>
                
                <Autocorrelation type="oneDependent1">
                    <TimeStepNumber>
                        <ct:Assign>
                            <ct:Int>5</ct:Int>
                        </ct:Assign>
                    </TimeStepNumber>
                    <CorrParameters>
                        <ct:Assign>
                            <ct:Vector>
                                <ct:VectorElements>     <!-- n-1 = 4 coefficients -->
                                    <ct:SymbRef symbIdRef="alpha_1"/>
                                    <ct:SymbRef symbIdRef="alpha_2"/>
                                    <ct:SymbRef symbIdRef="alpha_3"/>
                                    <ct:SymbRef symbIdRef="alpha_4"/>
                                </ct:VectorElements>
                            </ct:Vector>
                        </ct:Assign>
                    </CorrParameters>
                </Autocorrelation>
                
                <Autocorrelation type="twoDependent">
                    <TimeStepNumber>
                        <ct:Assign>
                            <ct:Int>5</ct:Int>
                        </ct:Assign>
                    </TimeStepNumber>
                    <CorrParameters>
                        <ct:Assign>
                            <ct:Vector>
                                <ct:VectorElements>
                                    <ct:SymbRef symbIdRef="alpha_1"/>
                                    <ct:SymbRef symbIdRef="alpha_2"/>
                                </ct:VectorElements>
                            </ct:Vector>
                        </ct:Assign>
                    </CorrParameters>
                </Autocorrelation>
                
<!--                <Autocorrelation type="AR1">            <!-\- AR1 -\->
                    <TimeStepNumber>
                        <ct:Assign>
                            <ct:Int>5</ct:Int>
                        </ct:Assign>
                    </TimeStepNumber>
                    <CorrParameters>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="alpha"/>
                        </ct:Assign>
                    </CorrParameters>
                </Autocorrelation>-->
                
                <Autocorrelation type="exponential">    <!-- exp -->
                    <TimeStepNumber>
                        <ct:Assign>
                            <ct:Int>5</ct:Int>
                        </ct:Assign>
                    </TimeStepNumber>
                    <CorrParameters>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="alpha"/>
                        </ct:Assign>
                    </CorrParameters>
                </Autocorrelation>
                
                <Standard>
                    <Transformation type="userDefined">
                        <math:FunctionCall>
                            <ct:SymbRef symbIdRef="BoxCox2Func"/>
                            <math:FunctionArgument symbId="lambda1">
                                <ct:SymbRef symbIdRef="LAMBDA1"/>
                            </math:FunctionArgument>
                            <math:FunctionArgument symbId="lambda2">
                                <ct:SymbRef symbIdRef="LAMBDA2"/>
                            </math:FunctionArgument>
                            <math:FunctionArgument symbId="y">
                                <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                            </math:FunctionArgument>
                        </math:FunctionCall>
                    </Transformation>
                    <Output>
                        <ct:SymbRef blkIdRef="sm1" symbIdRef="Cc"/>
                    </Output>
                    <ErrorModel>
                        <ct:Assign>
                            <ct:SymbRef symbIdRef="a"/>
                        </ct:Assign>
                    </ErrorModel>
                    <ResidualError>
                        <ct:SymbRef symbIdRef="eps"/>
                    </ResidualError>
                </Standard>
                
            </ContinuousData>
        </ObservationModel>


    </ModelDefinition>
    
    <!-- BLOCK II: TRIAL DEFINITION -->
    <TrialDesign xmlns="http://www.pharmml.org/pharmml/0.9/TrialDesign">
        
        <mdef:DesignParameter symbId="dp1"/>
        
        <Interventions>
            <Administration oid="admin1">
                <Bolus>
                    <DoseAmount inputTarget="admType">
<!--                        <ct:SymbRef blkIdRef="sm1" symbIdRef="CENTRAL"/>-->
                        <TargetMapping blkIdRef="sm1">
                            <ds:Map admNumber="1"/>
                        </TargetMapping>
                        <ct:Assign>
                            <ct:Int>100</ct:Int>              
                        </ct:Assign>
                    </DoseAmount>
                    <DosingTimes>
                        <ct:Assign>
                            <ct:Real>0</ct:Real>
                        </ct:Assign>
                    </DosingTimes>
                </Bolus>
            </Administration>
            
            <Administration oid="t1"/>      <!-- DUMMY -->
        </Interventions>     
        
        
        <Observations>
            <Observation oid="sampleControl">
                <ObservationTimes>
                    <ct:Assign>
                        <ct:Vector>
                            <ct:VectorElements>
                                <ct:Real>0.5</ct:Real>
                                <ct:Real>2</ct:Real>
                                <ct:Real>16</ct:Real>
                                <ct:Real>30</ct:Real>
                            </ct:VectorElements>
                        </ct:Vector>
                    </ct:Assign>
                </ObservationTimes>
                <DeltaTime>
                    <ct:Assign>
                        <ct:Real>1</ct:Real>
                    </ct:Assign>
                </DeltaTime>
                <BQL>
                    <ct:Assign>
                        <ct:Real>0.1</ct:Real>
                    </ct:Assign>
                </BQL>
                <UQL>
                    <ct:Assign>
                        <ct:Real>10</ct:Real>
                    </ct:Assign>
                </UQL>
                <Continuous>
                    <ct:SymbRef blkIdRef="om1" symbIdRef="Y"/>
                </Continuous>
            </Observation>
            
            <Observation oid="window2">
                <ObservationTimes>
                    <ct:Assign>
                        <ct:Vector>
                            <ct:VectorElements>
                                <ct:Real>0.5</ct:Real>
                                <ct:Real>2</ct:Real>
                            </ct:VectorElements>
                        </ct:Vector>
                    </ct:Assign>
                </ObservationTimes>
                <Continuous>
                    <ct:SymbRef blkIdRef="om1" symbIdRef="Y"/>
                </Continuous>
            </Observation>
            
            <ObservationsCombination oid="sds">
                <Observations>
                    <ObservationRef oidRef="sampleControl"/>
                </Observations>
            </ObservationsCombination>
        </Observations>
        
        <!--        DESIGN_SPACES{
        DS{name=t1, element=amount, discrete=[50,100,200] }
        DS{name=t1, element=doseTime, range=[0,6], stage=1 }
        DS{name=t1, element=doseTime, range=[0,8], stage>1 }
        }-->
        
        <Covariates>
            
            <CovariateModel oid="CM5">

                <Covariate symbId="W">
                    <mdef:Continuous>
                        <mdef:Distribution>
                            <math:Piecewise>
                                <math:Piece>
                                    <ProbOnto name="Normal1" xmlns="http://www.pharmml.org/probonto/ProbOnto">
                                        <Parameter name="mean">
                                            <ct:Assign>
                                                <ct:Real>70</ct:Real>
                                            </ct:Assign>
                                        </Parameter>
                                        <Parameter name="stdev">
                                            <ct:Assign>
                                                <ct:Real>13</ct:Real>
                                            </ct:Assign>
                                        </Parameter>
                                    </ProbOnto>
                                    <math:Condition>
                                        <math:LogicBinop op="eq">
                                            <StudyArm/>
                                            <math:ArmRef oidRef="arm1"/>
                                        </math:LogicBinop>
                                    </math:Condition>
                                </math:Piece>
                                <math:Piece>
                                    <po:ProbOnto name="Normal1">
                                        <po:Parameter name="mean">
                                            <ct:Assign>
                                                <ct:Real>65</ct:Real>
                                            </ct:Assign>
                                        </po:Parameter>
                                        <po:Parameter name="stdev">
                                            <ct:Assign>
                                                <ct:Real>10</ct:Real>
                                            </ct:Assign>
                                        </po:Parameter>
                                    </po:ProbOnto>
                                    <math:Condition>
                                        <math:LogicBinop op="eq">
                                            <math:ArmRef oidRef="arm2"/>
                                            <ct:True/>
                                        </math:LogicBinop>
                                    </math:Condition>
                                </math:Piece>
                            </math:Piecewise>
                        </mdef:Distribution>
                    </mdef:Continuous>
                </Covariate>
            </CovariateModel>
            
            <CovariateModel oid="cm1">
                <Covariate symbId="Sex">
                    <Categorical xmlns="http://www.pharmml.org/pharmml/0.9/ModelDefinition">
                        <Category catId="F"/>
                        <Category catId="M"/>
                    </Categorical>
                </Covariate>
            </CovariateModel>
            
            <!-- oid ADDED -->
            <IndividualCovariates oid="ic1">
                <ds:DataSet>
                    <ds:Definition>
                        <ds:Column columnId="ID" valueType="real" columnNum="1"/>
                        <ds:Column columnId="WT" valueType="real" columnNum="2"/>
                    </ds:Definition>
                    <ds:ExternalFile oid="ef1">
                        <ds:path>myIndivCovariates.csv</ds:path>
                    </ds:ExternalFile>
                </ds:DataSet>
            </IndividualCovariates>
        </Covariates>
        <DesignSpaces>
            <DesignSpace oid="ds2">
                <ArmRef oidRef="arm1"/>
                <ArmSize>
                    <ct:Assign>
                        <ct:Interval>
                            <ct:LeftEndpoint>
                                <ct:Assign><ct:Real>0</ct:Real></ct:Assign>
                            </ct:LeftEndpoint>
                            <ct:RightEndpoint>
                                <ct:Assign><ct:Real>2</ct:Real></ct:Assign>
                            </ct:RightEndpoint>
                        </ct:Interval>
                    </ct:Assign>
                </ArmSize>
            </DesignSpace>
            
            <DesignSpace oid="ds1">
                <InterventionRef oidRef="t1"/>
                <DoseAmount>
                    <ct:Assign>
                        <ct:Interval>
                            <ct:LeftEndpoint>
                                <ct:Assign>
                                    <ct:Real>0</ct:Real>
                                </ct:Assign>
                            </ct:LeftEndpoint>
                            <ct:RightEndpoint>
                                <ct:Assign>
                                    <ct:Real>6</ct:Real>
                                </ct:Assign>
                            </ct:RightEndpoint>
                        </ct:Interval>
                    </ct:Assign>
                </DoseAmount>

                <StageDefinition>
                    <math:LogicBinop op="eq">
                        <Stage/>
                        <ct:Real>1</ct:Real>
                    </math:LogicBinop>
                </StageDefinition>
            </DesignSpace>
            
            <!-- example for Rikard with above DesignParameter dp1 -->
            <DesignSpace oid="ds3">
                <ct:SymbRef symbIdRef="dp1"/>
                <ct:Assign>
                    <ct:Interval>
                        <ct:LeftEndpoint>
                            <ct:Assign>
                                <ct:Real>0</ct:Real>
                            </ct:Assign>
                        </ct:LeftEndpoint>
                        <ct:RightEndpoint>
                            <ct:Assign>
                                <ct:Real>0</ct:Real>
                            </ct:Assign>
                        </ct:RightEndpoint>
                    </ct:Interval>
                </ct:Assign>
            </DesignSpace>
        </DesignSpaces>
                    
        <Arms>
            <Arm oid="arm1">
                <ArmSize>
                    <ct:Assign>
                        <ct:Int>30</ct:Int>
                    </ct:Assign>
                </ArmSize>
                <InterventionSequence>
                    <InterventionList>
                        <InterventionRef oidRef="admin1"/>
                    </InterventionList>
                    <Start>
                        <ct:Assign>
                            <ct:Real>0</ct:Real>
                        </ct:Assign>
                    </Start>
                </InterventionSequence>
                <ObservationSequence>
                    <ObservationList>
                        <ObservationRef oidRef="sampleControl"/>
                    </ObservationList>
                    <Start>
                        <ct:Assign>
                            <ct:Real>0</ct:Real>
                        </ct:Assign>
                    </Start>
                </ObservationSequence>
            </Arm>
        </Arms>
        
    </TrialDesign>

        
    <ModellingSteps xmlns="http://www.pharmml.org/pharmml/0.9/ModellingSteps">
        
        <TargetTool oid="tTool">
            <TargetToolName>PFIM</TargetToolName>
        </TargetTool>
        
        <EstimationStep oid="dsdas">
            
            <InterventionsReference>
                <ct:OidRef oidRef="t1"/>
            </InterventionsReference>
            
            <ObservationsReference>
                <ct:OidRef oidRef="sampleControl"/>
                <ct:OidRef oidRef="window2"/>
            </ObservationsReference>
            
            <!-- new element -->
            <CovariatesReference>
                <ct:OidRef oidRef="ic1"/>
            </CovariatesReference>
            
            <ParametersToEstimate>
                <ParameterEstimation>
                    <ct:SymbRef symbIdRef="d"/>
                    <InitialEstimate fixed="false">
                        <ct:Real>1</ct:Real>
                    </InitialEstimate>
                </ParameterEstimation>
                
                <!-- omitted elements -->
            </ParametersToEstimate>
            
            <Operation tool="Monolix" opType="estPop">
                <Algorithm definition="SAEM"/>
            </Operation>
            
            <Operation tool="NONMEM" opType="estPop">
                <Algorithm definition="FOCE"/>
            </Operation>
            
        </EstimationStep>
        
        <OptimalDesignStep oid="evaTask1">
            
            <DesignSpaceReference>
                <ct:OidRef oidRef="ds1"/>
                <ct:OidRef oidRef="ds2"/>
            </DesignSpaceReference>
            
            <InterventionsReference>
                <ct:OidRef oidRef="t1"/>
            </InterventionsReference>
            
            <ObservationsReference>
                <ct:OidRef oidRef="sampleControl"/>
                <ct:OidRef oidRef="window2"/>
            </ObservationsReference>
            
            <TargetToolReference>
                <ct:OidRef oidRef="tTool"/>
            </TargetToolReference>
            
            
            <OptimiseOn>
                <ArmSize/>
                <DoseAmount>
                    <ct:Assign>
                        <ct:Real>100</ct:Real>
                    </ct:Assign>
                </DoseAmount>
                <DosingTimes/>
                <Duration/>
                <NumberArms/>
                <NumberSamples>
                    <ct:Assign>
                        <ct:Real>20</ct:Real>
                    </ct:Assign>
                </NumberSamples>
                <NumberTimes/>
                <ObservationTimes/>
                <ct:SymbRef symbIdRef="tdoseB"/>
                <ct:SymbRef symbIdRef="SEX"/>
                <ct:SymbRef symbIdRef="Genp1"/>
            </OptimiseOn>           
            <FIM type="B"/>
            <Method>
                <Criterion type="A"/>
                <FIMfunction type="trInv">      <!-- redundant specification of the operator -->
                    <ct:Assign>
                        <math:MatrixUniop op="trace">
                            <math:MatrixUniop op="inverse">
                                <ct:SymbRef symbIdRef="FIM1"/>
                            </math:MatrixUniop>
                        </math:MatrixUniop>
                    </ct:Assign>
                </FIMfunction>
                <!--ALTERNATIVE for FIMfunction: 
                    using build-in operator types, here 'trInv' 
                    which is identical to the explicit expression 
                    above-->
                <!-- <FIMfunction type="trInv">     
                    <ct:Assign>
                        <ct:SymbRef symbIdRef="FIM1"/>
                    </ct:Assign>
                </FIMfunction>-->
                <ComputeFIM type="FO"/>
                <ApproximateFIM type="full"/>
                <TypeFIM type="population"/>
                <DesignType type="exact"/>
                <OptimizationAlgorithm type="FedorovWynn"/>
            </Method>
            <Cost>
                <TotalCost>
                    <ct:Assign>
                        <ct:Real>1.3</ct:Real>
                    </ct:Assign>
                </TotalCost>
                <CostFunction type="sample"/>
            </Cost>
            <PriorInformation>
                <ct:Matrix matrixType="Any">
                    <ct:MatrixRow>
                        <ct:Real>1.1</ct:Real><!-- omitted elements --><ct:Real>1.6</ct:Real>
                        <!-- omotted rows -->
                        <ct:Real>10.1</ct:Real><!-- omitted elements --><ct:Real>10.6</ct:Real>
                    </ct:MatrixRow>
                </ct:Matrix>
                <!-- ALTERNATIVE to Matrix: prior information matrix stored 
                    in an external file -->
                <!-- <File oid="priorIMfile">
                    <ds:path>myPriorIM.csv</ds:path>
                </File>-->
            </PriorInformation>
            <Compute>
                <GraphOnly>
                    <ct:Assign>
                        <ct:False/>
                    </ct:Assign>
                </GraphOnly>
                <PowerComparison>
                    <ct:Assign>
                        <ct:True/>
                    </ct:Assign>
                </PowerComparison>
                <NSubjectComparison>
                    <ct:Assign>
                        <ct:True/>
                    </ct:Assign>
                </NSubjectComparison>
                <PowerEquivalence>
                    <ct:Assign>
                        <ct:Real>0.8</ct:Real>
                    </ct:Assign>
                </PowerEquivalence>
                <NSubjectEquivalence>
                    <ct:Assign>
                        <ct:True/>
                    </ct:Assign>
                </NSubjectEquivalence>
                <EquivalenceRange>
                    <ct:Assign>
                        <ct:Interval>
                            <ct:LeftEndpoint>
                                <ct:Assign>
                                    <math:Uniop op="log">
                                        <ct:Real>0.8</ct:Real>
                                    </math:Uniop>
                                </ct:Assign>
                            </ct:LeftEndpoint>
                            <ct:RightEndpoint>
                                <ct:Assign>
                                    <math:Uniop op="log">
                                        <ct:Real>1.2</ct:Real>
                                    </math:Uniop>
                                </ct:Assign>
                            </ct:RightEndpoint>
                        </ct:Interval>
                    </ct:Assign>
                </EquivalenceRange>
                <TypeIError>
                    <ct:Assign>
                        <ct:Real>0.05</ct:Real>
                    </ct:Assign>
                </TypeIError>
                <TypeIIError>
                    <ct:Assign>
                        <ct:Real>0.9</ct:Real>
                    </ct:Assign>
                </TypeIIError>
            </Compute>
            
            <SoftwareSettings>
                <File oid="softSettingsOID">
                    <ds:path>mySettings.xml</ds:path>
                </File>
            </SoftwareSettings>
            
            <Operation tool="dfdfdf" opType="evaluation">
                <Property name="RtolEq">
                    <ct:Assign>
                        <ct:Real>1E-06</ct:Real>
                    </ct:Assign>
                </Property>
                <Property name="AtolEq">
                    <ct:Assign>
                        <ct:Real>1E-06</ct:Real>
                    </ct:Assign>
                </Property>
                <Property name="graph.logical">
                    <ct:Assign>
                        <ct:True/>
                    </ct:Assign>
                </Property>
                <Property name="log.logical">
                    <ct:Assign>
                        <ct:String>'y'</ct:String>
                    </ct:Assign>
                </Property>
                <Property name="graph.only">
                    <ct:Assign>
                        <ct:Real>0</ct:Real>
                    </ct:Assign>
                </Property>
                <Property name="y.range">
                    <ct:Assign><ct:Interval>
                        <ct:LeftEndpoint>
                            <ct:Assign>
                                <ct:Real>0</ct:Real>
                            </ct:Assign>
                        </ct:LeftEndpoint>
                        <ct:RightEndpoint>
                            <ct:Assign>
                                <ct:Real>10</ct:Real>
                            </ct:Assign>
                        </ct:RightEndpoint>
                    </ct:Interval></ct:Assign>
                </Property>
            </Operation>
                        
        </OptimalDesignStep>

        <!-- STEP DEPENDENCIES -->
        <StepDependencies>
            <Step>
                <ct:OidRef oidRef="evaTask1"/>
            </Step>
        </StepDependencies>
    </ModellingSteps>
</PharmML>
