<?xml version="1.0" encoding="UTF-8"?>
<PharmML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.pharmml.org/pharmml/0.6/PharmML"
    xsi:schemaLocation="http://www.pharmml.org/pharmml/0.6/PharmML http://www.pharmml.org/pharmml/0.6/PharmML"
    xmlns:math="http://www.pharmml.org/pharmml/0.6/Maths"
    xmlns:ct="http://www.pharmml.org/pharmml/0.6/CommonTypes"
    xmlns:ds="http://www.pharmml.org/pharmml/0.6/Dataset"
    xmlns:mstep="http://www.pharmml.org/pharmml/0.6/ModellingSteps"
    implementedBy="MJS" writtenVersion="0.7" id="i1">
    
    <ct:Name>Count data models - a template</ct:Name>
    
    <IndependentVariable symbId="t"/>
    
    <!-- MODEL -->
    <ModelDefinition xmlns="http://www.pharmml.org/pharmml/0.6/ModelDefinition">

        <ParameterModel blkId="pm1">
            <PopulationParameter symbId="lambda"/>
        </ParameterModel>
        
        <!-- OBSERVATIONS -->
        <ObservationModel blkId="om1">
            <Discrete>
                <CountData>
                    <CountVariable symbId="Y"/>
                    <NumberCounts symbId="k"/>

                    <IntensityParameter symbId="Lambda">
                        <!-- e.g. assignment for Lambda -->
                    </IntensityParameter>
                    
                    <!-- Using PharmML -->
                    <PMF linkFunction="log">
                        <math:LogicBinop op="eq">
                            <ct:SymbRef symbIdRef="Y"/>
                            <ct:SymbRef symbIdRef="k"/>
                        </math:LogicBinop>
                        <Distribution>
                            <ProbOnto name="Poisson">
                                <Parameter name="rate">
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Lambda"/>
                                    </ct:Assign>
                                </Parameter>
                            </ProbOnto>
                        </Distribution>
                    </PMF>
                    
                    <!-- ALTERNATIVELY explicit implementation -->
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!)-->
                    <PMF linkFunction="log">
                        <math:LogicBinop op="eq">
                            <ct:SymbRef symbIdRef="Y"/>
                            <ct:SymbRef symbIdRef="k"/>
                        </math:LogicBinop>
                        <ct:Assign>
                            <!-- -Lambda+k*log(Lambda)-log(k!) -->
                        </ct:Assign>
                    </PMF>
                </CountData>
            </Discrete>
        </ObservationModel>

        <ObservationModel blkId="om2">
            <Discrete>
                <CountData>
                    <CountVariable symbId="Y"/>
                    <NumberCounts symbId="k"/>
                    <PreviousCountVariable symbId="Yp"/>

                    <Dependance type="continuousMarkov">
                        <!-- ... or discreteMarkov -->
                    </Dependance>
                    
                    <IntensityParameter symbId="Lambda">
                        <!-- e.g. assignment for Lambda -->
                    </IntensityParameter>
                    
                    <DispersionParameter symbId="Delta">
                        <!-- e.g. assignment for Delta -->
                    </DispersionParameter>

                    <OverDispersionParameter symbId="Tau">
                        <!-- e.g. assignment for Tau -->
                    </OverDispersionParameter>
                    
                    <ZeroProbabilityParameter symbId="P0">
                        <!-- e.g. assignment for  -->
                    </ZeroProbabilityParameter>
                    
                    <MixtureProbabilityParameter symbId="Pi">
                        <!-- e.g. assignment for Pi -->
                    </MixtureProbabilityParameter>
                    
                    <!-- Using PharmML -->
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <math:LogicBinop op="eq">
                            <ct:SymbRef symbIdRef="Y"/>
                            <ct:SymbRef symbIdRef="k"/>
                        </math:LogicBinop>
                        <Distribution>
                            <ProbOnto name="Poisson">
                                <Parameter name="rate">
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Lambda"/>
                                    </ct:Assign>
                                </Parameter>
                            </ProbOnto>
                        </Distribution>
                    </PMF>
                    
                    <!-- ALTERNATIVELY explicit implementation -->
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <math:LogicBinop op="eq">
                            <ct:SymbRef symbIdRef="Y"/>
                            <ct:SymbRef symbIdRef="k"/>
                        </math:LogicBinop>
                        <ct:Assign>
                            <!-- -Lambda+k*log(Lambda)-log(k!) -->
                        </ct:Assign>
                    </PMF>
                </CountData>
            </Discrete>
        </ObservationModel>
        
        <ObservationModel blkId="om3">
            <Discrete>
                <CountData>
                    <CountVariable symbId="Y"/>
                    <NumberCounts symbId="k"/>
                    
                    <IntensityParameter symbId="Lambda">
                        <ct:Assign>
                            <ct:SymbRef blkIdRef="pm1" symbIdRef="lambda"/>
                        </ct:Assign>
                    </IntensityParameter>
                    
                    <!-- log(P(Y=k)) = -Lambda+k*log(Lambda)-log(k!) -->
                    <PMF linkFunction="log">
                        <Distribution>
                            <ProbOnto name="Poisson">
                                <Parameter name="rate">
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Lambda"/>
                                    </ct:Assign>
                                </Parameter>
                            </ProbOnto>
                        </Distribution>
                    </PMF>
                    
                    <!-- P(Y=k) = (Lambda^k * exp(-Lambda) / k! -->
                    <PMF linkFunction="identity">
                        <Distribution>
                            <ProbOnto name="Poisson">
                                <Parameter name="rate">
                                    <ct:Assign>
                                        <ct:SymbRef symbIdRef="Lambda"/>
                                    </ct:Assign>
                                </Parameter>
                            </ProbOnto>
                        </Distribution>
                    </PMF>
                </CountData>
            </Discrete>
        </ObservationModel>
    </ModelDefinition>

</PharmML>

